{"version":3,"sources":["utils/dates.js","config/authConfig.js","graph.jsx","constants/home/Global.js","constants/home/User.js","reducers/Global.js","constants/ErrorType.js","constants/ErrorSeverity.js","constants/Globals.js","reducers/Msal.js","constants/Msal.js","reducers/bpg/User.js","constants/bpg/User.js","reducers/bpg/Sproc200206.js","constants/bpg/Sproc200206.js","reducers/bpg/Sproc200221.js","constants/bpg/Sproc200221.js","reducers/bpg/Dialogs.js","constants/bpg/Dialogs.js","reducers/bpg/Kep13319.js","constants/bpg/Kep13319.js","reducers/bpg/CompareContainer.js","constants/bpg/CompareContainer.js","reducers/bpg/PartProdRate.js","constants/bpg/PartProdRate.js","reducers/bpg/UpcomingToolChanges.js","constants/bpg/UpcomingToolChanges.js","reducers/bpg/ToolChangeSummary.js","constants/bpg/ToolChangeSummary.js","reducers/index.js","reducers/bpg/index.js","constants/AppSet.js","actions/bpg/Dialogs.js","actions/bpg/User.js","actions/bpg/Sproc200206.js","actions/bpg/Sproc200221.js","actions/bpg/Kep13319.js","actions/bpg/Sagas.js","constants/bpg/Sagas.js","actions/bpg/CompareContainer.js","actions/bpg/PartProdRate.js","actions/bpg/UpcomingToolChanges.js","actions/bpg/ToolChangeSummary.js","actions/Global.js","actions/Msal.js","containers/AppMenu.js","components/AppMenu.js","constants/AppId.js","containers/CNC/SideMenu.js","components/CNC/SideMenu.js","components/OEE/BarChartLanding.js","components/OEE/LineChartLanding.js","components/OEE/Landing.js","containers/CNC/Landing.js","components/CNC/Table13319.js","containers/CNC/Table13319.js","components/CNC/View13319.js","containers/CNC/View13319.js","components/ToolbarAvatar.js","containers/ToolbarAvatar.js","components/CNC/DialogCompareContainer.js","containers/CNC/DialogCompareContainer.js","components/CNC/DialogUpcomingToolChanges.js","containers/CNC/DialogUpcomingToolChanges.js","components/CNC/TableCompareContainer.js","constants/BuildingKey.js","constants/BuildingCode.js","containers/CNC/TableCompareContainer.js","components/CNC/ViewCompareContainer.js","containers/CNC/ViewCompareContainer.js","components/CNC/TableUpcomingToolChanges.js","containers/CNC/TableUpcomingToolChanges.js","components/CNC/ViewUpcomingToolChanges.js","containers/CNC/ViewUpcomingToolChanges.js","components/CNC/DialogToolChangeSummary.js","containers/CNC/DialogToolChangeSummary.js","components/CNC/TableToolChangeSummary.js","containers/CNC/TableToolChangeSummary.js","components/CNC/ViewToolChangeSummary.js","containers/CNC/ViewToolChangeSummary.js","components/LinearIndeterminate.js","components/Tracker/App.js","containers/Tracker/App.js","components/OEE/Dialog200206.js","containers/OEE/Dialog200206.js","components/OEE/Table200206.js","containers/OEE/Table200206.js","containers/OEE/BarChart200221Scrap.js","components/OEE/BarChart200221Scrap.js","containers/OEE/BarChart200221DownTime.js","components/OEE/BarChart200221DownTime.js","containers/OEE/View200206.js","components/OEE/View200206.js","containers/OEE/SideMenu.js","components/OEE/SideMenu.js","containers/OEE/Landing.js","components/OEE/App.js","containers/OEE/App.js","components/CNC/App.js","containers/CNC/App.js","containers/Profit/SideMenu.js","components/Profit/SideMenu.js","components/Profit/BarChartLanding.js","components/Profit/LineChartLanding.js","components/Profit/Landing.js","containers/Profit/Landing.js","components/Profit/TablePartProdRate.js","containers/Profit/TablePartProdRate.js","components/Profit/ViewPartProdRate.js","containers/Profit/ViewPartProdRate.js","components/Profit/DialogPartProdRate.js","containers/Profit/DialogPartProdRate.js","components/Profit/App.js","containers/Profit/App.js","components/LaunchMenu.js","containers/LaunchMenu.js","components/SignIn.js","containers/SignIn.js","components/ErrorBoundary.jsx","components/graph.jsx","components/AppSwitch.js","containers/AppSwitch.js","containers/ProfileContent.js","components/ProfileContent.js","components/Authenticate.js","containers/Authenticate.js","serviceWorker.js","sagas/Users.js","sagas/Sproc200206.js","sagas/Sproc200221.js","sagas/UpcomingToolChanges.js","sagas/ToolChangeSummary.js","sagas/Kep13319.js","sagas/CompareContainer.js","sagas/PartProdRate.js","sagas/index.js","services/bpg.js","services/index.js","services/home.js","store.js","index.js"],"names":["moment","require","module","exports","FirstDayWeek","date","newDate","Date","getTime","startOf","format","LastDayWeek","endOf","FirstDayMonth","LastDayMonth","FirstDayQuarter","LastDayQuarter","msalConfig","auth","clientId","authority","redirectUri","system","loggerOptions","loggerCallback","level","message","containsPii","LogLevel","Error","console","error","Info","info","Verbose","debug","Warning","warn","logLevel","loginRequest","scopes","graphConfig","PUSH","SUBMITTING","SET_APPSET","SET_CURRENT_APP","SET_APP_ERROR","CLEAR_APP_ERROR","SET_CURRENT_ERROR","AUTHENTICATE_SAGA","SET_IS_AUTHENTICATED","SET_IS_ADMIN","SET_FIRSTNAME","SET_LASTNAME","SET_USERNAME","SET_EMAIL","SET_ROLES","REAUTHENTICATE","LOGOUT","today","firstDayOfWeek","lastDayOfWeek","firstDayOfMonth","lastDayOfMonth","firstDayOfQuarter","lastDayOfQuarter","common","process","initState","appSet","currentApp","submitting","appError","errorType","severity","Global","state","action","type","Object","assign","appId","msalInstance","PublicClientApplication","account","graph","profile","jobTitle","companyName","officeLocation","department","username","name","givenName","surName","initials","Msal","log","surname","substring","groups","company","displayName","isAuthenticated","isAdmin","roles","email","userName","firstName","lastName","User","sproc","table","total","limit","skip","data","Sproc200206","Sproc200221","openDialog200206","Dialogs","open","config","Kep13319","nodes","map","node","i","updateId","value","transDate","openCompareContainerDialog","CompareContainer","start_period","end_period","PartProdRate","Building_Key","Building_Code","UpcomingToolChanges","openDialogToolChangeSummary","startDate","endDate","ToolChangeSummary","RootReducer","history","combineReducers","router","connectRouter","BPG","OpenDialog200206","AuthenticateSaga","password","route","setSubmittingOff","SetIsAuthenticated","SetIsAdmin","SetRoles","SetEmail","SetUserName","SetFirstName","SetLastName","Sproc200206Fetch","Set200206Sproc","Set200206Table","Set200206Total","Set200206Limit","Set200206Skip","Set200206Data","Set200221Sproc","Set200221Table","Set200221Total","Set200221Limit","Set200221Skip","Set200221Data","SetNodes","UpdateNode","View200206","CompareContainerFetch","OpenCompareContainerDialog","PartProdRateFetch","startPeriod","endPeriod","UpcomingToolChangesFetch","SetUpcomingToolChangesSproc","SetUpcomingToolChangesSkip","FetchToolChangeSummary","SetToolChangeSummaryStartDate","SetToolChangeSummaryEndDate","SetToolChangeSummarySproc","SetToolChangeSummarySkip","Push","path","SetCurrentApp","Submitting","SetAppError","SetAccount","SetGraph","SetGroups","SetProfile","AppMenu","connect","dispatch","actions","app","errorSeverity","Logout","React","useState","anchorEl","setAnchorEl","useEffect","handleClose","handleOEE","handleCNC","handleLogout","logout","Fragment","CssBaseline","IconButton","color","onClick","event","currentTarget","Badge","badgeContent","AppSet","id","keepMounted","Boolean","onClose","MenuItem","SideMenu","params","List","ListSubheader","Divider","ListItem","button","ListItemIcon","ListItemText","primary","TABLE_LIST","pv","amt","BarChartLanding","list","this","width","height","margin","top","right","left","bottom","strokeDasharray","dataKey","fill","Component","uv","LineChartLanding","stroke","activeDot","r","PureComponent","jsfiddleUrl","useStyles","makeStyles","theme","root","display","container","paddingTop","spacing","paddingBottom","paper","padding","overflow","flexDirection","instructions","Landing","pathname","classes","clsx","Container","maxWidth","className","Grid","item","xs","md","lg","Paper","AppBar","position","Toolbar","style","fontSize","Typography","variant","g_firstPage","g_lastPage","location","search","hash","LandingComponent","useStyles1","flexShrink","marginLeft","TablePaginationActions","props","useTheme","page","onChangePage","disabled","aria-label","direction","useStyles2","minWidth","Table13319","setPage","rowsPerPage","setRowsPerPage","Math","max","ceil","length","emptyRows","min","TableContainer","component","Table","TableHead","TableRow","TableCell","align","TableBody","slice","row","key","scope","pcn","workcenter_Code","cnc","colSpan","TableFooter","TablePagination","rowsPerPageOptions","count","SelectProps","inputProps","native","newPage","er","onChangeRowsPerPage","rpp","parseInt","target","ActionsComponent","backgroundColor","palette","background","View13319","Box","p","bgcolor","gutterBottom","HtmlTooltip","withStyles","tooltip","typography","pxToRem","border","Tooltip","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","mixins","menuButton","marginRight","menuButtonHidden","title","flexGrow","appBarSpacer","content","fixedHeight","small","avatar","indigo","white","orange","getContrastText","deepOrange","purple","deepPurple","ToolbarAvatar","Avatar","DatePickerField","field","form","myLabel","other","currentError","errors","required","disableToolbar","label","helperText","onError","setFieldError","autoComplete","onChange","setFieldValue","KeyboardButtonProps","DialogCompareContainer","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogContentText","initialValues","onSubmit","values","setSubmitting","sd","start","ed","end","compareAsc","handleSubmit","utils","DateFnsUtils","justify","placeholder","DialogActions","Button","marginTop","header","s1","g_total","g_limit","g_skip","g_CompareContainerFetch","g_firstBuffPage","g_lastBuffPage","DialogUpcomingToolChanges","UpcomingToolChangesCreate","fetch","SetUpcomingToolChangesBuildingKey","SetUpcomingToolChangesBuildingCode","m","TableCompareContainer","CompareContainer_Key","TransDate","CNC","Name","Part_No","Serial_No","tst_Serial_No","Quantity","tst_Quantity","Container_Status","g_table","g_UpcomingToolChangesFetch","ViewCompareContainer","TableUpcomingToolChanges","primary_key","Assembly_No","Tool_Life","Current_Value","iMinutes_Remaining","iFastest_Cycle_Time","Last_Update","ViewUpcomingToolChanges","g_FetchToolChangeSummary","DialogToolChangeSummary","CreateToolChangeSummary","TableToolChangeSummary","Building_No","Operation_Code","Description","year_week_fmt","STD_Tool_Life","STD_CPU","Week_Tool_Life","Week_CPU","Tool_Change_Count","ViewToolChangeSummary","LinearIndeterminate","LinearProgress","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","drawerPaper","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","Tracker","ClearAppError","setOpen","match","useRouteMatch","edge","noWrap","Drawer","size","reason","g_sproc","g_Sproc200206Fetch","Dialog200206","Table200206","start_week","part_number","workcenter_code","planned_production_count","actual_production_count","actual_vrs_planned_percent","scrap_percent","downtime_minutes","BarChart200221Scrap","BarChart200221DownTime","g_start_period","g_end_period","g_PartProdRateFetch","TablePartProdRate","PartProdRate_Key","part_no","period","start_date","end_date","Rate","ViewPartProdRate","validationSchema","yup","shape","typeError","test","parent","buttons","DialogPartProdRate","SetPartProdRateStartPeriod","SetPartProdRateEndPeriod","touched","handleChange","setFieldTouched","change","e","persist","TextField","bind","secondary","main","submit","SignIn","useMsal","instance","useIsAuthenticated","alert","loginRedirect","SignInComponent","ErrorBoundary","hasError","setState","errorCode","children","callMsGraph","accessToken","a","headers","Headers","bearer","append","options","method","then","response","json","catch","GetProfile","AppSwitch","SetDepartment","accounts","useAccount","setGraphData","acquireTokenSilent","positions","detail","exact","InProgressComponent","inProgress","ErrorComponent","Authenticate","handleCloseSnackBar","interactionType","loadingComponent","errorComponent","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","window","hostname","unregister","navigator","serviceWorker","ready","registration","g_services","g_dispatch","handleAuthenticate","watchAuthenticate","watchLogout","authenticate","strategy","res","user","put","push","takeEvery","handleView200206","handleSproc200206Create","handleSproc200206Fetch","watchSproc200206Create","watchSproc200206Fetch","watchView200206","srv200206","srv200221","service","res1","record_count","find","query","$table","$limit","$skip","res2","res3","res4","$sort","ID","handleSproc200221Create","handleSproc200221Fetch","watchSproc200221Create","watchSproc200221Fetch","handleUpcomingToolChangesCreate","handleUpcomingToolChangesFetch","watchUpcomingToolChangesCreate","watchUpcomingToolChangesFetch","handleCreateToolChangeSummary","handleFetchToolChangeSummary","watchCreateToolChangeSummary","watchFetchToolChangeSummary","handleKep13319Fetch","watchKep13319Fetch","handleCompareContainerFetch","watchCompareContainerFetch","$startDate","$endDate","handlePartProdRateFetch","watchPartProdRateFetch","$startPeriod","$endPeriod","handlePush","watchPush","rootSaga","all","users","sproc200206","sproc200221","upcomingToolChanges","toolChangeSummary","kep13319","compareContainer","partProdRate","setSAGA","services","feathers","socketio","io","setupServices","socket","srv","configure","storageKey","msg","JSON","stringify","on","context","bpg","createBrowserHistory","sagaMiddleware","createSagaMiddleware","createStore","reducers","applyMiddleware","routerMiddleware","run","store","composeWithDevTools","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9e88a052.chunk.js","sourcesContent":["//var jstz = require('jstz');\nvar moment = require('moment');\n\n/* standard javascript \nfunction LastDayWeek(date)\n  {\n    var newDate = new Date(date.getTime());  // Duplicate date\n    var lastDayTS = newDate.getDate() - newDate.getDay() + 6;\n    var lastDay = new Date(newDate.setDate(lastDayTS));\n    lastDay.setHours(23,59,59,0);\n    return lastDay;\n \n  }\n\n  function FirstDayWeek(date)\n  {\n    var newDate = new Date(date.getTime());  // Duplicate date\n    var firstDayTS = newDate.getDate() - newDate.getDay();\n    var firstDay = new Date(newDate.setDate(firstDayTS));\n    firstDay.setHours(0,0,0,0);\n    return firstDay;\n \n  }\n\n  function FirstDayMonth(date)\n  {\n    var firstDay = new Date(date.getFullYear(), date.getMonth(), 1);\n    firstDay.setHours(0,0,0,0);\n    return firstDay;\n  }\n\n  function LastDayMonth(date)\n  {\n    var lastDay = new Date(date.getFullYear(), date.getMonth() + 1, 0);\n    lastDay.setHours(23,59,59,0);\n    return lastDay;\n  }\n\n  function addDays(theDate, days) {\n    return new Date(theDate.getTime() + days*24*60*60*1000);\n  }\n\n  */\n\n/*\nMariaDb does not work with datetime literals that include timezones. \n*/\nfunction FirstDayWeek(date) {\n  var newDate = new Date(date.getTime()); // Duplicate date\n\n  const firstDay = moment(newDate).startOf('week');\n  return firstDay.format('YYYY-MM-DDTHH:mm:ss');\n}\n\nfunction LastDayWeek(date) {\n  var newDate = new Date(date.getTime()); // Duplicate date\n  const lastDay = moment(newDate).endOf('week');\n  return lastDay.format('YYYY-MM-DDTHH:mm:ss');\n}\n\nfunction FirstDayMonth(date) {\n  var newDate = new Date(date.getTime()); // Duplicate date\n\n  const firstDay = moment(newDate).startOf('month');\n  return firstDay.format('YYYY-MM-DDTHH:mm:ss');\n}\n\nfunction LastDayMonth(date) {\n  var newDate = new Date(date.getTime()); // Duplicate date\n  const lastDay = moment(newDate).endOf('month');\n  return lastDay.format('YYYY-MM-DDTHH:mm:ss');\n}\n\nfunction FirstDayQuarter(date) {\n  var newDate = new Date(date.getTime()); // Duplicate date\n\n  const firstDay = moment(newDate).startOf('quarter');\n  return firstDay.format('YYYY-MM-DDTHH:mm:ss');\n}\n\nfunction LastDayQuarter(date) {\n  var newDate = new Date(date.getTime()); // Duplicate date\n  const lastDay = moment(newDate).endOf('quarter');\n  return lastDay.format('YYYY-MM-DDTHH:mm:ss');\n}\n\nmodule.exports = {\n  FirstDayWeek,\n  LastDayWeek,\n  FirstDayMonth,\n  LastDayMonth,\n  FirstDayQuarter,\n  LastDayQuarter,\n};\n","import { LogLevel } from \"@azure/msal-browser\";\n\n// Config object to be passed to Msal on creation\nexport const msalConfig = {\n    auth: {\n        clientId: \"d1fbb8f3-444f-467e-93ff-7272a56df4c7\",\n        authority: 'https://login.microsoftonline.com/b4b87e8f-df64-41ff-9ba4-a4930ebc804b', // This is your tenant info\n        redirectUri: 'https://moto',\n    },\n    system: {\n        loggerOptions: {\n            loggerCallback: (level, message, containsPii) => {\n                if (containsPii) {\t\n                    return;\t\n                }\n                switch (level) {\t\n                    case LogLevel.Error:\t\n                        console.error(message);\t\n                        return;\t\n                    case LogLevel.Info:\t\n                        console.info(message);\t\n                        return;\t\n                    case LogLevel.Verbose:\n                        console.debug(message);\t\n                        return;\t\n                    case LogLevel.Warning:\t\n                        console.warn(message);\t\n                        return;\t\n                }\n            },\n            logLevel: LogLevel.Verbose\n        }\n    }\n};\n// https://stackoverflow.com/questions/56266148/aad-how-do-you-send-an-interactive-authorization-request-to-resolve-aadsts650\n// https://developer.microsoft.com/en-us/graph restful api test app\n// Add here scopes for id token to be used at MS Identity Platform endpoints.\nexport const loginRequest = {\n    scopes: [\n        'User.Read',\n        'Mail.Send',\n      ]\n};\n/*\nconst options = {\n\tauthProvider,\n};\n\nconst client = Client.init(options);\n\nlet res = await client.api('/users/{id}/transitiveMemberOf')\n\t.get();\n*/\n// Add here the endpoints for MS Graph API services you would like to use.\n// https://docs.microsoft.com/en-us/graph/api/user-list-transitivememberof?view=graph-rest-1.0&tabs=javascript\nexport const graphConfig = {\n    graphMeEndpoint: \"https://graph.microsoft.com/v1.0/me\",\n    memberOfEndpoint: \"https://graph.microsoft.com/v1.0/me/transitiveMemberOf\",\n    sendMailEndPoint: \"https://graph.microsoft.com/v1.0/me/sendMail\",\n    profileEndPoint: \"https://graph.microsoft.com/beta/me/profile\",\n};\n\n/*\nhttps://login.microsoftonline.com/b4b87e8f-df64-41ff-9ba4-a4930ebc804b/oauth2/v2.0/authorize\nhttps://login.microsoftonline.com/{{TenantID}}/oauth2/v2.0/token\nhttps://login.microsoftonline.com/b4b87e8f-df64-41ff-9ba4-a4930ebc804b/oauth2/v2.0/token\n*/\n\n","import React from \"react\";\nimport { graphConfig } from \"./config/authConfig\";\n\nexport async function callMsGraph(accessToken) {\n    const headers = new Headers();\n    const bearer = `Bearer ${accessToken}`;\n\n    headers.append(\"Authorization\", bearer);\n\n    const options = {\n        method: \"GET\",\n        headers: headers\n    };\n\n    return fetch(graphConfig.graphMeEndpoint, options)\n        .then(response => response.json())\n        .catch(error => console.log(error));\n}\n\nexport const ProfileData = (props) => {\n    return (\n        <div id=\"profile-div\">\n            <p><strong>Title: </strong> {props.graphData.jobTitle}</p>\n            <p><strong>Mail: </strong> {props.graphData.mail}</p>\n            <p><strong>Phone: </strong> {props.graphData.businessPhones[0]}</p>\n            <p><strong>Location: </strong> {props.graphData.officeLocation}</p>\n        </div>\n    );\n};\n","// No Reducer\nexport const PUSH = 'PUSH'\n\n// Global Reducer\nexport const SUBMITTING = 'SUBMITTING'\nexport const SET_APPSET ='SET_APPSET'\nexport const SET_CURRENT_APP ='SET_CURRENT_APP'\nexport const SET_APP_ERROR ='SET_APP_ERROR'\nexport const CLEAR_APP_ERROR = 'CLEAR_APP_ERROR'\nexport const SET_CURRENT_ERROR ='SET_CURRENT_ERROR'\n\n","// User Reducer\nexport const AUTHENTICATE_SAGA = 'AUTHENTICATE_SAGA'\nexport const SET_IS_AUTHENTICATED = 'SET_IS_AUTHENTICATED'\nexport const SET_IS_ADMIN = 'SET_IS_ADMIN'\nexport const SET_FIRSTNAME = 'SET_FIRSTNAME'\nexport const SET_LASTNAME = 'SET_LASTNAME'\nexport const SET_USERNAME = 'SET_USERNAME'\nexport const SET_EMAIL = 'SET_EMAIL'\nexport const SET_ROLES = 'SET_ROLES'\nexport const REAUTHENTICATE = 'REAUTHENTICATE'\nexport const LOGOUT = 'LOGOUT'\n\n","import * as types from '../constants/ActionTypes';\nimport * as errorType from '../constants/ErrorType';\nimport * as errorSeverity from '../constants/ErrorSeverity';\nimport * as common from '@bgroves/common';\nimport {\n  FirstDayWeek,\n  LastDayWeek,\n  FirstDayMonth,\n  LastDayMonth,\n  FirstDayQuarter,\n  LastDayQuarter,\n} from '../utils/dates';\n\nvar today = new Date();\nvar firstDayOfWeek = FirstDayWeek(today);\nvar lastDayOfWeek = LastDayWeek(today);\nvar firstDayOfMonth = FirstDayMonth(today);\nvar lastDayOfMonth = LastDayMonth(today);\nvar firstDayOfQuarter = FirstDayQuarter(today);\nvar lastDayOfQuarter = LastDayQuarter(today);\ncommon.log(\n  `today: ${today},firstDayOfWeek:${firstDayOfWeek},lastDayOfWeek:${lastDayOfWeek},firstDayOfMonth:${firstDayOfMonth},lastDayOfMonth:${lastDayOfMonth}`,\n);\ncommon.log(`process.env.REACT_APP_SET=${process.env.REACT_APP_SET}`);\n\nconst initState = {\n  appSet: process.env.REACT_APP_SET,\n  currentApp: 0, // 0 = none,1=OEE,2=CNC\n  submitting: false, // Used by forms/dialogs to disable buttons when saga is running.\n  firstDayOfWeek,\n  lastDayOfWeek,\n  firstDayOfMonth,\n  lastDayOfMonth,\n  firstDayOfQuarter,\n  lastDayOfQuarter,\n  appError: {\n    // Used by SnackBar in App.js to show any message to user.\n    error: false,\n    message: '',\n    errorType: errorType.NONE,\n    severity: errorSeverity.NONE,\n  },\n};\n/*\nerror: {\n  error:false,\n  message:\"\",\n  type: errorType.NONE,\n  severity:errorSeverity.NONE\n}\n*/\nconst Global = (state = initState, action) => {\n  switch (action.type) {\n    case types.SUBMITTING: {\n      // Keep a reference to the service object created in sockets initialization code.\n      return Object.assign({}, state, {\n        submitting: action.submitting,\n      });\n    }\n    case types.SET_APPSET: {\n      // Keep a reference to the service object created in sockets initialization code.\n      return Object.assign({}, state, {\n        appSet: action.appSet,\n      });\n    }\n    case types.SET_APP_ERROR: {\n      return {\n        ...state,\n        appError: {\n          ...state.appError,\n          error: true,\n          message: action.message,\n          errorType: errorType.NONE,\n          severity: errorSeverity.NONE,\n        },\n      };\n    }\n    case types.CLEAR_APP_ERROR: {\n      return {\n        ...state,\n        appError: {\n          ...state.appError,\n          error: false,\n          message: '',\n          errorType: errorType.NONE,\n          severity: errorSeverity.NONE,\n        },\n      };\n    }\n    case types.SET_CURRENT_APP: {\n      // Keep a reference to the service object created in sockets initialization code.\n      return Object.assign({}, state, {\n        currentApp: action.appId,\n      });\n    }\n    default:\n      return state;\n  }\n};\n\nexport default Global;\n","export const NONE = 0\nexport const SAGA = 10\nexport const AUTHENTICATION = 20\nexport const DATE = 30\nexport const VALIDATION = 40","export const NONE = 0\nexport const LOW = 10\nexport const MEDIUM = 20\nexport const HIGH = 30\n","// No Reducer\nexport const PUSH = 'PUSH'\n\n// Global Reducer\nexport const SUBMITTING = 'SUBMITTING'\nexport const SET_APPSET ='SET_APPSET'\nexport const SET_CURRENT_APP ='SET_CURRENT_APP'\nexport const SET_APP_ERROR ='SET_APP_ERROR'\nexport const CLEAR_APP_ERROR = 'CLEAR_APP_ERROR'\nexport const SET_CURRENT_ERROR ='SET_CURRENT_ERROR'\n","import * as types from '../constants/ActionTypes';\nimport { PublicClientApplication } from \"@azure/msal-browser\";\nimport { msalConfig, loginRequest } from \"../config/authConfig\";\n\nconst msalInstance = new PublicClientApplication(msalConfig);\n// You can't login here...\n// msalInstance.loginRedirect(loginRequest);\n\n// common.log(`process.env.REACT_APP_SET=${process.env.REACT_APP_SET}`);\n\nconst initState = {\n  msalInstance: msalInstance, \n  account:null,\n  graph:null,\n  profile:null,\n  jobTitle:null,\n  companyName:null,\n  officeLocation:null,\n  department:null,\n  username:null,\n  name:null,\n  givenName:null,\n  surName:null,\n  initials:null,\n};\n\nconst Msal = (state = initState, action) => {\n  switch (action.type) {\n    case types.SET_MSAL: {\n      console.log(`in SetMsal`);\n      // Keep a reference to the service object created in sockets initialization code.\n      return Object.assign({}, state, {\n        msalInstance: action.msalInstance,\n      });\n    }\n    case types.SET_ACCOUNT: {\n      console.log(`in SetAccount ${action.account}`);\n      return Object.assign({}, state, {\n        account: action.account,\n        username: action.account.username,\n        name: action.account.name,\n      });\n    }\n    case types.SET_GRAPH: {\n      console.log(`in SetGraph ${action.graph}`);\n      return Object.assign({}, state, {\n        graph: action.graph,\n        givenName: action.graph.givenName,\n        surName: action.graph.surname,\n        initials: action.graph.givenName.substring(0, 1)+action.graph.surname.substring(0, 1),\n      });\n    }\n    case types.SET_GROUPS: {\n      console.log(`in SetGroups ${action.groups}`);\n      return Object.assign({}, state, {\n        groups: action.groups,\n      });\n    }\n    case types.SET_PROFILE: {\n      console.log(`in SetProfile ${action.profile}`);\n      return Object.assign({}, state, {\n        profile: action.profile,\n        jobTitle: action.profile.jobTitle,\n        companyName: action.profile.company.displayName,\n        officeLocation: action.profile.company.officeLocation,\n      });\n    }\n    case types.SET_DEPARTMENT: {\n      console.log(`in SetDepartment ${action.department}`);\n      return Object.assign({}, state, {\n        department: action.department,\n      });\n    }\n    default:\n      return state;\n  }\n};\n\nexport default Msal;\n","// Msal Reducer\nexport const GET_MSAL ='GET_MSAL'\nexport const SET_MSAL ='SET_MSAL'\nexport const GET_ACCOUNT ='GET_ACCOUNT'\nexport const SET_ACCOUNT ='SET_ACCOUNT'\nexport const GET_GRAPH ='GET_GRAPH'\nexport const SET_GRAPH ='SET_GRAPH'\nexport const SET_GROUPS ='SET_GROUPS'\nexport const SET_PROFILE ='SET_PROFILE'\nexport const SET_DEPARTMENT ='SET_DEPARTMENT'\n\n","import * as types from '../../constants/ActionTypes'\n\n\nconst initState = {\n  isAuthenticated:false,\n  isAdmin:false,\n  roles:[],\n  email:'',\n  userName: '',\n  firstName:'',\n  lastName:''\n}\n\n\nconst User = (state = initState, action) => {\n  switch (action.type) {\n    case types.SET_IS_AUTHENTICATED:\n    {\n      // Keep a reference to the service object created in sockets initialization code.\n      return Object.assign({}, state, {\n         isAuthenticated: action.isAuthenticated\n       })\n    }\n    case types.SET_IS_ADMIN:\n    {\n      // Keep a reference to the service object created in sockets initialization code.\n      return Object.assign({}, state, {\n         isAdmin: action.isAdmin\n       })\n    }\n    case types.SET_ROLES:\n    {\n      return Object.assign({}, state, {\n        roles: action.roles\n      })\n    }\n    case types.SET_USERNAME:\n    {\n      // Keep a reference to the service object created in sockets initialization code.\n      return Object.assign({}, state, {\n         userName: action.userName\n       })\n\n    }\n    case types.SET_EMAIL:\n    {\n      // Keep a reference to the service object created in sockets initialization code.\n      return Object.assign({}, state, {\n         email: action.email\n       })\n\n    }\n    case types.SET_FIRSTNAME:\n    {\n      // Keep a reference to the service object created in sockets initialization code.\n      return Object.assign({}, state, {\n         firstName: action.firstName\n       })\n\n    }\n    case types.SET_LASTNAME:\n    {\n      // Keep a reference to the service object created in sockets initialization code.\n      return Object.assign({}, state, {\n         lastName: action.lastName\n       })\n\n    }\n    default:\n      return state\n  }\n}\n\nexport default User\n","// User Reducer\nexport const AUTHENTICATE_SAGA = 'AUTHENTICATE_SAGA'\nexport const SET_IS_AUTHENTICATED = 'SET_IS_AUTHENTICATED'\nexport const SET_IS_ADMIN = 'SET_IS_ADMIN'\nexport const SET_FIRSTNAME = 'SET_FIRSTNAME'\nexport const SET_LASTNAME = 'SET_LASTNAME'\nexport const SET_USERNAME = 'SET_USERNAME'\nexport const SET_EMAIL = 'SET_EMAIL'\nexport const SET_ROLES = 'SET_ROLES'\nexport const REAUTHENTICATE = 'REAUTHENTICATE'\nexport const LOGOUT = 'LOGOUT'\n\n","import * as types from \"../../constants/ActionTypes\";\n\nconst initState = {\n  sproc: '',\n  table: '',\n  total: 0,  // total number of records in dataset\n  limit: 0,  // how many records returned in one SPROC call\n  skip: 0,\n  data: []  // dataset returned by SPROC call.\n};\n\nconst Sproc200206 = (state = initState, action) => {\n  switch (action.type) {\n    case types.SET_200206_SPROC: {\n      return {\n        ...state,\n        sproc: action.sproc\n      }\n    }\n    case types.SET_200206_TABLE: {\n      return {\n        ...state,\n        table: action.table\n      }\n    }\n    case types.SET_200206_TOTAL: {\n      return {\n        ...state,\n        total: action.total\n      };\n    }\n    case types.SET_200206_LIMIT: {\n      return {\n        ...state,\n        limit: action.limit\n      };\n    }\n    case types.SET_200206_SKIP: {\n      return {\n        ...state,\n        skip: action.skip\n      };\n    }\n    case types.SET_200206_DATA: {\n      return {\n        ...state,\n        data: action.data\n      };\n    }\n    /*\n    TWO Options to add item to array\n    case ADD_ITEM :\n    return {\n        ...state,\n        arr: [...state.arr, action.newItem]\n    }\n    case ADD_ITEM :\n    return {\n        ...state,\n        arr: state.arr.concat(action.newItem)\n    }\n    */\n    default:\n      return state\n\n  }\n};\nexport default Sproc200206;\n","export const SPROC200206_CREATE = 'SPROC200206_CREATE'\nexport const SPROC200206_FETCH = 'SPROC200206_FETCH'\nexport const SET_200206_SPROC = 'SET_200206_SPROC'\nexport const SET_200206_TABLE = 'SET_200206_TABLE'\nexport const SET_200206_TOTAL = 'SET_200206_TOTAL'\nexport const SET_200206_LIMIT = 'SET_200206_LIMIT'\nexport const SET_200206_SKIP = 'SET_200206_SKIP'\nexport const SET_200206_DATA = 'SET_200206_DATA'\n","import * as types from \"../../constants/ActionTypes\";\n\nconst initState = {\n  sproc: '',\n  table: '',\n  total: 0,\n  limit: 0,\n  skip: 0,\n  data: []\n};\n\nconst Sproc200221 = (state = initState, action) => {\n  switch (action.type) {\n    case types.SET_200221_SPROC: {\n      return {\n        ...state,\n        sproc: action.sproc\n      }\n    }\n    case types.SET_200221_TABLE: {\n      return {\n        ...state,\n        table: action.table\n      }\n    }\n    case types.SET_200221_TOTAL: {\n      return {\n        ...state,\n        total: action.total\n      };\n    }\n    case types.SET_200221_LIMIT: {\n      return {\n        ...state,\n        limit: action.limit\n      };\n    }\n    case types.SET_200221_SKIP: {\n      return {\n        ...state,\n        skip: action.skip\n      };\n    }\n    case types.SET_200221_DATA: {\n      return {\n        ...state,\n        data: action.data\n      };\n    }\n    /*\n    TWO Options to add item to array\n    case ADD_ITEM :\n    return {\n        ...state,\n        arr: [...state.arr, action.newItem]\n    }\n    case ADD_ITEM :\n    return {\n        ...state,\n        arr: state.arr.concat(action.newItem)\n    }\n    */\n    default:\n      return state\n\n  }\n};\nexport default Sproc200221;\n","export const SPROC200221_CREATE = 'SPROC200221_CREATE'\nexport const SPROC200221_FETCH = 'SPROC200221_FETCH'\nexport const SET_200221_SPROC = 'SET_200221_SPROC'\nexport const SET_200221_TABLE = 'SET_200221_TABLE'\nexport const SET_200221_TOTAL = 'SET_200221_TOTAL'\nexport const SET_200221_LIMIT = 'SET_200221_LIMIT'\nexport const SET_200221_SKIP = 'SET_200221_SKIP'\nexport const SET_200221_DATA = 'SET_200221_DATA'\n","import * as types from \"../../constants/ActionTypes\";\n\nconst initState = {\n  openDialog200206: false\n};\n\nconst Dialogs = (state = initState, action) => {\n  switch (action.type) {\n    case types.OPEN_DIALOG_200206: {\n      return {\n        ...state,\n        openDialog200206: action.open\n      }\n    }\n    /*\n    TWO Options to add item to array\n    case ADD_ITEM :\n    return {\n        ...state,\n        arr: [...state.arr, action.newItem]\n    }\n    case ADD_ITEM :\n    return {\n        ...state,\n        arr: state.arr.concat(action.newItem)\n    }\n    */\n    default:\n      return state\n\n  }\n};\nexport default Dialogs;\n","// Dialogs\nexport const OPEN_DIALOG_200206 = 'OPEN_DIALOG_200206'\n\n","import * as types from '../../constants/ActionTypes';\nconst config = require('../../config/config.json');\n\nconst Kep13319 = (state = config, action) => {\n  switch (action.type) {\n    case types.UPDATE_NODE: {\n      return {\n        ...state,\n        nodes: state.nodes.map((node, i) =>\n          i === action.updateId ? { ...node, value: action.value, transDate: action.transDate} : node,\n        ),\n      };\n    }\n    case types.SET_NODES: {\n      return {\n        ...state,\n        nodes: action.nodes,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default Kep13319;\n","// Kep13319 Reducer\nexport const SET_NODES = 'SET_NODES'\nexport const UPDATE_NODE = 'UPDATE_NODE'\nexport const KEP13319_FETCH = 'KEP13319_FETCH'\n","import * as types from \"../../constants/ActionTypes\";\n\nconst initState = {\n  openCompareContainerDialog: false,\n  total: 0,  // total number of records in dataset\n  limit: 0,  // how many records returned in one call\n  skip: 0,\n  data: []  // dataset returned by fetch.\n};\n\nconst CompareContainer = (state = initState, action) => {\n  switch (action.type) {\n    case types.SET_COMPARE_CONTAINER_TOTAL: {\n      return {\n        ...state,\n        total: action.total\n      };\n    }\n    case types.SET_COMPARE_CONTAINER_LIMIT: {\n      return {\n        ...state,\n        limit: action.limit\n      };\n    }\n    case types.SET_COMPARE_CONTAINER_SKIP: {\n      return {\n        ...state,\n        skip: action.skip\n      };\n    }\n    case types.SET_COMPARE_CONTAINER_DATA: {\n      return {\n        ...state,\n        data: action.data\n      };\n    }\n    case types.OPEN_COMPARE_CONTAINER_DIALOG: {\n      return {\n        ...state,\n        openCompareContainerDialog: action.open\n      }\n    }\n\n    /*\n    TWO Options to add item to array\n    case ADD_ITEM :\n    return {\n        ...state,\n        arr: [...state.arr, action.newItem]\n    }\n    case ADD_ITEM :\n    return {\n        ...state,\n        arr: state.arr.concat(action.newItem)\n    }\n    */\n    default:\n      return state\n\n  }\n};\nexport default CompareContainer;\n","// CompareContainer Reducer\nexport const SET_COMPARE_CONTAINER = 'SET_COMPARE_CONTAINER'\nexport const SET_COMPARE_CONTAINER_TABLE = 'SET_COMPARE_CONTAINER_TABLE'\nexport const COMPARE_CONTAINER_FETCH = 'COMPARE_CONTAINER_FETCH'\nexport const SET_COMPARE_CONTAINER_TOTAL = 'SET_COMPARE_CONTAINER_TOTAL'\nexport const SET_COMPARE_CONTAINER_LIMIT = 'SET_COMPARE_CONTAINER_LIMIT'\nexport const SET_COMPARE_CONTAINER_SKIP = 'SET_COMPARE_CONTAINER_SKIP'\nexport const SET_COMPARE_CONTAINER_DATA = 'SET_COMPARE_CONTAINER_DATA'\nexport const OPEN_COMPARE_CONTAINER_DIALOG = 'OPEN_COMPARE_CONTAINER_DIALOG'\n","import * as types from \"../../constants/ActionTypes\";\n\nconst initState = {\n  start_period: 0,\n  end_period:0,\n  total: 0,  // total number of records in dataset\n  limit: 0,  // how many records returned in one call\n  skip: 0,\n  data: []  // dataset returned by fetch.\n};\n\nconst PartProdRate = (state = initState, action) => {\n  switch (action.type) {\n\n    case types.SET_PART_PROD_RATE_START_PERIOD: {\n      return {\n        ...state,\n        start_period: action.start_period\n      };\n    }\n\n    case types.SET_PART_PROD_RATE_END_PERIOD: {\n      return {\n        ...state,\n        end_period: action.end_period\n      };\n    }\n\n\n    case types.SET_PART_PROD_RATE_TOTAL: {\n      return {\n        ...state,\n        total: action.total\n      };\n    }\n    case types.SET_PART_PROD_RATE_LIMIT: {\n      return {\n        ...state,\n        limit: action.limit\n      };\n    }\n    case types.SET_PART_PROD_RATE_SKIP: {\n      return {\n        ...state,\n        skip: action.skip\n      };\n    }\n    case types.SET_PART_PROD_RATE_DATA: {\n      return {\n        ...state,\n        data: action.data\n      };\n    }\n    /*\n    TWO Options to add item to array\n    case ADD_ITEM :\n    return {\n        ...state,\n        arr: [...state.arr, action.newItem]\n    }\n    case ADD_ITEM :\n    return {\n        ...state,\n        arr: state.arr.concat(action.newItem)\n    }\n    */\n    default:\n      return state\n\n  }\n};\nexport default PartProdRate;\n","// PartProdRate Reducer\nexport const PART_PROD_RATE_FETCH = 'PART_PROD_RATE_FETCH'\nexport const SET_PART_PROD_RATE_START_PERIOD = 'SET_PART_PROD_RATE_START_PERIOD'\nexport const SET_PART_PROD_RATE_END_PERIOD = 'SET_PART_PROD_RATE_END_PERIOD'\nexport const SET_PART_PROD_RATE_TOTAL = 'SET_PART_PROD_RATE_TOTAL'\nexport const SET_PART_PROD_RATE_LIMIT = 'SET_PART_PROD_RATE_LIMIT'\nexport const SET_PART_PROD_RATE_SKIP = 'SET_PART_PROD_RATE_SKIP'\nexport const SET_PART_PROD_RATE_DATA = 'SET_PART_PROD_RATE_DATA'\n","import * as types from \"../../constants/ActionTypes\";\n\nconst initState = {\n  Building_Key: 0,\n  Building_Code: '',\n  sproc: '',\n  table: '',\n  total: 0,\n  limit: 0,\n  skip: 0,\n  data: []\n};\n\nconst UpcomingToolChanges = (state = initState, action) => {\n  switch (action.type) {\n    case types.SET_UPCOMING_TOOL_CHANGES_BUILDING_KEY: {\n      return {\n        ...state,\n        Building_Key: action.Building_Key\n      }\n    }\n    case types.SET_UPCOMING_TOOL_CHANGES_BUILDING_CODE: {\n      return {\n        ...state,\n        Building_Code: action.Building_Code\n      }\n    }\n    case types.SET_UPCOMING_TOOL_CHANGES_SPROC: {\n      return {\n        ...state,\n        sproc: action.sproc\n      }\n    }\n    case types.SET_UPCOMING_TOOL_CHANGES_TABLE: {\n      return {\n        ...state,\n        table: action.table\n      }\n    }\n    case types.SET_UPCOMING_TOOL_CHANGES_TOTAL: {\n      return {\n        ...state,\n        total: action.total\n      };\n    }\n    case types.SET_UPCOMING_TOOL_CHANGES_LIMIT: {\n      return {\n        ...state,\n        limit: action.limit\n      };\n    }\n    case types.SET_UPCOMING_TOOL_CHANGES_SKIP: {\n      return {\n        ...state,\n        skip: action.skip\n      };\n    }\n    case types.SET_UPCOMING_TOOL_CHANGES_DATA: {\n      return {\n        ...state,\n        data: action.data\n      };\n    }\n    /*\n    TWO Options to add item to array\n    case ADD_ITEM :\n    return {\n        ...state,\n        arr: [...state.arr, action.newItem]\n    }\n    case ADD_ITEM :\n    return {\n        ...state,\n        arr: state.arr.concat(action.newItem)\n    }\n    */\n    default:\n      return state\n\n  }\n};\nexport default UpcomingToolChanges;\n","export const UPCOMING_TOOL_CHANGES_CREATE = 'UPCOMING_TOOL_CHANGES_CREATE'\nexport const UPCOMING_TOOL_CHANGES_FETCH = 'UPCOMING_TOOL_CHANGES_FETCH'\nexport const SET_UPCOMING_TOOL_CHANGES_BUILDING_KEY = 'SET_UPCOMING_TOOL_CHANGES_BUILDING_KEY'\nexport const SET_UPCOMING_TOOL_CHANGES_BUILDING_CODE = 'SET_UPCOMING_TOOL_CHANGES_BUILDING_CODE'\nexport const SET_UPCOMING_TOOL_CHANGES_SPROC = 'SET_UPCOMING_TOOL_CHANGES_SPROC'\nexport const SET_UPCOMING_TOOL_CHANGES_TABLE = 'SET_UPCOMING_TOOL_CHANGES_TABLE'\nexport const SET_UPCOMING_TOOL_CHANGES_TOTAL = 'SET_UPCOMING_TOOL_CHANGES_TOTAL'\nexport const SET_UPCOMING_TOOL_CHANGES_LIMIT = 'SET_UPCOMING_TOOL_CHANGES_LIMIT'\nexport const SET_UPCOMING_TOOL_CHANGES_SKIP = 'SET_UPCOMING_TOOL_CHANGES_SKIP'\nexport const SET_UPCOMING_TOOL_CHANGES_DATA = 'SET_UPCOMING_TOOL_CHANGES_DATA'\n","import * as types from \"../../constants/ActionTypes\";\n\nconst initState = {\n  openDialogToolChangeSummary: false,\n  startDate: '2020-09-08 00:00:00',\n  endDate: '2020-09-08 00:00:00',\n  sproc: '',\n  table: '',\n  total: 0,\n  limit: 0,\n  skip: 0,\n  data: []\n};\n\nconst ToolChangeSummary = (state = initState, action) => {\n  switch (action.type) {\n    case types.OPEN_DIALOG_TOOL_CHANGE_SUMMARY: {\n      return {\n        ...state,\n        openDialogToolChangeSummary: action.open\n      }\n    }\n    case types.SET_TOOL_CHANGE_SUMMARY_START_DATE: {\n      return {\n        ...state,\n        startDate: action.startDate\n      }\n    }\n    case types.SET_TOOL_CHANGE_SUMMARY_END_DATE: {\n      return {\n        ...state,\n        endDate: action.endDate\n      }\n    }\n    case types.SET_TOOL_CHANGE_SUMMARY_SPROC: {\n      return {\n        ...state,\n        sproc: action.sproc\n      }\n    }\n    case types.SET_TOOL_CHANGE_SUMMARY_TABLE: {\n      return {\n        ...state,\n        table: action.table\n      }\n    }\n    case types.SET_TOOL_CHANGE_SUMMARY_TOTAL: {\n      return {\n        ...state,\n        total: action.total\n      };\n    }\n    case types.SET_TOOL_CHANGE_SUMMARY_LIMIT: {\n      return {\n        ...state,\n        limit: action.limit\n      };\n    }\n    case types.SET_TOOL_CHANGE_SUMMARY_SKIP: {\n      return {\n        ...state,\n        skip: action.skip\n      };\n    }\n    case types.SET_TOOL_CHANGE_SUMMARY_DATA: {\n      return {\n        ...state,\n        data: action.data\n      };\n    }\n    /*\n    TWO Options to add item to array\n    case ADD_ITEM :\n    return {\n        ...state,\n        arr: [...state.arr, action.newItem]\n    }\n    case ADD_ITEM :\n    return {\n        ...state,\n        arr: state.arr.concat(action.newItem)\n    }\n    */\n    default:\n      return state\n\n  }\n};\nexport default ToolChangeSummary;\n","export const OPEN_DIALOG_TOOL_CHANGE_SUMMARY = 'OPEN_DIALOG_TOOL_CHANGE_SUMMARY'\nexport const CREATE_TOOL_CHANGE_SUMMARY = 'CREATE_TOOL_CHANGE_SUMMARY'\nexport const FETCH_TOOL_CHANGE_SUMMARY = 'FETCH_TOOL_CHANGE_SUMMARY'\nexport const SET_TOOL_CHANGE_SUMMARY_START_DATE = 'SET_TOOL_CHANGE_SUMMARY_START_DATE'\nexport const SET_TOOL_CHANGE_SUMMARY_END_DATE = 'SET_TOOL_CHANGE_SUMMARY_END_DATE'\nexport const SET_TOOL_CHANGE_SUMMARY_SPROC = 'SET_TOOL_CHANGE_SUMMARY_SPROC'\nexport const SET_TOOL_CHANGE_SUMMARY_TABLE = 'SET_TOOL_CHANGE_SUMMARY_TABLE'\nexport const SET_TOOL_CHANGE_SUMMARY_TOTAL = 'SET_TOOL_CHANGE_SUMMARY_TOTAL'\nexport const SET_TOOL_CHANGE_SUMMARY_LIMIT = 'SET_TOOL_CHANGE_SUMMARY_LIMIT'\nexport const SET_TOOL_CHANGE_SUMMARY_SKIP = 'SET_TOOL_CHANGE_SUMMARY_SKIP'\nexport const SET_TOOL_CHANGE_SUMMARY_DATA = 'SET_TOOL_CHANGE_SUMMARY_DATA'\n","import BPGReducer from './bpg';\nimport HomeReducer from './home';\n\n\nvar RootReducer;\nif (process.env.REACT_APP_SET === 'bpg') {\n  RootReducer = BPGReducer;\n}\nif (process.env.REACT_APP_SET === 'home') {\n  RootReducer = HomeReducer;\n}\n\nexport default RootReducer\n","import { combineReducers } from 'redux'\nimport { connectRouter } from 'connected-react-router'\nimport Global from '../Global'\nimport Msal from '../Msal'\nimport User from './User'\nimport Sproc200206 from './Sproc200206'\nimport Sproc200221 from './Sproc200221'\nimport Dialogs from './Dialogs'\nimport Kep13319 from './Kep13319'\nimport CompareContainer from './CompareContainer'\nimport PartProdRate from './PartProdRate'\nimport UpcomingToolChanges from './UpcomingToolChanges'\nimport ToolChangeSummary from './ToolChangeSummary'\n\nconst RootReducer = (history) => combineReducers({\n  router: connectRouter(history),\n  Global,\n  Msal,\n  User,\n  Sproc200206,\n  Sproc200221,\n  Dialogs,\n  Kep13319,\n  CompareContainer,\n  PartProdRate,\n  UpcomingToolChanges,\n  ToolChangeSummary\n})\n\nexport default RootReducer\n","export const HOME = 'home'\nexport const BPG = 'bpg'\n","import * as types from '../../constants/ActionTypes';\n// Dialogs\nexport const OpenDialog200206 = (open) => ({\n  type: types.OPEN_DIALOG_200206,\n  open,\n});\n\n\n","import * as types from '../../constants/ActionTypes';\n// User Reducer\nexport const AuthenticateSaga = (email, password, route, setSubmittingOff) => ({\n  type: types.AUTHENTICATE_SAGA,\n  email,\n  password,\n  route,\n  setSubmittingOff,\n});\n\nexport const SetIsAuthenticated = (isAuthenticated) => ({\n  type: types.SET_IS_AUTHENTICATED,\n  isAuthenticated,\n});\n\nexport const SetIsAdmin = (isAdmin) => ({\n  type: types.SET_IS_ADMIN,\n  isAdmin,\n});\n\nexport const SetRoles = (roles) => ({\n  type: types.SET_ROLES,\n  roles,\n});\nexport const SetEmail = (email) => ({\n  type: types.SET_EMAIL,\n  email,\n});\n\nexport const SetUserName = (userName) => ({\n  type: types.SET_USERNAME,\n  userName,\n});\n\nexport const SetFirstName = (firstName) => ({\n  type: types.SET_FIRSTNAME,\n  firstName,\n});\nexport const SetLastName = (lastName) => ({\n  type: types.SET_LASTNAME,\n  lastName,\n});\n\nexport const Logout = () => ({\n  type: types.LOGOUT,\n});\n\n","import * as types from '../../constants/ActionTypes';\nexport const Sproc200206Create = (\n  startDate,\n  endDate,\n  fetch,\n  limit,\n  route,\n  setSubmittingOff,\n) => ({\n  type: types.SPROC200206_CREATE,\n  startDate,\n  endDate,\n  fetch,\n  limit,\n  route,\n  setSubmittingOff,\n});\n\nexport const Sproc200206Fetch = (\n  sproc,\n  table,\n  limit,\n  skip,\n  route,\n  setSubmittingOff,\n) => ({\n  type: types.SPROC200206_FETCH,\n  sproc,\n  table,\n  limit,\n  skip,\n  route,\n  setSubmittingOff,\n});\n\nexport const Set200206Sproc = (sproc) => ({\n  type: types.SET_200206_SPROC,\n  sproc,\n});\n\nexport const Set200206Table = (table) => {\n  return {\n    type: types.SET_200206_TABLE,\n    table,\n  };\n};\n\nexport const Set200206Total = (total) => ({\n  type: types.SET_200206_TOTAL,\n  total,\n});\n\nexport const Set200206Limit = (limit) => ({\n  type: types.SET_200206_LIMIT,\n  limit,\n});\n\nexport const Set200206Skip = (skip) => ({\n  type: types.SET_200206_SKIP,\n  skip,\n});\n\nexport const Set200206Data = (data) => ({\n  type: types.SET_200206_DATA,\n  data,\n});\n\n","import * as types from '../../constants/ActionTypes';\n//SAGAS\nexport const Sproc200221Create = (\n  startDate,\n  endDate,\n  fetch,\n  limit,\n  route,\n  setSubmittingOff,\n) => ({\n  type: types.SPROC200221_CREATE,\n  startDate,\n  endDate,\n  fetch,\n  limit,\n  route,\n  setSubmittingOff,\n});\n\nexport const Sproc200221Fetch = (\n  sproc,\n  table,\n  limit,\n  skip,\n  route,\n  setSubmittingOff,\n) => ({\n  type: types.SPROC200221_FETCH,\n  sproc,\n  table,\n  limit,\n  skip,\n  route,\n  setSubmittingOff,\n});\n\nexport const Set200221Sproc = (sproc) => ({\n  type: types.SET_200221_SPROC,\n  sproc,\n});\n\nexport const Set200221Table = (table) => {\n  return {\n    type: types.SET_200221_TABLE,\n    table,\n  };\n};\n\nexport const Set200221Total = (total) => ({\n  type: types.SET_200221_TOTAL,\n  total,\n});\n\nexport const Set200221Limit = (limit) => ({\n  type: types.SET_200221_LIMIT,\n  limit,\n});\n\nexport const Set200221Skip = (skip) => ({\n  type: types.SET_200221_SKIP,\n  skip,\n});\n\nexport const Set200221Data = (data) => ({\n  type: types.SET_200221_DATA,\n  data,\n});\n\n","import * as types from '../../constants/ActionTypes';\n// Kep13319 Reducer\nexport const Kep13319Fetch = (route, setSubmittingOff) => ({\n  type: types.KEP13319_FETCH,\n  route,\n  setSubmittingOff,\n});\n\nexport const SetNodes = (nodes) => ({\n  type: types.SET_NODES,\n  nodes,\n});\n\nexport const UpdateNode = (updateId, value, transDate) => ({\n  type: types.UPDATE_NODE,\n  updateId,\n  value,\n  transDate\n});\n\n","import * as types from '../../constants/ActionTypes';\nexport const View200206 = (\n    startDate,\n    endDate,\n    limit,\n    route,\n    setSubmittingOff,\n  ) => ({\n    type: types.VIEW_200206,\n    startDate,\n    endDate,\n    limit,\n    route,\n    setSubmittingOff,\n  });\n","// Saga no reducer\nexport const VIEW_200206 = 'VIEW_200206'\n\n","import * as types from '../../constants/ActionTypes';\n\nexport const CompareContainerFetch = (\n  startDate,\n  endDate,\n  limit,\n  skip,\n  route,\n  setSubmittingOff,\n) => ({\n  type: types.COMPARE_CONTAINER_FETCH,\n  startDate,\n  endDate,\n  limit,\n  skip,\n  route,\n  setSubmittingOff,\n});\n\nexport const SetCompareContainerTable = (table) => {\n  return {\n    type: types.SET_COMPARE_CONTAINER_TABLE,\n    table,\n  };\n};\n\nexport const SetCompareContainerTotal = (total) => ({\n  type: types.SET_COMPARE_CONTAINER_TOTAL,\n  total,\n});\n\nexport const SetCompareContainerLimit = (limit) => ({\n  type: types.SET_COMPARE_CONTAINER_LIMIT,\n  limit,\n});\n\nexport const SetCompareContainerSkip = (skip) => ({\n  type: types.SET_COMPARE_CONTAINER_SKIP,\n  skip,\n});\n\nexport const SetCompareContainerData = (data) => ({\n  type: types.SET_COMPARE_CONTAINER_DATA,\n  data,\n});\n\nexport const OpenCompareContainerDialog = (open) => ({\n  type: types.OPEN_COMPARE_CONTAINER_DIALOG,\n  open,\n});\n\n","import * as types from '../../constants/ActionTypes';\n\nexport const PartProdRateFetch = (\n  startPeriod,\n  endPeriod,\n  limit,\n  skip,\n  route,\n  setSubmittingOff,\n) => ({\n  type: types.PART_PROD_RATE_FETCH,\n  startPeriod,\n  endPeriod,\n  limit,\n  skip,\n  route,\n  setSubmittingOff,\n});\n\nexport const SetPartProdRateStartPeriod = (start_period) => ({\n  type: types.SET_PART_PROD_RATE_START_PERIOD,\n  start_period\n});\n\nexport const SetPartProdRateEndPeriod = (end_period) => ({\n  type: types.SET_PART_PROD_RATE_END_PERIOD,\n  end_period\n});\n\nexport const SetPartProdRateTotal = (total) => ({\n  type: types.SET_PART_PROD_RATE_TOTAL,\n  total,\n});\n\nexport const SetPartProdRateLimit = (limit) => ({\n  type: types.SET_PART_PROD_RATE_LIMIT,\n  limit,\n});\n\nexport const SetPartProdRateSkip = (skip) => ({\n  type: types.SET_PART_PROD_RATE_SKIP,\n  skip,\n});\n\nexport const SetPartProdRateData = (data) => ({\n  type: types.SET_PART_PROD_RATE_DATA,\n  data,\n});\n\n\n","import * as types from '../../constants/ActionTypes';\n//SAGAS\nexport const UpcomingToolChangesCreate = (\n  Building_Key,\n  fetch,\n  limit,\n  route,\n  setSubmittingOff,\n) => ({\n  type: types.UPCOMING_TOOL_CHANGES_CREATE,\n  Building_Key,\n  fetch,\n  limit,\n  route,\n  setSubmittingOff,\n});\n\nexport const UpcomingToolChangesFetch = (\n  table,\n  limit,\n  skip,\n  route,\n  setSubmittingOff,\n) => ({\n  type: types.UPCOMING_TOOL_CHANGES_FETCH,\n  table,\n  limit,\n  skip,\n  route,\n  setSubmittingOff,\n});\n\nexport const SetUpcomingToolChangesBuildingKey = (Building_Key) => ({\n  type: types.SET_UPCOMING_TOOL_CHANGES_BUILDING_KEY,\n  Building_Key,\n});\n\nexport const SetUpcomingToolChangesBuildingCode = (Building_Code) => ({\n  type: types.SET_UPCOMING_TOOL_CHANGES_BUILDING_CODE,\n  Building_Code,\n});\n\n\nexport const SetUpcomingToolChangesSproc = (sproc) => ({\n  type: types.SET_UPCOMING_TOOL_CHANGES_SPROC,\n  sproc,\n});\n\nexport const SetUpcomingToolChangesTable = (table) => {\n  return {\n    type: types.SET_UPCOMING_TOOL_CHANGES_TABLE,\n    table,\n  };\n};\n\nexport const SetUpcomingToolChangesTotal = (total) => ({\n  type: types.SET_UPCOMING_TOOL_CHANGES_TOTAL,\n  total,\n});\n\nexport const SetUpcomingToolChangesLimit = (limit) => ({\n  type: types.SET_UPCOMING_TOOL_CHANGES_LIMIT,\n  limit,\n});\n\nexport const SetUpcomingToolChangesSkip = (skip) => ({\n  type: types.SET_UPCOMING_TOOL_CHANGES_SKIP,\n  skip,\n});\n\nexport const SetUpcomingToolChangesData = (data) => ({\n  type: types.SET_UPCOMING_TOOL_CHANGES_DATA,\n  data,\n});\n\n","import * as types from '../../constants/ActionTypes';\n//SAGAS\n\nexport const OpenDialogToolChangeSummary = (open) => ({\n  type: types.OPEN_DIALOG_TOOL_CHANGE_SUMMARY,\n  open,\n});\n\nexport const CreateToolChangeSummary = (\n  startDate,\n  endDate,\n  fetch,\n  limit,\n  route,\n  setSubmittingOff,\n) => ({\n  type: types.CREATE_TOOL_CHANGE_SUMMARY,\n  startDate,\n  endDate,\n  fetch,\n  limit,\n  route,\n  setSubmittingOff,\n});\n\nexport const FetchToolChangeSummary = (\n  table,\n  limit,\n  skip,\n  route,\n  setSubmittingOff,\n) => ({\n  type: types.FETCH_TOOL_CHANGE_SUMMARY,\n  table,\n  limit,\n  skip,\n  route,\n  setSubmittingOff,\n});\n\nexport const SetToolChangeSummaryStartDate = (startDate) => ({\n  type: types.SET_TOOL_CHANGE_SUMMARY_START_DATE,\n  startDate,\n});\n\nexport const SetToolChangeSummaryEndDate = (endDate) => ({\n  type: types.SET_TOOL_CHANGE_SUMMARY_END_DATE,\n  endDate,\n});\n\n\n\nexport const SetToolChangeSummarySproc = (sproc) => ({\n  type: types.SET_TOOL_CHANGE_SUMMARY_SPROC,\n  sproc,\n});\n\nexport const SetToolChangeSummaryTable = (table) => {\n  return {\n    type: types.SET_TOOL_CHANGE_SUMMARY_TABLE,\n    table,\n  };\n};\n\nexport const SetToolChangeSummaryTotal = (total) => ({\n  type: types.SET_TOOL_CHANGE_SUMMARY_TOTAL,\n  total,\n});\n\nexport const SetToolChangeSummaryLimit = (limit) => ({\n  type: types.SET_TOOL_CHANGE_SUMMARY_LIMIT,\n  limit,\n});\n\nexport const SetToolChangeSummarySkip = (skip) => ({\n  type: types.SET_TOOL_CHANGE_SUMMARY_SKIP,\n  skip,\n});\n\nexport const SetToolChangeSummaryData = (data) => ({\n  type: types.SET_TOOL_CHANGE_SUMMARY_DATA,\n  data,\n});\n\n","import * as errorSeverity from '../constants/ErrorSeverity';\nimport * as errorType from '../constants/ErrorType';\nimport * as types from '../constants/ActionTypes';\n\n// No Reducer\nexport const Push = (path) => ({\n  type: types.PUSH,\n  path,\n});\n\n// Global Reducer\nexport const SetAppSet = (appSet) => ({\n  type: types.SET_APPSET,\n  appSet,\n});\nexport const SetCurrentApp = (appId) => ({\n  type: types.SET_CURRENT_APP,\n  appId,\n});\nexport const Submitting = (submitting) => ({\n  type: types.SUBMITTING,\n  submitting,\n});\nexport const SetAppError = (message, errorType, severity) => ({\n  type: types.SET_APP_ERROR,\n  message,\n  errorType,\n  severity,\n});\nexport const ClearAppError = () => ({\n  type: types.CLEAR_APP_ERROR,\n  error: '',\n  errorType: errorType.NONE,\n  severity: errorSeverity.NONE,\n});\n\n","import * as errorSeverity from '../constants/ErrorSeverity';\nimport * as errorType from '../constants/ErrorType';\nimport * as types from '../constants/ActionTypes';\n\n// Msal Reducer\nexport const SetAccount = (account) => ({\n  type: types.SET_ACCOUNT,\n  account,\n});\n\nexport const SetGraph = (graph) => ({\n  type: types.SET_GRAPH,\n  graph,\n});\n\nexport const SetGroups = (groups) => ({\n  type: types.SET_GROUPS,\n  groups,\n});\n\nexport const SetProfile = (profile) => ({\n  type: types.SET_PROFILE,\n  profile,\n});\n\nexport const SetDepartment = (department) => ({\n  type: types.SET_DEPARTMENT,\n  department,\n});\n","import { connect } from 'react-redux'\nimport AppMenuComponent from '../components/AppMenu'\n\nimport * as actions from '../actions'\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    // dispatching plain actions\n    Push: (path) => dispatch(actions.Push(path)),\n    SetCurrentApp: (app) => dispatch(actions.SetCurrentApp(app)),\n    SetAppError: (message,errorType,errorSeverity) => dispatch(actions.SetAppError(message,errorType,errorSeverity)),\n    Logout: () => dispatch(actions.Logout())\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { Global,User,Msal } = state\n  return {\n    msalInstance: Msal.msalInstance,\n    isAuthenticated: User.isAuthenticated,\n    currentApp: Global.currentApp,\n    appSet: Global.appSet\n  }\n}\n\nexport const AppMenu = connect(mapStateToProps, mapDispatchToProps)(AppMenuComponent)\n/*\n  const { Msal } = state;\n  return {\n    msalInstance: Msal.msalInstance\n  };\n\n*/","import React, { useEffect } from 'react';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport Badge from '@material-ui/core/Badge';\nimport AppsIcon from '@material-ui/icons/Apps';\nimport IconButton from '@material-ui/core/IconButton';\nimport * as AppId from '../constants/AppId';\nimport * as AppSet from '../constants/AppSet';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport * as common from '@bgroves/common';\nimport { SetAccount } from '../actions';\nimport * as errorType from '../constants/ErrorType'\nimport * as errorSeverity from '../constants/ErrorSeverity'\n\nexport default function AppMenu({\n  isAuthenticated,\n  msalInstance,\n  Push,\n  currentApp,\n  SetCurrentApp,\n  SetAppError,\n  appSet,\n  Logout,\n}) {\n // common.log(`currentApp=${currentApp}`);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  useEffect(() => {\n    // if (!isAuthenticated) {\n    //   Push('/login');\n    // }\n  });\n  \n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  const handleOEE = () => {\n    setAnchorEl(null);\n//    Push('/oee');\n//    SetCurrentApp(AppId.OEE);\n  };\n  const handleCNC = () => {\n    setAnchorEl(null);\n    Push('/cnc');\n    SetCurrentApp(AppId.CNC);\n  };\n  const handleProfit = () => {\n    setAnchorEl(null);\n    Push('/profit');\n    SetCurrentApp(AppId.PROFIT);\n  };\n  /*\n  const handleSensor = () => {\n    //    Push('/transition');\n    //    OpenDialog200206(true);\n    // setAnchorEl(event.currentTarget);\n    setAnchorEl(null);\n    SetCurrentApp(AppId.SENSOR);\n    // Push('/oee');\n    SetCurrentApp(AppId.CNC);\n  };\n*/\n  const handleLogout = () => {\n    setAnchorEl(null);\n    Push('/');\n    msalInstance.logout();\n    SetAppError('Test',errorType.SAGA,errorSeverity.LOW);\n  };\n\n  return (\n    <React.Fragment>\n    <CssBaseline />\n      {/* \n                <IconButton color=\"inherit\">\n                  <Badge onClick={handleLogout} color=\"primary\">\n                    <ExitToAppIcon />\n                  </Badge>\n                </IconButton>\n      <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\n        Open Menu\n      </Button>\n\n\n                */}\n\n      <IconButton color=\"inherit\" onClick={handleClick} >\n        <Badge badgeContent={0}  color=\"secondary\">\n          <AppsIcon />\n        </Badge>\n      </IconButton>\n      {appSet === AppSet.BPG && (\n          <Menu\n            id=\"simple-menu\"\n            anchorEl={anchorEl}\n            keepMounted\n            open={Boolean(anchorEl)}\n            onClose={handleClose}\n          >\n            {currentApp !== AppId.OEE && (\n                <MenuItem onClick={handleOEE}>OEE</MenuItem>\n            )}\n            {currentApp !== AppId.CNC && (\n                <MenuItem onClick={handleCNC}>CNC</MenuItem>\n            )}\n            {currentApp !== AppId.PROFIT && (\n                <MenuItem onClick={handleProfit}>Profit</MenuItem>\n            )}\n            <MenuItem onClick={handleLogout}>Logout</MenuItem>\n          </Menu>\n      )}\n      {appSet === AppSet.HOME && (\n          <Menu\n            id=\"simple-menu\"\n            anchorEl={anchorEl}\n            keepMounted\n            open={Boolean(anchorEl)}\n            onClose={handleClose}\n          >\n            {currentApp !== AppId.OEE && (\n                <MenuItem onClick={handleOEE}>OEE</MenuItem>\n            )}\n            {currentApp !== AppId.CNC && (\n                <MenuItem onClick={handleCNC}>CNC</MenuItem>\n            )}\n            <MenuItem onClick={handleLogout}>Logout</MenuItem>\n          </Menu>\n      )}\n    </React.Fragment>\n  );\n}\n","export const NOT_SET = '0'\nexport const OEE = '10'\nexport const CNC = '20'\nexport const PROFIT = '30'\nexport const SENSOR = '100'\n","import { connect } from \"react-redux\";\nimport SideMenuComponent from \"../../components/CNC/SideMenu\";\nimport * as actions from '../../actions'\n\nfunction mapStateToProps(state) {\n  const { User, Global } = state\n  return {\n    isAuthenticated: User.isAuthenticated,\n    isAdmin: User.isAdmin,\n    firstDayOfWeek: Global.firstDayOfWeek,\n    lastDayOfWeek: Global.lastDayOfWeek,\n    firstDayOfMonth: Global.firstDayOfMonth,\n    lastDayOfMonth: Global.lastDayOfMonth\n\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    // dispatching plain actions\n    Push: (path) => dispatch(actions.Push(path)),\n    Submitting: (submitting) => dispatch(actions.Submitting(submitting)),\n    OpenCompareContainerDialog: (open) => dispatch(actions.OpenCompareContainerDialog(open))\n  }\n}\n\n\nexport const SideMenu = connect(mapStateToProps, mapDispatchToProps)(SideMenuComponent)\n","import React from 'react';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport SpeedIcon from '@material-ui/icons/Speed';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport GroupWorkIcon from '@material-ui/icons/GroupWork';\n\n// PROBLEM WITH COLLAPSE SUB LIST AND FIREFOX\n// WAIT FOR NEW VERSION OF MATERIAL-UI WHICH HAS NESTE LIST-ITEM COMPONENT\n//https://v0.material-ui.com/#/components/list\n//https://medium.com/@ali.atwa/getting-started-with-material-ui-for-react-59c82d9ffd93\n\nexport default function SideMenu(params) {\n  const {\n    Push,\n  } = params;\n\n  const handleView13319Live = () => {\n    Push('/cnc/view13319');\n  };\n  const handleViewCompareContainerAdHoc = () => {\n    Push('/cnc/dialogCompareContainer');\n    // Push('/cnc/transition');\n    // Submitting(true); // Buttons look at this to see if they should be enabled\n    // View200206(firstDayOfWeek, lastDayOfWeek, 1000, '/cnc/view200206', true);\n  };\n  const handleViewUpcomingToolChanges = () => {\n    Push('/cnc/dialogUpcomingToolChanges');\n  };\n  const handleViewToolChangeSummary = () => {\n    Push('/cnc/dialogToolChangeSummary');\n  };\n  /*\n  const handleView200206ThisWeek = () => {\n    Push('/oee/transition');\n    Submitting(true); // Buttons look at this to see if they should be enabled\n    View200206(firstDayOfWeek, lastDayOfWeek, 1000, '/oee/view200206', true);\n  };\n*/\n  /*\n  const handleView200206ThisMonth = () => {\n    Push('/transition');\n    Submitting(true);\n    View200206(firstDayOfMonth, lastDayOfMonth, 1000, '/view200206', true);\n  };\n*/\n  return (\n    <List>\n      <ListSubheader>Live</ListSubheader>\n      <Divider />\n      <ListItem button onClick={handleView13319Live}>\n        <ListItemIcon>\n          <SpeedIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"CNC\" />\n      </ListItem>\n      <Divider />\n      <ListSubheader>Ad-Hoc</ListSubheader>\n      <Divider />\n      <ListItem button onClick={handleViewCompareContainerAdHoc}>\n        <ListItemIcon>\n          <GroupWorkIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Compare\" />\n      </ListItem>\n      <ListItem button onClick={handleViewUpcomingToolChanges}>\n        <ListItemIcon>\n          <GroupWorkIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Tool Changes\" />\n      </ListItem>\n      <ListItem button onClick={handleViewToolChangeSummary}>\n        <ListItemIcon>\n          <GroupWorkIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Tool Life\" />\n      </ListItem>\n\n    </List>\n  );\n}\n","import React, { Component } from \"react\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend\n} from \"recharts\";\n\nconst TABLE_LIST = [\n  { name: \"Page A\", pv: 2400, amt: 2400 },\n  { name: \"Page B\", pv: 1398, amt: 2210 },\n  { name: \"Page C\", pv: 9800, amt: 2290 },\n  { name: \"Page D\", pv: 3908, amt: 2000 },\n  { name: \"Page E\", pv: 4800, amt: 2181 },\n  { name: \"Page F\", pv: 3800, amt: 2500 },\n  { name: \"Page G\", pv: 4300, amt: 2100 }\n];\n\nexport default class BarChartLanding extends Component {\n  state = {\n    list: [...TABLE_LIST]\n  };\n\n  render() {\n    const { list } = this.state;\n    return (\n      <BarChart\n        width={530}\n        height={250}\n        data={list}\n        margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"name\" />\n        <YAxis />\n        <Tooltip />\n        <Legend />\n        <Bar dataKey=\"pv\" fill=\"#8884d8\" />\n      </BarChart>\n    );\n  }\n}\n","import {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend\n} from \"recharts\";\nimport React, { PureComponent } from \"react\";\n\nconst data = [\n  {\n    name: \"Page A\",\n    uv: 4000,\n    pv: 2400,\n    amt: 2400\n  },\n  {\n    name: \"Page B\",\n    uv: 3000,\n    pv: 1398,\n    amt: 2210\n  },\n  {\n    name: \"Page C\",\n    uv: 2000,\n    pv: 9800,\n    amt: 2290\n  },\n  {\n    name: \"Page D\",\n    uv: 2780,\n    pv: 3908,\n    amt: 2000\n  },\n  {\n    name: \"Page E\",\n    uv: 1890,\n    pv: 4800,\n    amt: 2181\n  },\n  {\n    name: \"Page F\",\n    uv: 2390,\n    pv: 3800,\n    amt: 2500\n  },\n  {\n    name: \"Page G\",\n    uv: 3490,\n    pv: 4300,\n    amt: 2100\n  }\n];\n\nexport default class LineChartLanding extends PureComponent {\n  static jsfiddleUrl = \"https://jsfiddle.net/alidingling/xqjtetw0/\";\n\n  render() {\n    return (\n      <LineChart\n        width={530}\n        height={250}\n        data={data}\n        margin={{\n          top: 5,\n          right: 30,\n          left: 20,\n          bottom: 5\n        }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"name\" />\n        <YAxis />\n        <Tooltip />\n        <Legend />\n        <Line\n          type=\"monotone\"\n          dataKey=\"pv\"\n          stroke=\"#8884d8\"\n          activeDot={{ r: 8 }}\n        />\n        <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#82ca9d\" />\n      </LineChart>\n    );\n  }\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport PlayCircleFilledWhiteIcon from \"@material-ui/icons/PlayCircleFilledWhite\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport clsx from \"clsx\";\n\nimport BarChartLanding from \"./BarChartLanding\";\nimport LineChartLanding from \"./LineChartLanding\";\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\"\n  },\n  container: {\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(4)\n  },  \n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\"\n  },\n\n  instructions: {\n    padding: 14\n  }\n}));\n\nexport default function Landing({\n  isAuthenticated,\n  isAdmin,\n  pathname,\n  Push,\n  Logout\n}) {\n  const classes = useStyles();\n\n  const instructions = clsx(classes.paper, classes.instructions);\n  return (\n    <Container maxWidth=\"lg\" className={classes.container}>\n\n      <Grid container spacing={3}>\n        {/* Chart */}\n        <Grid item xs={12} md={12} lg={5}>\n            <LineChartLanding />\n        </Grid>\n        <Grid item xs={12} md={12} lg={7}>\n            <BarChartLanding />\n        </Grid>\n        <Grid item xs={10}>\n          <Paper>\n            <AppBar position=\"static\">\n              <Toolbar>\n                <PlayCircleFilledWhiteIcon style={{ fontSize: 40 }} />\n                <Typography variant=\"h6\" className={instructions}>\n                  To start select a report from the left-hand side menu.\n                </Typography>\n              </Toolbar>\n            </AppBar>\n          </Paper>\n        </Grid>\n      </Grid>\n      </Container>\n  );\n}\n/*\n   <Container maxWidth=\"lg\" className={classes.container}>\n      <Grid container spacing={3}>\n\n        <Grid item xs={12} md={5} lg={5}>\n          <Paper className={chart}>\n            <LineChartLanding />\n          </Paper>\n        </Grid>\n        <Grid item xs={12} md={7} lg={7}>\n          <Paper className={chart}>\n            <BarChartLanding />\n          </Paper>\n        </Grid>\n        <Grid item xs={12}>\n          <Paper>\n            <AppBar position=\"static\">\n              <Toolbar>\n                <PlayCircleFilledWhiteIcon style={{ fontSize: 40 }} />\n                <Typography variant=\"h6\" className={instructions}>\n                  To start select a report from the left-hand side menu.\n                </Typography>\n              </Toolbar>\n            </AppBar>\n          </Paper>\n        </Grid>\n      </Grid>\n    </Container>\n*/","import { connect } from 'react-redux'\nimport LandingComponent from '../../components/OEE/Landing'\n\nimport * as actions from '../../actions'\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    // dispatching plain actions\n    Push: () => dispatch(actions.Push()),\n  Logout: () => dispatch(actions.Logout())\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { User,router } = state\n  return {\n    isAuthenticated: User.isAuthenticated,\n    isAdmin: User.isAdmin,\n    userName: User.userName,\n    firstName: User.firstName,\n    lastName: User.lastName,\n    pathname: router.location.pathname,\n    search: router.location.search,\n    hash: router.location.hash\n\n\n  }\n}\n\nexport const Landing = connect(mapStateToProps, mapDispatchToProps)(LandingComponent)\n","import { makeStyles, useTheme } from '@material-ui/core/styles';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport IconButton from '@material-ui/core/IconButton';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport Paper from '@material-ui/core/Paper';\nimport PropTypes from 'prop-types';\nimport React, { useEffect } from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport * as common from '@bgroves/common';\n\nvar g_firstPage;\nvar g_lastPage;\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { page, onChangePage } = props;\n\n  const handleFirstPageButtonClick = event => {\n    onChangePage(event, 0);\n  };\n\n  const handleBackButtonClick = event => {\n    onChangePage(event, page - 1);\n  };\n\n  const handleNextButtonClick = event => {\n    onChangePage(event, page + 1);\n  };\n\n  const handleLastPageButtonClick = event => {\n    onChangePage(event, g_lastPage);\n  };\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton\n        onClick={handleBackButtonClick}\n        disabled={page === 0}\n        aria-label=\"previous page\"\n      >\n        {theme.direction === 'rtl' ? (\n          <KeyboardArrowRight />\n        ) : (\n          <KeyboardArrowLeft />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= g_lastPage}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? (\n          <KeyboardArrowLeft />\n        ) : (\n          <KeyboardArrowRight />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= g_lastPage}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n// disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nconst useStyles2 = makeStyles({\n  table: {\n    minWidth: 500,\n  },\n});\n\nexport default function Table13319({\n  data,\n}) {\n\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  // const [emptyRows, setEmptyRows] = React.useState(0); // Won't render sometimes as a useState variable.\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  g_firstPage = 0;\n  g_lastPage= Math.max(0, Math.ceil(data.length / rowsPerPage) - 1); // 0 based pages,\n\n  /* I THINK THIS WRONG SO I CHANGED IT\n  let emptyRows;\n  if(rowsPerPage>data.length){\n    emptyRows = 0;\n  }else{\n    emptyRows = rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage); // Won't work as a useState variable.\n  }\n  */\n  let emptyRows = rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage); // Won't work as a useState variable.\n\n  useEffect(() => {\n   });\n\n\n \n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n    // setEmptyRows(rowsPerPage - Math.min(rowsPerPage, data.length - newPage * rowsPerPage));\n    let er = rowsPerPage - Math.min(rowsPerPage, data.length - newPage * rowsPerPage);\n    common.log(`rowsPerPage = ${rowsPerPage}, emptyRows=${er},newPage=${newPage},data.length:${data.length}`);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    const rpp = parseInt(event.target.value, 10);\n    setRowsPerPage(rpp);\n    g_firstPage = 0;\n    g_lastPage = Math.max(0, Math.ceil(data.length / rpp) - 1);\n    setPage(0);\n    // setEmptyRows(rpp - Math.min(rpp, data.length));\n    let er = rpp - Math.min(rpp, data.length);\n    common.log(`rpp = ${rpp}, emptyRows=${er},g_firstPage: ${g_firstPage},g_lastPage:${g_lastPage},data.length:${data.length}`);\n  };\n\n  /*\n        \"updateId\": 0,\n      \"nodeId\": \"ns=2;s=cnc103.cnc103.cnc103.PartCounter\",\n      \"name\":\"PartCounter\",\n      \"plexus_Customer_No\":\"310507\",\n      \"pcn\": \"Avilla\",\n      \"workcenter_Key\": \"61324\",\n      \"workcenter_Code\": \"cnc103\",        \n      \"cnc\": \"103\",\n      \"value\": 0,\n      \"transDate\": \"2020-06-29 00:00:00\"\n    },\n  */\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"custom pagination table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>PCN</TableCell>\n            <TableCell align=\"left\">Workcenter</TableCell>\n            <TableCell align=\"right\">CNC</TableCell>\n            <TableCell align=\"left\">Name</TableCell>\n            <TableCell align=\"right\">Value</TableCell>\n            <TableCell align=\"left\">Date</TableCell>\n          </TableRow>\n        </TableHead>\n\n        <TableBody>\n\n        { data.slice(page * rowsPerPage,page * rowsPerPage + rowsPerPage)\n          .map(row => (\n            <TableRow key={row.updateId}>\n              <TableCell component=\"th\" scope=\"row\">{row.pcn}</TableCell>\n              <TableCell align=\"left\">{row.workcenter_Code}</TableCell>\n              <TableCell align=\"right\">{row.cnc}</TableCell>\n              <TableCell align=\"left\">{row.name}</TableCell>\n              <TableCell align=\"right\">{row.value}</TableCell>\n              <TableCell align=\"left\">{row.transDate}</TableCell>\n            </TableRow>\n          ))\n         }\n          {emptyRows > 0 && (\n            <TableRow key=\"9999\" style={{ height: 53 * emptyRows }}>\n              <TableCell colSpan={6} />\n            </TableRow>\n          )}\n        </TableBody>\n        <TableFooter>\n          <TableRow>\n            <TablePagination\n              rowsPerPageOptions={[5,10]}\n              colSpan={6}\n              count={data.length}\n              rowsPerPage={rowsPerPage}\n              page={page}\n              SelectProps={{\n                inputProps: { 'aria-label': 'rows per page' },\n                native: true,\n              }}\n              onChangePage={handleChangePage}\n              onChangeRowsPerPage={handleChangeRowsPerPage}\n              ActionsComponent={TablePaginationActions}\n            />\n          </TableRow>\n        </TableFooter>\n      </Table>\n    </TableContainer>\n  );\n}\n","import { connect } from \"react-redux\";\nimport Table13319Component from \"../../components/CNC/Table13319\";\nimport * as actions from \"../../actions\";\n\nfunction mapStateToProps(state) {\n  const { Kep13319 } = state;\n  return {\n    data: Kep13319.nodes\n  };\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    // dispatching plain actions\n    Push: () => dispatch(actions.Push())\n  };\n};\n\nexport const Table13319 = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Table13319Component);\n","import React, { useEffect } from 'react';\n// import Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\nimport { Table13319 } from '../../containers/CNC/Table13319';\n\n// import * as common from '@bgroves/common';\n\n/*\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    '& > *': {\n      margin: theme.spacing(1),\n      width: theme.spacing(16),\n      height: theme.spacing(16),\n    },\n  },\n}));\n*/\n/*\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n  },\n});\n*/\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(1),\n  },\n}));\n\nexport default function View13319(params) {\n  //  const { Push, total, SetAppError } = params;\n  useEffect(() => {\n    // if (total === 0) {\n    //   SetAppError(\n    //     'No records for that date range.',\n    //     errorType.DATE,\n    //     errorSeverity.LOW,\n    //   );\n    //   common.log('View200206=>No records, before push()');\n    //   Push('/');\n    // }\n  });\n  const classes = useStyles();\n\n  return (\n    <Box display=\"flex\" flexDirection=\"column\">\n      <Box p={1} bgcolor=\"grey.300\">\n        <div className={classes.root}>\n          <Typography variant=\"h6\" align=\"center\" gutterBottom>\n            CNC part counters\n          </Typography>\n          <Typography variant=\"body1\" gutterBottom>\n            These part counters are CNC common variables that have been\n            programmed to increment by G-Code and are being updated\n            continuously. Zero values may mean the CNC has been turned off or\n            there is a network error preventing access to the CNC.\n          </Typography>\n        </div>\n      </Box>\n      <Box>\n        <Table13319 />\n      </Box>\n    </Box>\n  );\n}\n\n/*\nexport default function Dashboard({ isAuthenticated, isAdmin, Push }) {\n  useEffect(() => {\n    // Update the document title using the browser API\n    //document.title = `You clicked ${count} times`;\n    if (!isAuthenticated) {\n      Push(\"/login\");\n    }\n  });\n*/\n","import { connect } from \"react-redux\";\nimport View13319Component from \"../../components/CNC/View13319\";\nimport * as actions from '../../actions'\n\nfunction mapStateToProps(state) {\n  const { User, Sproc200206 } = state\n  return {\n    isAuthenticated: User.isAuthenticated,\n    total: Sproc200206.total,\n    isAdmin: User.isAdmin\n  }\n}\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    // dispatching plain actions\n    Push: (path) => dispatch(actions.Push(path)),\n    OpenDialog200206: (open) => dispatch(actions.OpenDialog200206(open)),\n    SetAppError: (message,errorType,errorSeverity) => dispatch(actions.SetAppError(message,errorType,errorSeverity))\n  }\n}\n\n\nexport const View13319 = connect(mapStateToProps, mapDispatchToProps)(View13319Component)\n","import React, { useEffect } from 'react';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport { white,grey,blueGrey,lightBlue,indigo,deepOrange, deepPurple } from '@material-ui/core/colors';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport Badge from '@material-ui/core/Badge';\nimport AppsIcon from '@material-ui/icons/Apps';\nimport IconButton from '@material-ui/core/IconButton';\nimport * as AppId from '../constants/AppId';\nimport * as AppSet from '../constants/AppSet';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport * as common from '@bgroves/common';\nimport { SetAccount } from '../actions';\nimport * as errorType from '../constants/ErrorType'\nimport * as errorSeverity from '../constants/ErrorSeverity'\n\nconst HtmlTooltip = withStyles((theme) => ({\n  tooltip: {\n    backgroundColor: '#f5f5f9',\n    color: 'rgba(0, 0, 0, 0.87)',\n    maxWidth: 220,\n    fontSize: theme.typography.pxToRem(12),\n    border: '1px solid #dadde9',\n  },\n}))(Tooltip);\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n  small: {\n    width: theme.spacing(4),\n    height: theme.spacing(4),\n  },\n  avatar:  {\n    width: theme.spacing(4),\n    height: theme.spacing(4),\n    color: indigo[500],\n    backgroundColor: theme.palette.common.white,\n//    color: theme.palette.getContrastText(indigo[500]),\n//    backgroundColor: indigo[500],\n  },\n  orange:  {\n    width: theme.spacing(4),\n    height: theme.spacing(4),\n    color: theme.palette.getContrastText(deepOrange[500]),\n    backgroundColor: deepOrange[500],\n  },\n  purple: {\n    width: theme.spacing(4),\n    height: theme.spacing(4),\n    color: theme.palette.getContrastText(deepPurple[500]),\n    backgroundColor: deepPurple[500],\n  },\n}));\n\n\nexport default function ToolbarAvatar({\n  isAuthenticated,\n  msalInstance,\n  name,\n  initials,\n  department,\n  companyName,\n  Push,\n  currentApp,\n  SetCurrentApp,\n  SetAppError,\n  appSet,\n  Logout,\n}) {\n // common.log(`currentApp=${currentApp}`);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const classes = useStyles();\n  // const [initials, setInitials] = React.useState('MS');\n\n  useEffect(() => {\n    // if (!isAuthenticated) {\n    //   Push('/login');\n    // }\n  });\n  \n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  const handleOEE = () => {\n    setAnchorEl(null);\n//    Push('/oee');\n//    SetCurrentApp(AppId.OEE);\n  };\n  const handleCNC = () => {\n    setAnchorEl(null);\n    Push('/cnc');\n    SetCurrentApp(AppId.CNC);\n  };\n  const handleProfit = () => {\n    setAnchorEl(null);\n    Push('/profit');\n    SetCurrentApp(AppId.PROFIT);\n  };\n  /*\n  const handleSensor = () => {\n    //    Push('/transition');\n    //    OpenDialog200206(true);\n    // setAnchorEl(event.currentTarget);\n    setAnchorEl(null);\n    SetCurrentApp(AppId.SENSOR);\n    // Push('/oee');\n    SetCurrentApp(AppId.CNC);\n  };\n*/\n  const handleLogout = () => {\n    setAnchorEl(null);\n    msalInstance.logout();\n    SetAppError('Test',errorType.SAGA,errorSeverity.LOW);\n  };\n\n  return (\n    <React.Fragment>\n    <CssBaseline />\n      {/* \n                <IconButton color=\"inherit\">\n                  <Badge onClick={handleLogout} color=\"primary\">\n                    <ExitToAppIcon />\n                  </Badge>\n                </IconButton>\n      <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\n        Open Menu\n      </Button>\n\n\n                */}\n      <HtmlTooltip\n        title={\n          <React.Fragment>\n            <Typography variant=\"subtitle2\" gutterBottom>\n        {name}\n      </Typography>\n      <Typography variant=\"body2\" gutterBottom>\n        {companyName}\n      </Typography>\n       {/* <Typography color=\"inherit\">Tooltip with HTML</Typography>\n            <em>{\"And here's\"}</em> <b>{'some'}</b> <u>{'amazing content'}</u>.{' '}\n            {\"It's very engaging. Right?\"} */}\n          </React.Fragment>\n        }\n      >\n      <IconButton color=\"inherit\" onClick={handleClick} >\n        <Badge badgeContent={0}  color=\"secondary\">\n          <Avatar className={ classes.avatar}>{initials}</Avatar>\n        </Badge>\n      </IconButton>\n      </HtmlTooltip>\n    </React.Fragment>\n  );\n}\n","import { connect } from 'react-redux'\nimport ToolbarAvatarComponent from '../components/ToolbarAvatar'\n\nimport * as actions from '../actions'\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    // dispatching plain actions\n    Push: (path) => dispatch(actions.Push(path)),\n    SetCurrentApp: (app) => dispatch(actions.SetCurrentApp(app)),\n    SetAppError: (message,errorType,errorSeverity) => dispatch(actions.SetAppError(message,errorType,errorSeverity)),\n    Logout: () => dispatch(actions.Logout())\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { Global,User,Msal } = state\n  return {\n    msalInstance: Msal.msalInstance,\n    name:Msal.name,\n    initials:Msal.initials,\n    department: Msal.department,\n    companyName:Msal.companyName,\n    isAuthenticated: User.isAuthenticated,\n    currentApp: Global.currentApp,\n    appSet: Global.appSet\n  }\n}\n\nexport const ToolbarAvatar = connect(mapStateToProps, mapDispatchToProps)(ToolbarAvatarComponent)\n/*\n  const { Msal } = state;\n  return {\n    msalInstance: Msal.msalInstance\n  };\n\n*/","import { compareAsc, format } from \"date-fns\";\nimport { Formik, Field } from \"formik\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Grid from \"@material-ui/core/Grid\";\nimport React from \"react\";\nimport * as common from '@bgroves/common';\n\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker\n} from \"@material-ui/pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\n\nimport * as errorSeverity from \"../../constants/ErrorSeverity\";\nimport * as errorType from \"../../constants/ErrorType\";\n\nconst DatePickerField = ({ field, form, myLabel,...other }) => {\n  const currentError = form.errors[field.name];\n  common.log(`field: ${field.name},${myLabel}`);\n \n  return (\n    <KeyboardDatePicker\n      required\n      disableToolbar\n      variant=\"inline\"\n      margin=\"normal\"\n      id={field.name}\n      name={field.name}\n      label={myLabel}\n      value={field.value}\n      format=\"MM/dd/yyyy\"\n      helperText={currentError}\n      error={Boolean(currentError)}\n      onError={error => {\n        // handle as a side effect\n        if (error !== currentError) {\n          form.setFieldError(field.name, error);\n        }\n      }}\n      autoComplete=\"\"\n      // if you are using custom validation schema you probably want to pass `true` as third argument\n      onChange={date => form.setFieldValue(field.name, date, true)}\n      KeyboardButtonProps={{\n        \"aria-label\": \"change date\"\n      }}\n      {...other}\n    />\n  );\n};\n\nexport default function DialogCompareContainer(params) {\n  const {\n    firstDayOfWeek,\n    lastDayOfWeek,\n    OpenCompareContainerDialog,\n    CompareContainerFetch,\n    Push,\n    SetAppError,\n    Submitting,\n    submitting\n  } = params;\n\n  const handleClose = () => {\n    Push(\"/\");\n    OpenCompareContainerDialog(false);\n  };\n  return (\n    <Dialog\n      open={true}\n      onClose={handleClose}\n      aria-labelledby=\"form-dialog-title\"\n    >\n      <DialogTitle id=\"form-dialog-title\">Compare Plex Containers</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          Select the start and end date. The start date's time is 00:00:00 and\n          end date's time is 11:59:59.\n        </DialogContentText>\n\n        <Formik\n          initialValues={{ startDate: firstDayOfWeek, endDate: lastDayOfWeek }}\n          onSubmit={(values, { setSubmitting }) => {\n            Submitting(true);  // buttons look at this to determine if they should be enabled?\n            let sd = new Date(values.startDate);\n            let start = format(sd, \"yyyy-MM-dd'T00:00:00'\");\n            common.log(start);\n            let ed = new Date(values.endDate);\n            let end = format(ed, \"yyyy-MM-dd'T23:59:59'\");\n            common.log(end);\n            //Compare the two dates and return 1 if the first date is after the second,\n            // -1 if the first date is before the second or 0 if dates are equal.\n            if (-1 === compareAsc(ed, sd)) {\n              SetAppError(\n                \"Start date should be before end date.\",\n                errorType.DATE,\n                errorSeverity.LOW\n              );\n              Submitting(false);\n            } else {\n              Push('/cnc/transition');\n              CompareContainerFetch(start, end, 1000, 0, \"/cnc/viewCompareContainer\", true);  // will set submitting to false after done.\n           //   OpenDialog200206(false);\n            }\n          }}\n        >\n          {props => {\n            const { handleSubmit } = props;\n\n            return (\n              <div>\n                <form onSubmit={handleSubmit}>\n                  <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                    <Grid container justify=\"space-around\">\n                      <Field name=\"startDate\" placeholder=\"Start Date\" myLabel=\"Start Date\" component={DatePickerField} />\n                      <Field name=\"endDate\" placeholder=\"End Date\" myLabel=\"End Date\" component={DatePickerField} />\n                    </Grid>\n                  </MuiPickersUtilsProvider>\n                  <DialogActions>\n                    <Button\n                      disabled={submitting}\n                      type=\"button\"\n                      className=\"outline\"\n                      onClick={handleClose}\n                    >\n                      Cancel\n                    </Button>\n                    <Button type=\"submit\" disabled={submitting}>\n                      Submit\n                    </Button>\n                  </DialogActions>\n                </form>\n              </div>\n            );\n          }}\n        </Formik>\n      </DialogContent>\n    </Dialog>\n  );\n}\n","import { connect } from 'react-redux';\nimport DialogCompareContainerComponent from '../../components/CNC/DialogCompareContainer';\nimport * as actions from '../../actions';\n\nfunction mapStateToProps(state) {\n  const { Global } = state;\n  return {\n    firstDayOfWeek: Global.firstDayOfWeek,\n    lastDayOfWeek: Global.lastDayOfWeek,\n    submitting: Global.submitting,\n  };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    // dispatching plain actions\n    OpenCompareContainerDialog: (open) => dispatch(actions.OpenCompareContainerDialog(open)),\n    CompareContainerFetch: (startDate, endDate, limit, skip, route, setSubmittingOff) => dispatch(actions.CompareContainerFetch(startDate, endDate, limit, skip, route, setSubmittingOff)),\n    Push: (path) => dispatch(actions.Push(path)),\n    Submitting: (submitting) => dispatch(actions.Submitting(submitting)),\n    SetAppError: (message, errorType, errorSeverity) => dispatch(actions.SetAppError(message, errorType, errorSeverity)),\n  };\n};\n\nexport const DialogCompareContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(DialogCompareContainerComponent);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Dialog from \"@material-ui/core/Dialog\";\n\nimport Box from '@material-ui/core/Box';\nimport List from '@material-ui/core/List';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport Paper from \"@material-ui/core/Paper\";\nimport PlayCircleFilledWhiteIcon from \"@material-ui/icons/PlayCircleFilledWhite\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport * as BuildingKey from '../../constants/BuildingKey';\nimport * as BuildingCode from '../../constants/BuildingCode';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  container: {\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(4)\n  },  \n  paper: {\n    marginTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),    \n  //  display: 'flex',\n //   flexDirection: 'column',\n    alignItems: 'center',\n  },\n  header: {\n    padding: theme.spacing(0),\n  },\n  s1: {\n    padding: theme.spacing(2),\n  },\n\n}));\n\nexport default function DialogUpcomingToolChanges(params) {\n  const {\n    UpcomingToolChangesCreate,\n    SetUpcomingToolChangesBuildingKey,\n    SetUpcomingToolChangesBuildingCode,\n    Push,\n  } = params;\n\n\n  const classes = useStyles();\n\n  const handlePlant11 = () => {\n    \n    Push('/cnc/transition');\n    SetUpcomingToolChangesBuildingKey(BuildingKey.PLANT_11); // Avilla\n    SetUpcomingToolChangesBuildingCode(BuildingCode.PLANT_11); // Avilla\n    UpcomingToolChangesCreate(\n      BuildingKey.PLANT_11,\n      true,\n      1000,\n      '/cnc/ViewUpcomingToolChanges',\n      true);\n};\n  const handlePlant6 = () => {\n    Push('/cnc/transition');\n    SetUpcomingToolChangesBuildingKey(BuildingKey.PLANT_6); // Plant 8 5641\n    SetUpcomingToolChangesBuildingCode(BuildingCode.PLANT_6); // Avilla\n    UpcomingToolChangesCreate(\n      BuildingKey.PLANT_6,\n      true,\n      1000,\n      '/cnc/ViewUpcomingToolChanges',\n      true);\n\n};\n  const handleClose = () => {\n    Push(\"/cnc\");\n  };\n\n  return (\n    <Dialog\n      open={true}\n      onClose={handleClose}\n      aria-labelledby=\"form-dialog-title\"\n    >\n\n    <Box display=\"flex\" justifyContent=\"center\" m={1} p={1} bgcolor=\"background.paper\">\n        <Box p={1} bgcolor=\"background.paper\" >\n            <List component=\"nav\" aria-label=\"main mailbox folders\">\n              <ListSubheader className={classes.header} >\n              <Paper >\n            <AppBar position=\"static\" >\n              <Toolbar>\n                <PlayCircleFilledWhiteIcon style={{ fontSize: 30 }} />\n                <Typography variant=\"h6\" className={classes.s1} >\n                  Select Building\n                </Typography>\n              </Toolbar>\n            </AppBar>\n          </Paper>\n              </ListSubheader>\n              <Divider />\n              <ListItem button onClick={handlePlant6}>\n                <ListItemText bgcolor=\"primary.main\" primary=\"Plant 6\" />\n              </ListItem>\n              <ListItem button onClick={handlePlant11}>\n                <ListItemText bgcolor=\"primary.main\" primary=\"Plant 11\" />\n              </ListItem>\n            </List>\n\n        </Box>\n\n      </Box>\n    </Dialog>\n  );\n}\n\n\n","import { connect } from 'react-redux';\nimport DialogUpcomingToolChangesComponent from '../../components/CNC/DialogUpcomingToolChanges';\nimport * as actions from '../../actions';\n\nfunction mapStateToProps(state) {\n  const { Global } = state;\n  return {\n    firstDayOfWeek: Global.firstDayOfWeek,\n    lastDayOfWeek: Global.lastDayOfWeek,\n    submitting: Global.submitting,\n  };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    // dispatching plain actions\n    UpcomingToolChangesCreate: (Building_Key,fetch,limit,route, setSubmittingOff) => dispatch(actions.UpcomingToolChangesCreate(Building_Key,fetch,limit,route, setSubmittingOff)),\n    SetUpcomingToolChangesBuildingKey:(Building_Key) => dispatch(actions.SetUpcomingToolChangesBuildingKey(Building_Key)),\n    SetUpcomingToolChangesBuildingCode:(Building_Code) => dispatch(actions.SetUpcomingToolChangesBuildingCode(Building_Code)),\n    Push: (path) => dispatch(actions.Push(path)),\n    Submitting: (submitting) => dispatch(actions.Submitting(submitting)),\n    SetAppError: (message, errorType, errorSeverity) =>\n      dispatch(actions.SetAppError(message, errorType, errorSeverity)),\n  };\n};\n\nexport const DialogUpcomingToolChanges = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(DialogUpcomingToolChangesComponent);\n\n/*\nexport const UpcomingToolChangesCreate = (\n  Building_Key,\n  fetch,\n  limit,\n  route,\n  setSubmittingOff,\n) => ({\n  type: types.UPCOMING_TOOL_CHANGES_CREATE,\n  Building_Key,\n  fetch,\n  limit,\n  route,\n  setSubmittingOff,\n});\n\n*/","import { makeStyles, useTheme } from '@material-ui/core/styles';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport IconButton from '@material-ui/core/IconButton';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport Paper from '@material-ui/core/Paper';\nimport PropTypes from 'prop-types';\nimport React, { useEffect } from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport * as common from '@bgroves/common';\n\nlet g_total;\nlet g_limit;\nlet g_skip;\nlet g_CompareContainerFetch;\nlet g_firstBuffPage;\nlet g_lastBuffPage;\nlet g_lastPage;\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { page, onChangePage } = props;\n\n  const handleFirstPageButtonClick = event => {\n    if (g_skip > 0) {\n      g_CompareContainerFetch(g_limit, 0, '', false);\n    }\n    onChangePage(event, 0);\n  };\n\n  const handleBackButtonClick = event => {\n    if (page === g_firstBuffPage) {\n      g_CompareContainerFetch(\n        g_limit,\n        g_skip - g_limit,\n        '',\n        false,\n      );\n    }\n    onChangePage(event, page - 1);\n  };\n\n  const handleNextButtonClick = event => {\n    if (page === g_lastBuffPage) {\n      common.log(`page: ${page},g_lastBuffPage: ${g_lastBuffPage}`);\n      g_CompareContainerFetch(\n        g_limit,\n        g_skip + g_limit,\n        '',\n        false,\n      );\n    }\n    onChangePage(event, page + 1);\n  };\n\n  const handleLastPageButtonClick = event => {\n    if (g_skip < g_total - g_limit) {\n      g_CompareContainerFetch(\n        g_limit,\n        g_total - g_limit,\n        '',\n        false,\n      );\n    }\n    onChangePage(event, g_lastPage);\n  };\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton\n        onClick={handleBackButtonClick}\n        disabled={page === 0}\n        aria-label=\"previous page\"\n      >\n        {theme.direction === 'rtl' ? (\n          <KeyboardArrowRight />\n        ) : (\n          <KeyboardArrowLeft />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= g_lastPage}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? (\n          <KeyboardArrowLeft />\n        ) : (\n          <KeyboardArrowRight />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= g_lastPage}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n// disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nconst useStyles2 = makeStyles({\n  table: {\n    minWidth: 500,\n  },\n});\n\nexport default function TableCompareContainer({\n  isAuthenticated,\n  total,\n  limit,\n  skip,\n  data,\n  Push,\n  CompareContainerFetch,\n}) {\n  g_total = total;\n  g_limit = limit;\n  g_skip = skip;\n  g_CompareContainerFetch = CompareContainerFetch;\n  useEffect(() => {\n    // Update the document title using the browser API\n    // document.title = `You clicked ${count} times`;\n    if (!isAuthenticated) {\n      Push('/login');\n    }\n    if (total === 0) {\n      Push('/');\n    }\n  });\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  /* \n  I don't think this will work unless skip is evenly divisible by \n  rowsPerPage\n  */\n  g_firstBuffPage = Math.max(0, g_skip / rowsPerPage);\n  g_lastBuffPage =\n    g_firstBuffPage + Math.max(0, Math.ceil(data.length / rowsPerPage) - 1);\n  g_lastPage = Math.max(0, Math.ceil(g_total / rowsPerPage) - 1); // 0 based pages,\n  /*\n  If the total number of records has decreased then we could be on \n  a page that does not exist any longer\n  */\n if(page>g_lastPage){\n   setPage(g_lastPage);\n }\n\n/* I THINK THIS IS WRONG SO I CHANGED IT\n let emptyRows;\n if(rowsPerPage>data.length){\n   emptyRows = 0;\n }else{\n   emptyRows = rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage); // Won't work as a useState variable.\n }\n*/\n\n let emptyRows = rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage); // Won't work as a useState variable.\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    const rpp = parseInt(event.target.value, 10);\n    setRowsPerPage(rpp);\n    g_firstBuffPage = Math.max(0, g_skip / rpp);\n    g_lastBuffPage =\n      g_firstBuffPage + Math.max(0, Math.ceil(data.length / rpp) - 1);\n    g_lastPage = Math.max(0, Math.ceil(g_total / rpp) - 1); // 0 based pages,\n    setPage(g_firstBuffPage);\n    common.log(\n      `g_firstBuffPage: ${g_firstBuffPage},g_lastBuffPage:${g_lastBuffPage},g_lastPage:${g_lastPage}`,\n    );\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"custom pagination table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>DateTime</TableCell>\n            <TableCell align=\"right\">CNC</TableCell>\n            <TableCell align=\"right\">Name</TableCell>\n            <TableCell align=\"right\">Part_No</TableCell>\n            <TableCell align=\"right\">Serial_No</TableCell>\n            <TableCell align=\"right\">tst_Serial_No</TableCell>\n            <TableCell align=\"right\">Quantity</TableCell>\n            <TableCell align=\"right\">tst_Quantity</TableCell>\n            <TableCell align=\"right\">Container_Status</TableCell>\n\n          </TableRow>\n        </TableHead>\n\n        <TableBody>\n          {(rowsPerPage > 0\n            ? data.slice(\n                (page - g_firstBuffPage) * rowsPerPage,\n                (page - g_firstBuffPage) * rowsPerPage + rowsPerPage,\n              )\n            : data\n          ).map(row => (\n            <TableRow key={row.CompareContainer_Key}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.TransDate}\n              </TableCell>\n              <TableCell align=\"right\">\n                {row.CNC}\n              </TableCell>\n              <TableCell align=\"right\">{row.Name}</TableCell>\n              <TableCell align=\"right\">\n                {row.Part_No}\n              </TableCell>\n              <TableCell align=\"right\">{row.Serial_No}</TableCell>\n              <TableCell align=\"right\">{row.tst_Serial_No}</TableCell>\n              <TableCell align=\"right\">{row.Quantity}</TableCell>\n              <TableCell align=\"right\">{row.tst_Quantity}</TableCell>\n              <TableCell align=\"right\">{row.Container_Status}</TableCell>\n            </TableRow>\n          ))}\n\n          {emptyRows > 0 && (\n            <TableRow key=\"9999\" style={{ height: 53 * emptyRows }}>\n              <TableCell colSpan={6} />\n            </TableRow>\n          )}\n        </TableBody>\n        <TableFooter>\n          <TableRow>\n            <TablePagination\n              rowsPerPageOptions={[5, 10, 25]}\n              colSpan={5}\n              count={total}\n              rowsPerPage={rowsPerPage}\n              page={page}\n              SelectProps={{\n                inputProps: { 'aria-label': 'rows per page' },\n                native: true,\n              }}\n              onChangePage={handleChangePage}\n              onChangeRowsPerPage={handleChangeRowsPerPage}\n              ActionsComponent={TablePaginationActions}\n            />\n          </TableRow>\n        </TableFooter>\n      </Table>\n    </TableContainer>\n  );\n}\n","// No Reducer\n// Plex building keys\nexport const PLANT_11 = '5680'\nexport const PLANT_8 = '5641'\nexport const PLANT_6 = '5644'\n\n","// No Reducer\n// Plex building codes\n// values(5680,'Mobex Global Avilla','Mobex Global Avilla - Plant 11',11)\n// values(5641,'Mobex Global Plant 8','Mobex Global Albion - Plant 8',8)\n\nexport const PLANT_11 = 'Mobex Global Avilla'\nexport const PLANT_8 = 'Mobex Global Plant 8'\nexport const PLANT_6 = 'Mobex Global Plant 6'\n\n","import { connect } from \"react-redux\";\nimport TableCompareContainerComponent from \"../../components/CNC/TableCompareContainer\";\nimport * as actions from \"../../actions\";\n\nfunction mapStateToProps(state) {\n  const { User, CompareContainer, Global } = state;\n  return {\n    isAuthenticated: User.isAuthenticated,\n    total: CompareContainer.total,\n    limit: CompareContainer.limit,\n    skip: CompareContainer.skip,\n    data: CompareContainer.data,\n    submitting: Global.submitting\n  };\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    // dispatching plain actions\n    Push: () => dispatch(actions.Push()),\n    CompareContainerFetch: (limit, skip, route, setSubmittingOff) =>\n      dispatch(\n        actions.CompareContainerFetch(\n          limit,\n          skip,\n          route,\n          setSubmittingOff\n        )\n      ),\n    Submitting: submitting => dispatch(actions.Submitting(submitting))\n  };\n};\n\nexport const TableCompareContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TableCompareContainerComponent);\n","import React, { useEffect } from 'react';\nimport Box from '@material-ui/core/Box';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\nimport { TableCompareContainer } from '../../containers/CNC/TableCompareContainer';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(1),\n  },\n}));\n\nexport default function ViewCompareContainer({isAuthenticated,Push}) {\n  useEffect(() => {\n    // Update the document title using the browser API\n    //document.title = `You clicked ${count} times`;\n    if (!isAuthenticated) {\n      Push(\"/login\");\n    }\n    // if (total === 0) {\n    //   SetAppError(\n    //     'No records for that date range.',\n    //     errorType.DATE,\n    //     errorSeverity.LOW,\n    //   );\n    //   common.log('View200206=>No records, before push()');\n    //   Push('/');\n    // }\n  });\n  const classes = useStyles();\n\n  return (\n    <Box display=\"flex\" flexDirection=\"column\">\n      <Box p={1} bgcolor=\"grey.300\">\n        <div className={classes.root}>\n          <Typography variant=\"h6\" align=\"center\" gutterBottom>\n            Compare Plex Containers\n          </Typography>\n          <Typography variant=\"body1\" gutterBottom>\n            This report compares the values of setup containers on the Plex production and test\n            servers.  It is meant to validate the Mach2 software is correctly updating \n            container counts on the test server before trusting it to update the real\n            container counts on the Plex production server.\n          </Typography>\n        </div>\n      </Box>\n      <Box>\n        <TableCompareContainer />\n      </Box>\n    </Box>\n  );\n}\n\n/*\nexport default function Dashboard({ isAuthenticated, isAdmin, Push }) {\n  useEffect(() => {\n    // Update the document title using the browser API\n    //document.title = `You clicked ${count} times`;\n    if (!isAuthenticated) {\n      Push(\"/login\");\n    }\n  });\n*/\n","import { connect } from \"react-redux\";\nimport ViewCompareContainerComponent from \"../../components/CNC/ViewCompareContainer\";\nimport * as actions from '../../actions'\n\nfunction mapStateToProps(state) {\n  const { User } = state\n  return {\n    isAuthenticated: User.isAuthenticated,\n  }\n}\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    // dispatching plain actions\n    Push: (path) => dispatch(actions.Push(path)),\n    SetAppError: (message,errorType,errorSeverity) => dispatch(actions.SetAppError(message,errorType,errorSeverity))\n  }\n}\n\n\nexport const ViewCompareContainer = connect(mapStateToProps, mapDispatchToProps)(ViewCompareContainerComponent)\n","import { makeStyles, useTheme } from '@material-ui/core/styles';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport IconButton from '@material-ui/core/IconButton';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport Paper from '@material-ui/core/Paper';\nimport PropTypes from 'prop-types';\nimport React, { useEffect } from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport * as common from '@bgroves/common';\n\nlet g_table;\nlet g_total;\nlet g_limit;\nlet g_skip;\nlet g_UpcomingToolChangesFetch;\nlet g_firstBuffPage;\nlet g_lastBuffPage;\nlet g_lastPage;\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { page, onChangePage } = props;\n\n  const handleFirstPageButtonClick = event => {\n    if (g_skip > 0) {\n      g_UpcomingToolChangesFetch(g_table,g_limit, 0, '', false);\n    }\n    onChangePage(event, 0);\n  };\n\n  const handleBackButtonClick = event => {\n    if (page === g_firstBuffPage) {\n      g_UpcomingToolChangesFetch(\n        g_table,\n        g_total,\n        g_limit,\n        g_skip - g_limit,\n        '',\n        false,\n      );\n    }\n    onChangePage(event, page - 1);\n  };\n\n  const handleNextButtonClick = event => {\n    if (page === g_lastBuffPage) {\n      common.log(`page: ${page},g_lastBuffPage: ${g_lastBuffPage}`);\n      g_UpcomingToolChangesFetch(\n        g_table,\n        g_total,\n        g_limit,\n        g_skip + g_limit,\n        '',\n        false,\n      );\n    }\n    onChangePage(event, page + 1);\n  };\n\n  const handleLastPageButtonClick = event => {\n    if (g_skip < g_total - g_limit) {\n      g_UpcomingToolChangesFetch(\n        g_table,\n        g_limit,\n        g_total - g_limit,\n        '',\n        false,\n      );\n    }\n    onChangePage(event, g_lastPage);\n  };\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton\n        onClick={handleBackButtonClick}\n        disabled={page === 0}\n        aria-label=\"previous page\"\n      >\n        {theme.direction === 'rtl' ? (\n          <KeyboardArrowRight />\n        ) : (\n          <KeyboardArrowLeft />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= g_lastPage}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? (\n          <KeyboardArrowLeft />\n        ) : (\n          <KeyboardArrowRight />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= g_lastPage}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n// disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nconst useStyles2 = makeStyles({\n  table: {\n    minWidth: 500,\n  },\n});\n\nexport default function TableUpcomingToolChanges({\n  isAuthenticated,\n  table,\n  total,\n  limit,\n  skip,\n  data,\n  Push,\n  UpcomingToolChangesFetch\n}) {\n  g_table = table;\n  g_total = total;\n  g_limit = limit;\n  g_skip = skip;\n  g_UpcomingToolChangesFetch = UpcomingToolChangesFetch;\n  useEffect(() => {\n    // Update the document title using the browser API\n    // document.title = `You clicked ${count} times`;\n    if (!isAuthenticated) {\n      Push('/login');\n    }\n    if (total === 0) {\n      Push('/cnc');\n    }\n  });\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  /* \n  I don't think this will work unless skip is evenly divisible by \n  rowsPerPage\n  */\n  g_firstBuffPage = Math.max(0, g_skip / rowsPerPage);\n  g_lastBuffPage =\n    g_firstBuffPage + Math.max(0, Math.ceil(data.length / rowsPerPage) - 1);\n  g_lastPage = Math.max(0, Math.ceil(g_total / rowsPerPage) - 1); // 0 based pages,\n  /*\n  If the total number of records has decreased then we could be on \n  a page that does not exist any longer\n  */\n if(page>g_lastPage){\n   setPage(g_lastPage);\n }\n\n let emptyRows = rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage); // Won't work as a useState variable.\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    const rpp = parseInt(event.target.value, 10);\n    setRowsPerPage(rpp);\n    g_firstBuffPage = Math.max(0, g_skip / rpp);\n    g_lastBuffPage =\n      g_firstBuffPage + Math.max(0, Math.ceil(data.length / rpp) - 1);\n    g_lastPage = Math.max(0, Math.ceil(g_total / rpp) - 1); // 0 based pages,\n    setPage(g_firstBuffPage);\n    common.log(\n      `g_firstBuffPage: ${g_firstBuffPage},g_lastBuffPage:${g_lastBuffPage},g_lastPage:${g_lastPage}`,\n    );\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"custom pagination table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>CNC</TableCell>\n            <TableCell >Part No</TableCell>\n            <TableCell >Tool No</TableCell>\n            <TableCell >Tool Life</TableCell>\n            <TableCell >Current Value</TableCell>\n            <TableCell >Minutes Remaining</TableCell>\n            <TableCell >Fastest Cycle</TableCell>\n            <TableCell >Last Update</TableCell>\n          </TableRow>\n        </TableHead>\n\n        <TableBody>\n          {(rowsPerPage > 0\n            ? data.slice(\n                (page - g_firstBuffPage) * rowsPerPage,\n                (page - g_firstBuffPage) * rowsPerPage + rowsPerPage,\n              )\n            : data\n          ).map(row => (\n            <TableRow key={row.primary_key}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.CNC}\n              </TableCell>\n              <TableCell >{row.Part_No}</TableCell>\n              <TableCell >{row.Assembly_No}</TableCell>\n              <TableCell >{row.Tool_Life}</TableCell>\n              <TableCell >\n                {row.Current_Value}\n              </TableCell>\n              <TableCell >{row.iMinutes_Remaining}</TableCell>\n              <TableCell >{row.iFastest_Cycle_Time + '(s)'}</TableCell>\n              <TableCell >{row.Last_Update}</TableCell>\n            </TableRow>\n          ))}\n\n          {emptyRows > 0 && (\n            <TableRow key=\"9999\" style={{ height: 53 * emptyRows }}>\n              <TableCell colSpan={6} />\n            </TableRow>\n          )}\n        </TableBody>\n        <TableFooter>\n          <TableRow>\n            <TablePagination\n              rowsPerPageOptions={[5, 10, 25]}\n              colSpan={5}\n              count={total}\n              rowsPerPage={rowsPerPage}\n              page={page}\n              SelectProps={{\n                inputProps: { 'aria-label': 'rows per page' },\n                native: true,\n              }}\n              onChangePage={handleChangePage}\n              onChangeRowsPerPage={handleChangeRowsPerPage}\n              ActionsComponent={TablePaginationActions}\n            />\n          </TableRow>\n        </TableFooter>\n      </Table>\n    </TableContainer>\n  );\n}\n","import { connect } from \"react-redux\";\nimport TableUpcomingToolChangesComponent from \"../../components/CNC/TableUpcomingToolChanges\";\nimport * as actions from \"../../actions\";\n\nfunction mapStateToProps(state) {\n  const { User, UpcomingToolChanges, Global } = state;\n  return {\n    isAuthenticated: User.isAuthenticated,\n    Building_Key: UpcomingToolChanges.Building_Key,\n    table: UpcomingToolChanges.table,\n    total: UpcomingToolChanges.total,\n    limit: UpcomingToolChanges.limit,\n    skip: UpcomingToolChanges.skip,\n    data: UpcomingToolChanges.data,\n    submitting: Global.submitting\n  };\n}\n//UpcomingToolChanges\nconst mapDispatchToProps = dispatch => {\n  return {\n    // dispatching plain actions\n    Push: () => dispatch(actions.Push()),\n    UpcomingToolChangesFetch: (table,limit, skip, route, setSubmittingOff) =>\n      dispatch(\n        actions.UpcomingToolChangesFetch(\n          table,\n          limit,\n          skip,\n          route,\n          setSubmittingOff\n        )\n      ),\n    Submitting: submitting => dispatch(actions.Submitting(submitting))\n  };\n};\n\nexport const TableUpcomingToolChanges = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TableUpcomingToolChangesComponent);\n","import React, { useEffect } from 'react';\nimport Box from '@material-ui/core/Box';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { TableUpcomingToolChanges } from '../../containers/CNC/TableUpcomingToolChanges';\n\n// import * as common from '@bgroves/common';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(1),\n  },\n}));\n\nexport default function ViewUpcomingToolChanges(params) {\n  //  const { Push, total, SetAppError } = params;\n  const {Building_Code} = params;\n  useEffect(() => {\n    // if (total === 0) {\n    //   SetAppError(\n    //     'No records for that date range.',\n    //     errorType.DATE,\n    //     errorSeverity.LOW,\n    //   );\n    //   common.log('View200206=>No records, before push()');\n    //   Push('/');\n    // }\n  });\n  const classes = useStyles();\n  return (\n    <div>\n    <Box display=\"flex\" flexDirection=\"column\">\n      <Box p={1} bgcolor=\"grey.300\">\n        <div className={classes.root}>\n          <Typography variant=\"h6\" align=\"center\" gutterBottom>\n   {Building_Code} Upcoming Tool Changes.\n          </Typography>\n          <Typography variant=\"body1\" gutterBottom>\n            This report lists the upcoming tool changes for a building and is in\n            ascending order.  The estimate of when a tool change will be needed is \n            based upon the current tool counter value, the last recorded tool life\n            in the OTLM.SSB subroutine, and the fastest cycle time as recorded by \n            App13319.  It can be improved by changing the code to lower the priority\n            of CNC that are not currently running.\n          </Typography>\n        </div>\n      </Box>\n      <Box>\n        <TableUpcomingToolChanges />\n      </Box>\n    </Box>\n    </div>\n  );\n}\n\n","import { connect } from \"react-redux\";\nimport ViewUpcomingToolChangesComponent from \"../../components/CNC/ViewUpcomingToolChanges\";\nimport * as actions from '../../actions'\n\nfunction mapStateToProps(state) {\n  const { User,UpcomingToolChanges } = state\n  return {\n    Building_Code: UpcomingToolChanges.Building_Code,\n    Building_Key: UpcomingToolChanges.Building_Key,\n    isAuthenticated: User.isAuthenticated,\n    isAdmin: User.isAdmin\n  }\n}\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    // dispatching plain actions\n    Push: (path) => dispatch(actions.Push(path)),\n    SetAppError: (message,errorType,errorSeverity) => dispatch(actions.SetAppError(message,errorType,errorSeverity))\n  }\n}\n\n\nexport const ViewUpcomingToolChanges = connect(mapStateToProps, mapDispatchToProps)(ViewUpcomingToolChangesComponent)\n","import { compareAsc, format } from \"date-fns\";\nimport { Formik, Field } from \"formik\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Grid from \"@material-ui/core/Grid\";\nimport React from \"react\";\nimport * as common from '@bgroves/common';\n\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker\n} from \"@material-ui/pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\n\nimport * as errorSeverity from \"../../constants/ErrorSeverity\";\nimport * as errorType from \"../../constants/ErrorType\";\n\nconst DatePickerField = ({ field, form, myLabel,...other }) => {\n  const currentError = form.errors[field.name];\n  common.log(`field: ${field.name},${myLabel}`);\n \n  return (\n    <KeyboardDatePicker\n      required\n      disableToolbar\n      variant=\"inline\"\n      margin=\"normal\"\n      id={field.name}\n      name={field.name}\n      label={myLabel}\n      value={field.value}\n      format=\"MM/dd/yyyy\"\n      helperText={currentError}\n      error={Boolean(currentError)}\n      onError={error => {\n        // handle as a side effect\n        if (error !== currentError) {\n          form.setFieldError(field.name, error);\n        }\n      }}\n      autoComplete=\"\"\n      // if you are using custom validation schema you probably want to pass `true` as third argument\n      onChange={date => form.setFieldValue(field.name, date, true)}\n      KeyboardButtonProps={{\n        \"aria-label\": \"change date\"\n      }}\n      {...other}\n    />\n  );\n};\n\nexport default function DialogToolChangeSummary(params) {\n  const {\n    firstDayOfWeek,\n    lastDayOfWeek,\n    CreateToolChangeSummary,\n    SetToolChangeSummaryStartDate,\n    SetToolChangeSummaryEndDate,\n    Push,\n    SetAppError,\n    Submitting,\n    submitting\n  } = params;\n\n  const handleClose = () => {\n    Push(\"/cnc\");\n  };\n  return (\n    <Dialog\n      open={true}\n      onClose={handleClose}\n      aria-labelledby=\"form-dialog-title\"\n    >\n      <DialogTitle id=\"form-dialog-title\">Tool Change Summary</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          Select the start and end date. The start date's time is 00:00:00 and\n          end date's time is 11:59:59.\n        </DialogContentText>\n\n        <Formik\n          initialValues={{ startDate: firstDayOfWeek, endDate: lastDayOfWeek }}\n          onSubmit={(values, { setSubmitting }) => {\n            Submitting(true);  // buttons look at this to determine if they should be enabled?\n            let sd = new Date(values.startDate);\n            let start = format(sd, \"yyyy-MM-dd'T00:00:00'\");\n            common.log(start);\n            let ed = new Date(values.endDate);\n            let end = format(ed, \"yyyy-MM-dd'T23:59:59'\");\n            common.log(end);\n            //Compare the two dates and return 1 if the first date is after the second,\n            // -1 if the first date is before the second or 0 if dates are equal.\n            if (-1 === compareAsc(ed, sd)) {\n              SetAppError(\n                \"Start date should be before end date.\",\n                errorType.DATE,\n                errorSeverity.LOW\n              );\n              Submitting(false);\n            } else {\n              Push('/cnc/transition');\n              SetToolChangeSummaryStartDate(start);\n              SetToolChangeSummaryEndDate(end);\n              CreateToolChangeSummary(\n                start,\n                end,\n                true,\n                1000,\n                '/cnc/ViewToolChangeSummary',\n                true);\n          \n            }\n          }}\n        >\n          {props => {\n            const { handleSubmit } = props;\n\n            return (\n              <div>\n                <form onSubmit={handleSubmit}>\n                  <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                    <Grid container justify=\"space-around\">\n                      <Field name=\"startDate\" placeholder=\"Start Date\" myLabel=\"Start Date\" component={DatePickerField} />\n                      <Field name=\"endDate\" placeholder=\"End Date\" myLabel=\"End Date\" component={DatePickerField} />\n                    </Grid>\n                  </MuiPickersUtilsProvider>\n                  <DialogActions>\n                    <Button\n                      disabled={submitting}\n                      type=\"button\"\n                      className=\"outline\"\n                      onClick={handleClose}\n                    >\n                      Cancel\n                    </Button>\n                    <Button type=\"submit\" disabled={submitting}>\n                      Submit\n                    </Button>\n                  </DialogActions>\n                </form>\n              </div>\n            );\n          }}\n        </Formik>\n      </DialogContent>\n    </Dialog>\n  );\n}\n","import { connect } from 'react-redux';\nimport DialogToolChangeSummaryComponent from '../../components/CNC/DialogToolChangeSummary';\nimport * as actions from '../../actions';\n\nfunction mapStateToProps(state) {\n  const { Global } = state;\n  return {\n    firstDayOfWeek: Global.firstDayOfWeek,\n    lastDayOfWeek: Global.lastDayOfWeek,\n    submitting: Global.submitting,\n  };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    // dispatching plain actions\n    CreateToolChangeSummary: (startDate,endDate,fetch,limit,route, setSubmittingOff) => dispatch(actions.CreateToolChangeSummary(startDate,endDate,fetch,limit,route, setSubmittingOff)),\n    SetToolChangeSummaryStartDate: (startDate) => dispatch(actions.SetToolChangeSummaryStartDate(startDate)),\n    SetToolChangeSummaryEndDate: (endDate) => dispatch(actions.SetToolChangeSummaryEndDate(endDate)),\n    Push: (path) => dispatch(actions.Push(path)),\n    Submitting: (submitting) => dispatch(actions.Submitting(submitting)),\n    SetAppError: (message, errorType, errorSeverity) =>\n      dispatch(actions.SetAppError(message, errorType, errorSeverity)),\n  };\n};\n\nexport const DialogToolChangeSummary = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(DialogToolChangeSummaryComponent);\n","import { makeStyles, useTheme } from '@material-ui/core/styles';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport IconButton from '@material-ui/core/IconButton';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport Paper from '@material-ui/core/Paper';\nimport PropTypes from 'prop-types';\nimport React, { useEffect } from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport * as common from '@bgroves/common';\n\nlet g_table;\nlet g_total;\nlet g_limit;\nlet g_skip;\nlet g_FetchToolChangeSummary;\nlet g_firstBuffPage;\nlet g_lastBuffPage;\nlet g_lastPage;\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { page, onChangePage } = props;\n\n  const handleFirstPageButtonClick = event => {\n    if (g_skip > 0) {\n      g_FetchToolChangeSummary(g_table,g_limit, 0, '', false);\n    }\n    onChangePage(event, 0);\n  };\n\n  const handleBackButtonClick = event => {\n    if (page === g_firstBuffPage) {\n      g_FetchToolChangeSummary(\n        g_table,\n        g_total,\n        g_limit,\n        g_skip - g_limit,\n        '',\n        false,\n      );\n    }\n    onChangePage(event, page - 1);\n  };\n\n  const handleNextButtonClick = event => {\n    if (page === g_lastBuffPage) {\n      common.log(`page: ${page},g_lastBuffPage: ${g_lastBuffPage}`);\n      g_FetchToolChangeSummary(\n        g_table,\n        g_total,\n        g_limit,\n        g_skip + g_limit,\n        '',\n        false,\n      );\n    }\n    onChangePage(event, page + 1);\n  };\n\n  const handleLastPageButtonClick = event => {\n    if (g_skip < g_total - g_limit) {\n      g_FetchToolChangeSummary(\n        g_table,\n        g_limit,\n        g_total - g_limit,\n        '',\n        false,\n      );\n    }\n    onChangePage(event, g_lastPage);\n  };\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton\n        onClick={handleBackButtonClick}\n        disabled={page === 0}\n        aria-label=\"previous page\"\n      >\n        {theme.direction === 'rtl' ? (\n          <KeyboardArrowRight />\n        ) : (\n          <KeyboardArrowLeft />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= g_lastPage}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? (\n          <KeyboardArrowLeft />\n        ) : (\n          <KeyboardArrowRight />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= g_lastPage}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n// disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nconst useStyles2 = makeStyles({\n  table: {\n    minWidth: 500,\n  },\n});\n\nexport default function TableToolChangeSummary({\n  isAuthenticated,\n  table,\n  total,\n  limit,\n  skip,\n  data,\n  Push,\n  FetchToolChangeSummary\n}) {\n  g_table = table;\n  g_total = total;\n  g_limit = limit;\n  g_skip = skip;\n  g_FetchToolChangeSummary = FetchToolChangeSummary;\n  useEffect(() => {\n    // Update the document title using the browser API\n    // document.title = `You clicked ${count} times`;\n    if (!isAuthenticated) {\n      Push('/login');\n    }\n    if (total === 0) {\n      Push('/cnc');\n    }\n  });\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  /* \n  I don't think this will work unless skip is evenly divisible by \n  rowsPerPage\n  */\n  g_firstBuffPage = Math.max(0, g_skip / rowsPerPage);\n  g_lastBuffPage =\n    g_firstBuffPage + Math.max(0, Math.ceil(data.length / rowsPerPage) - 1);\n  g_lastPage = Math.max(0, Math.ceil(g_total / rowsPerPage) - 1); // 0 based pages,\n  /*\n  If the total number of records has decreased then we could be on \n  a page that does not exist any longer\n  */\n if(page>g_lastPage){\n   setPage(g_lastPage);\n }\n\n\n let emptyRows = rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage); // Won't work as a useState variable.\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    const rpp = parseInt(event.target.value, 10);\n    setRowsPerPage(rpp);\n    g_firstBuffPage = Math.max(0, g_skip / rpp);\n    g_lastBuffPage =\n      g_firstBuffPage + Math.max(0, Math.ceil(data.length / rpp) - 1);\n    g_lastPage = Math.max(0, Math.ceil(g_total / rpp) - 1); // 0 based pages,\n    setPage(g_firstBuffPage);\n    common.log(\n      `g_firstBuffPage: ${g_firstBuffPage},g_lastBuffPage:${g_lastBuffPage},g_lastPage:${g_lastPage}`,\n    );\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"custom pagination table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Plant</TableCell>\n            <TableCell>CNC</TableCell>\n            <TableCell >Part No</TableCell>\n            <TableCell >Operation</TableCell>\n            <TableCell >Assembly No</TableCell>\n            <TableCell >Description</TableCell>\n            <TableCell>Year-Week</TableCell>\n            <TableCell >Std TL</TableCell>\n            <TableCell >Std CPU</TableCell>\n            <TableCell >Week TL</TableCell>\n            <TableCell >Week CPU</TableCell>\n            <TableCell >Tool Changes</TableCell>\n          </TableRow>\n        </TableHead>\n\n        <TableBody>\n          {(rowsPerPage > 0\n            ? data.slice(\n                (page - g_firstBuffPage) * rowsPerPage,\n                (page - g_firstBuffPage) * rowsPerPage + rowsPerPage,\n              )\n            : data\n          ).map(row => (\n            <TableRow key={row.primary_key}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.Building_No}\n              </TableCell>\n              <TableCell >\n                {row.CNC}\n              </TableCell>\n              <TableCell >\n                {row.Part_No}\n              </TableCell>\n              <TableCell >\n                {row.Operation_Code}\n              </TableCell>\n              <TableCell >{row.Assembly_No}</TableCell>\n              <TableCell >\n                {row.Description}\n              </TableCell>\n              <TableCell >{row.year_week_fmt}</TableCell>\n              <TableCell >{row.STD_Tool_Life}</TableCell>\n              <TableCell >{row.STD_CPU}</TableCell>\n              <TableCell >{row.Week_Tool_Life}</TableCell>\n              <TableCell >{row.Week_CPU}</TableCell>\n              <TableCell >{row.Tool_Change_Count}</TableCell>\n            </TableRow>\n          ))}\n\n          {emptyRows > 0 && (\n            <TableRow key=\"9999\" style={{ height: 53 * emptyRows }}>\n              <TableCell colSpan={6} />\n            </TableRow>\n          )}\n        </TableBody>\n        <TableFooter>\n          <TableRow>\n            <TablePagination\n              rowsPerPageOptions={[5, 10, 25]}\n              colSpan={5}\n              count={total}\n              rowsPerPage={rowsPerPage}\n              page={page}\n              SelectProps={{\n                inputProps: { 'aria-label': 'rows per page' },\n                native: true,\n              }}\n              onChangePage={handleChangePage}\n              onChangeRowsPerPage={handleChangeRowsPerPage}\n              ActionsComponent={TablePaginationActions}\n            />\n          </TableRow>\n        </TableFooter>\n      </Table>\n    </TableContainer>\n  );\n}\n","import { connect } from \"react-redux\";\nimport TableToolChangeSummaryComponent from \"../../components/CNC/TableToolChangeSummary\";\nimport * as actions from \"../../actions\";\n\nfunction mapStateToProps(state) {\n  const { User, ToolChangeSummary, Global } = state;\n  return {\n    isAuthenticated: User.isAuthenticated,\n    startDate: ToolChangeSummary.startDate,\n    endDate: ToolChangeSummary.endDate,\n    table: ToolChangeSummary.table,\n    total: ToolChangeSummary.total,\n    limit: ToolChangeSummary.limit,\n    skip: ToolChangeSummary.skip,\n    data: ToolChangeSummary.data,\n    submitting: Global.submitting\n  };\n}\n//ToolChangeSummary\nconst mapDispatchToProps = dispatch => {\n  return {\n    // dispatching plain actions\n    Push: () => dispatch(actions.Push()),\n    FetchToolChangeSummary: (table,limit, skip, route, setSubmittingOff) =>\n      dispatch(\n        actions.FetchToolChangeSummary(\n          table,\n          limit,\n          skip,\n          route,\n          setSubmittingOff\n        )\n      ),\n    Submitting: submitting => dispatch(actions.Submitting(submitting))\n  };\n};\n\nexport const TableToolChangeSummary = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TableToolChangeSummaryComponent);\n","import React, { useEffect } from 'react';\nimport Box from '@material-ui/core/Box';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { TableToolChangeSummary } from '../../containers/CNC/TableToolChangeSummary';\n\n// import * as common from '@bgroves/common';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(1),\n  },\n}));\n\nexport default function ViewToolChangeSummary(params) {\n  useEffect(() => {\n    // if (total === 0) {\n    //   SetAppError(\n    //     'No records for that date range.',\n    //     errorType.DATE,\n    //     errorSeverity.LOW,\n    //   );\n    //   common.log('View200206=>No records, before push()');\n    //   Push('/');\n    // }\n  });\n  const classes = useStyles();\n  return (\n    <div>\n    <Box display=\"flex\" flexDirection=\"column\">\n      <Box p={1} bgcolor=\"grey.300\">\n        <div className={classes.root}>\n          <Typography variant=\"h6\" align=\"center\" gutterBottom>\n          Tool Change Summary\n          </Typography>\n          <Typography variant=\"body1\" gutterBottom>\n          This report shows the weekly tool life average,Week TL, for each tool assembly\n          as recorded by the Plex Tool Tracker.  The standard tool life,STD TL, is taken from the \n          CNC’s OTLM.SSB subroutine.  The standard cost per unit, STD CPU, is based upon the \n          standard tool life and weekly CPU, Week CPU, is based upon the weekly tool life.\n          </Typography>\n        </div>\n      </Box>\n      <Box>\n        <TableToolChangeSummary />\n      </Box>\n    </Box>\n    </div>\n  );\n}\n\n","import { connect } from \"react-redux\";\nimport ViewToolChangeSummaryComponent from \"../../components/CNC/ViewToolChangeSummary\";\nimport * as actions from '../../actions'\n\nfunction mapStateToProps(state) {\n  const { User,ToolChangeSummary } = state\n  return {\n    startDate: ToolChangeSummary.startDate,\n    endDate: ToolChangeSummary.endDate,\n    isAuthenticated: User.isAuthenticated,\n    isAdmin: User.isAdmin\n  }\n}\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    // dispatching plain actions\n    Push: (path) => dispatch(actions.Push(path)),\n    SetAppError: (message,errorType,errorSeverity) => dispatch(actions.SetAppError(message,errorType,errorSeverity))\n  }\n}\n\n\nexport const ViewToolChangeSummary = connect(mapStateToProps, mapDispatchToProps)(ViewToolChangeSummaryComponent)\n","import { makeStyles } from \"@material-ui/core/styles\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport React from \"react\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    \"& > * + *\": {\n      marginTop: theme.spacing(2)\n    }\n  }\n}));\n\nexport default function LinearIndeterminate() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <LinearProgress />\n      <LinearProgress color=\"secondary\" />\n    </div>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { Switch, Route, useRouteMatch } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { deepOrange, deepPurple } from '@material-ui/core/colors';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Button from '@material-ui/core/Button';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport clsx from 'clsx';\nimport { AppMenu } from '../../containers/AppMenu';\nimport { SideMenu } from '../../containers/CNC/SideMenu';\nimport { Landing } from '../../containers/CNC/Landing';\nimport { View13319 } from '../../containers/CNC/View13319';\nimport { ToolbarAvatar } from '../../containers/ToolbarAvatar';\nimport { DialogCompareContainer } from '../../containers/CNC/DialogCompareContainer';\nimport { DialogUpcomingToolChanges } from '../../containers/CNC/DialogUpcomingToolChanges';\nimport { ViewCompareContainer } from '../../containers/CNC/ViewCompareContainer';\nimport { ViewUpcomingToolChanges } from '../../containers/CNC/ViewUpcomingToolChanges';\nimport { DialogToolChangeSummary } from '../../containers/CNC/DialogToolChangeSummary';\nimport { ViewToolChangeSummary } from '../../containers/CNC/ViewToolChangeSummary';\nimport LinearIndeterminate from '../LinearIndeterminate';\n\nconst drawerWidth = 200;\n// const useStyles = makeStyles((theme) => ({\n//   root: {\n//     display: 'flex',\n//     '& > *': {\n//       margin: theme.spacing(1),\n//     },\n//   },\n//   small: {\n//     width: theme.spacing(3),\n//     height: theme.spacing(3),\n//   },\n//   large: {\n//     width: theme.spacing(7),\n//     height: theme.spacing(7),\n//   },\n// }));\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n  small: {\n    width: theme.spacing(4),\n    height: theme.spacing(4),\n  },\n  avatar:  {\n    width: theme.spacing(4),\n    height: theme.spacing(4),\n  },\n  orange:  {\n    width: theme.spacing(4),\n    height: theme.spacing(4),\n    color: theme.palette.getContrastText(deepOrange[500]),\n    backgroundColor: deepOrange[500],\n  },\n  purple: {\n    width: theme.spacing(4),\n    height: theme.spacing(4),\n    color: theme.palette.getContrastText(deepPurple[500]),\n    backgroundColor: deepPurple[500],\n  },\n}));\n\n// function Alert(props) {\n//   return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n// }\n\nexport default function App({\n  initials,\n  isAuthenticated,\n  isAdmin,\n  pathname,\n  Push,\n  Logout,\n  ClearAppError,\n  AuthenticateSaga,\n  appError,\n  openDialog200206,\n  openDialogToolChangeSummary,\n  Submitting,\n  submitting,\n}) {\n  useEffect(() => {\n    // Update the document title using the browser API\n    //document.title = `You clicked ${count} times`;\n    // if (!isAuthenticated) {\n    //   Push('login');\n    // }\n  });\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const handleCloseSnackBar1 = (event, reason) => {\n    console.log(`In handleCloseSnackBar1`);\n    ClearAppError();\n    if (reason === 'clickaway') {\n      return;\n    }\n    //    setOpen(false);\n  };\n  const handleCloseSnackBar2 = (event, reason) => {\n    console.log(`In handleCloseSnackBar2`);\n    ClearAppError();\n    if (reason === 'clickaway') {\n      return;\n    }\n    //    setOpen(false);\n  };\n  const handleCloseSnackBar3 = (event, reason) => {\n    console.log(`In handleCloseSnackBar3`);\n    ClearAppError();\n    if (reason === 'clickaway') {\n      return;\n    }\n    //    setOpen(false);\n  };\n  const handleTest = (event, reason) => {\n    console.log(`In handleTest`);\n    AuthenticateSaga('user@buschegroup.com', 'password', '/tracker', false);\n  };\n//         AuthenticateSaga(values.email, values.password, '/', true);\n\n  let match = useRouteMatch();\n  return (\n    <React.Fragment>\n      <CssBaseline />\n        <React.Fragment>\n          <AppBar\n            position=\"absolute\"\n            className={clsx(classes.appBar, open && classes.appBarShift)}\n          >\n            <Toolbar className={classes.toolbar}>\n              <IconButton\n                edge=\"start\"\n                color=\"inherit\"\n                aria-label=\"open drawer\"\n                onClick={handleDrawerOpen}\n                className={clsx(\n                  classes.menuButton,\n                  open && classes.menuButtonHidden,\n                )}\n              >\n                <MenuIcon />\n              </IconButton>\n              <Typography\n                component=\"h1\"\n                variant=\"h6\"\n                color=\"inherit\"\n                noWrap\n                className={classes.title}\n              >\n                Tooling Issues\n              </Typography>\n              {/* \n                <IconButton color=\"inherit\">\n                  <Badge badgeContent={0} color=\"secondary\">\n                    <AppsIcon />\n                  </Badge>\n                </IconButton>\n                <IconButton color=\"inherit\">\n                  <Badge onClick={handleLogout} color=\"primary\">\n                    <ExitToAppIcon />\n                  </Badge>\n                </IconButton>                \n                */}\n              <AppMenu />\n              <ToolbarAvatar  />\n              </Toolbar>\n          </AppBar>\n          <Drawer\n            variant=\"permanent\"\n            classes={{\n              paper: clsx(\n                classes.drawerPaper,\n                !open && classes.drawerPaperClose,\n              ),\n            }}\n            open={open}\n          >\n            <div className={classes.toolbarIcon}>\n              <IconButton onClick={handleDrawerClose}>\n                <ChevronLeftIcon />\n              </IconButton>\n\n            </div>\n            <Divider />\n            <SideMenu />\n          </Drawer>\n        </React.Fragment>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Switch>\n            <Route path={`${match.path}/transition`}>\n              <LinearIndeterminate />\n            </Route>\n            <Route path={match.path}>\n            <h1>Tracker</h1>\n            <Button color=\"secondary\" size=\"small\" onClick={handleTest}>\n              Test\n            </Button>\n            </Route>\n          </Switch>\n        </Container>\n      </main>\n    </React.Fragment>\n  );\n}\n\n//export default Dashboard\n\n/*\n\n              <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center',\n        }}\n        open={appError.error}\n        autoHideDuration={6000}\n   //     onClose={handleCloseSnackBar1}\n        message={appError.message}\n        action={\n          <Alert onClose={handleCloseSnackBar1} severity=\"success\">\n          This is a success message!\n        </Alert>\n          // <React.Fragment>\n          //   <Button color=\"secondary\" size=\"small\" onClick={handleCloseSnackBar2}>\n          //     Fail\n          //   </Button>\n          //   <IconButton\n          //     size=\"small\"\n          //     aria-label=\"close\"\n          //     color=\"inherit\"\n          //     onClick={handleCloseSnackBar3}\n          //   >\n          //     <CloseIcon fontSize=\"small\" />\n          //   </IconButton>\n          // </React.Fragment>\n        }\n        />\n\n\n          <Route exact path=\"/transition\" component={LinearIndeterminate} />\n\n          <Switch>\n            \n            <Route exact path=\"/oee/view200206\" component={View200206} />\n            <Route path=\"/oee\" component={Landing} />\n            <Route path=\"/oee/dialog200206\" component={Dialog200206} />\n          </Switch>\n\nconst App = (props) => {\n  const {firstName} = props\n  return (\n      <Switch>\n      <Route exact path=\"/\" component={Dashboard} />\n      <Route path=\"/login\" component={SignIn} />\n      <Route path=\"/dashboard\" component={Dashboard} />\n      </Switch>\n\n  )\n\n}\nexport default App\n*/\n","import { connect } from \"react-redux\";\nimport AppComponent from \"../../components/Tracker/App\";\n\nimport * as actions from \"../../actions\";\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    // dispatching plain actions\n    AuthenticateSaga: (email,password,route,setSubmittingOff) => dispatch(actions.AuthenticateSaga(email,password,route,setSubmittingOff)),\n    Push: path => dispatch(actions.Push(path)),\n    Logout: () => dispatch(actions.Logout()),\n    ClearAppError: () => dispatch(actions.ClearAppError()),\n    Submitting: submitting => dispatch(actions.Submitting(submitting))\n  };\n};\n\nfunction mapStateToProps(state) {\n  const { User, router, Global,Msal, Dialogs,ToolChangeSummary } = state;\n  return {\n    msalInstance: Msal.msalInstance,\n    initials:Msal.initials,\n    isAuthenticated: User.isAuthenticated,\n    isAdmin: User.isAdmin,\n    userName: User.userName,\n    firstName: User.firstName,\n    lastName: User.lastName,\n    pathname: router.location.pathname,\n    search: router.location.search,\n    hash: router.location.hash,\n    submitting: Global.submitting,\n    appError: Global.appError,\n    // openDialog200206: Dialogs.openDialog200206,\n    // openDialogToolChangeSummary: ToolChangeSummary.openDialogToolChangeSummary\n  };\n}\n\nexport const Tracker = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AppComponent);\n","import { compareAsc, format } from \"date-fns\";\nimport { Formik, Field } from \"formik\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Grid from \"@material-ui/core/Grid\";\nimport React from \"react\";\nimport * as common from '@bgroves/common';\n\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker\n} from \"@material-ui/pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\n\nimport * as errorSeverity from \"../../constants/ErrorSeverity\";\nimport * as errorType from \"../../constants/ErrorType\";\n\nconst DatePickerField = ({ field, form, myLabel,...other }) => {\n  const currentError = form.errors[field.name];\n  common.log(`field: ${field.name},${myLabel}`);\n \n  return (\n    <KeyboardDatePicker\n      required\n      disableToolbar\n      variant=\"inline\"\n      margin=\"normal\"\n      id={field.name}\n      name={field.name}\n      label={myLabel}\n      value={field.value}\n      format=\"MM/dd/yyyy\"\n      helperText={currentError}\n      error={Boolean(currentError)}\n      onError={error => {\n        // handle as a side effect\n        if (error !== currentError) {\n          form.setFieldError(field.name, error);\n        }\n      }}\n      autoComplete=\"\"\n      // if you are using custom validation schema you probably want to pass `true` as third argument\n      onChange={date => form.setFieldValue(field.name, date, true)}\n      KeyboardButtonProps={{\n        \"aria-label\": \"change date\"\n      }}\n      {...other}\n    />\n  );\n};\n\nexport default function Dialog200206(params) {\n  const {\n    firstDayOfWeek,\n    lastDayOfWeek,\n    OpenDialog200206,\n    View200206,\n    Push,\n    SetAppError,\n    Submitting,\n    submitting\n  } = params;\n\n  const handleClose = () => {\n    Push(\"/\");\n    OpenDialog200206(false);\n  };\n  return (\n    <Dialog\n      open={true}\n      onClose={handleClose}\n      aria-labelledby=\"form-dialog-title\"\n    >\n      <DialogTitle id=\"form-dialog-title\">OEE by Part</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          Select the start and end date. The start date's time is 00:00:00 and\n          end date's time is 11:59:59.\n        </DialogContentText>\n\n        <Formik\n          initialValues={{ startDate: firstDayOfWeek, endDate: lastDayOfWeek }}\n          onSubmit={(values, { setSubmitting }) => {\n            Submitting(true);  // buttons look at this to determine if they should be enabled?\n            let sd = new Date(values.startDate);\n            let start = format(sd, \"yyyy-MM-dd'T00:00:00'\");\n            common.log(start);\n            let ed = new Date(values.endDate);\n            let end = format(ed, \"yyyy-MM-dd'T23:59:59'\");\n            common.log(end);\n            //Compare the two dates and return 1 if the first date is after the second,\n            // -1 if the first date is before the second or 0 if dates are equal.\n            if (-1 === compareAsc(ed, sd)) {\n              SetAppError(\n                \"Start date should be before end date.\",\n                errorType.DATE,\n                errorSeverity.LOW\n              );\n              Submitting(false);\n            } else {\n              Push('/oee/transition');\n              View200206(start, end, 1000, \"/oee/view200206\", true);  // will set submitting to false after done.\n           //   OpenDialog200206(false);\n            }\n          }}\n        >\n          {props => {\n            const { handleSubmit } = props;\n\n            return (\n              <div>\n                <form onSubmit={handleSubmit}>\n                  <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                    <Grid container justify=\"space-around\">\n                      <Field name=\"startDate\" placeholder=\"Start Date\" myLabel=\"Start Date\" component={DatePickerField} />\n                      <Field name=\"endDate\" placeholder=\"End Date\" myLabel=\"End Date\" component={DatePickerField} />\n                    </Grid>\n                  </MuiPickersUtilsProvider>\n                  <DialogActions>\n                    <Button\n                      disabled={submitting}\n                      type=\"button\"\n                      className=\"outline\"\n                      onClick={handleClose}\n                    >\n                      Cancel\n                    </Button>\n                    <Button type=\"submit\" disabled={submitting}>\n                      Submit\n                    </Button>\n                  </DialogActions>\n                </form>\n              </div>\n            );\n          }}\n        </Formik>\n      </DialogContent>\n    </Dialog>\n  );\n}\n","import { connect } from 'react-redux';\nimport Dialog200206Component from '../../components/OEE/Dialog200206';\nimport * as actions from '../../actions';\n\nfunction mapStateToProps(state) {\n  const { Global } = state;\n  return {\n    firstDayOfWeek: Global.firstDayOfWeek,\n    lastDayOfWeek: Global.lastDayOfWeek,\n    submitting: Global.submitting,\n  };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    // dispatching plain actions\n    OpenDialog200206: (open) => dispatch(actions.OpenDialog200206(open)),\n    View200206: (startDate, endDate, limit, route, setSubmittingOff) =>\n      dispatch(\n        actions.View200206(startDate, endDate, limit, route, setSubmittingOff),\n      ),\n    //    Sproc200206Create: (startDate,endDate,fetch,limit,route,setSubmittingOff) => dispatch(actions.Sproc200206Create(startDate,endDate,fetch,limit,route,setSubmittingOff)),\n    //  Sproc200221Create: (startDate,endDate,fetch,limit,route,setSubmittingOff) => dispatch(actions.Sproc200221Create(startDate,endDate,fetch,limit,route,setSubmittingOff)),\n    Push: (path) => dispatch(actions.Push(path)),\n    Submitting: (submitting) => dispatch(actions.Submitting(submitting)),\n    SetAppError: (message, errorType, errorSeverity) =>\n      dispatch(actions.SetAppError(message, errorType, errorSeverity)),\n  };\n};\n\nexport const Dialog200206 = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Dialog200206Component);\n","import { makeStyles, useTheme } from '@material-ui/core/styles';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport IconButton from '@material-ui/core/IconButton';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport Paper from '@material-ui/core/Paper';\nimport PropTypes from 'prop-types';\nimport React, { useEffect } from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport * as common from '@bgroves/common';\n\nlet g_sproc;\nlet g_table;\nlet g_total;\nlet g_limit;\nlet g_skip;\nlet g_Sproc200206Fetch;\nlet g_firstBuffPage;\nlet g_lastBuffPage;\nlet g_lastPage;\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { page, onChangePage } = props;\n\n  const handleFirstPageButtonClick = event => {\n    if (g_skip > 0) {\n      g_Sproc200206Fetch(g_sproc, g_table, g_limit, 0, '', false);\n    }\n    onChangePage(event, 0);\n  };\n\n  const handleBackButtonClick = event => {\n    if (page === g_firstBuffPage) {\n      g_Sproc200206Fetch(\n        g_sproc,\n        g_table,\n        g_limit,\n        g_skip - g_limit,\n        '',\n        false,\n      );\n    }\n    onChangePage(event, page - 1);\n  };\n\n  const handleNextButtonClick = event => {\n    if (page === g_lastBuffPage) {\n      common.log(`page: ${page},g_lastBuffPage: ${g_lastBuffPage}`);\n      g_Sproc200206Fetch(\n        g_sproc,\n        g_table,\n        g_limit,\n        g_skip + g_limit,\n        '',\n        false,\n      );\n    }\n    onChangePage(event, page + 1);\n  };\n\n  const handleLastPageButtonClick = event => {\n    if (g_skip < g_total - g_limit) {\n      g_Sproc200206Fetch(\n        g_sproc,\n        g_table,\n        g_limit,\n        g_total - g_limit,\n        '',\n        false,\n      );\n    }\n    onChangePage(event, g_lastPage);\n  };\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton\n        onClick={handleBackButtonClick}\n        disabled={page === 0}\n        aria-label=\"previous page\"\n      >\n        {theme.direction === 'rtl' ? (\n          <KeyboardArrowRight />\n        ) : (\n          <KeyboardArrowLeft />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= g_lastPage}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? (\n          <KeyboardArrowLeft />\n        ) : (\n          <KeyboardArrowRight />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= g_lastPage}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n// disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nconst useStyles2 = makeStyles({\n  table: {\n    minWidth: 500,\n  },\n});\n\nexport default function Table200206({\n  isAuthenticated,\n  sproc,\n  table,\n  total,\n  limit,\n  skip,\n  data,\n  Push,\n  Sproc200206Fetch,\n}) {\n  g_sproc = sproc;\n  g_table = table;\n  g_total = total;\n  g_limit = limit;\n  g_skip = skip;\n  g_Sproc200206Fetch = Sproc200206Fetch;\n  useEffect(() => {\n    // Update the document title using the browser API\n    // document.title = `You clicked ${count} times`;\n    if (total === 0) {\n      Push('/');\n    }\n  });\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  /* \n  I don't think this will work unless skip is evenly divisible by \n  rowsPerPage\n  */\n  g_firstBuffPage = Math.max(0, g_skip / rowsPerPage);\n  g_lastBuffPage =\n    g_firstBuffPage + Math.max(0, Math.ceil(data.length / rowsPerPage) - 1);\n  g_lastPage = Math.max(0, Math.ceil(g_total / rowsPerPage) - 1); // 0 based pages,\n\n  /*  I THINK THIS IS WRONG SO I CHANGED IT.\n  let emptyRows = 0;\n  if (g_skip + g_limit > g_total) {\n    emptyRows =\n      rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage);\n  }\n*/\n/*  I THINK THIS IS WRONG TOO\n  let emptyRows;\n  if(rowsPerPage>data.length){\n    emptyRows = 0;\n  }else{\n    emptyRows = rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage); // Won't work as a useState variable.\n  }  \n*/\n  let emptyRows = rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage); // Won't work as a useState variable.\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    const rpp = parseInt(event.target.value, 10);\n    setRowsPerPage(rpp);\n    g_firstBuffPage = Math.max(0, g_skip / rpp);\n    g_lastBuffPage =\n      g_firstBuffPage + Math.max(0, Math.ceil(data.length / rpp) - 1);\n    g_lastPage = Math.max(0, Math.ceil(g_total / rpp) - 1); // 0 based pages,\n    setPage(g_firstBuffPage);\n    common.log(\n      `g_firstBuffPage: ${g_firstBuffPage},g_lastBuffPage:${g_lastBuffPage},g_lastPage:${g_lastPage}`,\n    );\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"custom pagination table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Week</TableCell>\n            <TableCell align=\"right\">Part</TableCell>\n            <TableCell align=\"right\">Workcenter</TableCell>\n            <TableCell align=\"right\">Planned</TableCell>\n            <TableCell align=\"right\">Actual</TableCell>\n            <TableCell align=\"right\">Percent</TableCell>\n            <TableCell align=\"right\">Scrap%</TableCell>\n            <TableCell align=\"right\">Downtime</TableCell>\n          </TableRow>\n        </TableHead>\n\n        <TableBody>\n          {(rowsPerPage > 0\n            ? data.slice(\n                (page - g_firstBuffPage) * rowsPerPage,\n                (page - g_firstBuffPage) * rowsPerPage + rowsPerPage,\n              )\n            : data\n          ).map(row => (\n            <TableRow key={row.primary_key}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.start_week}\n              </TableCell>\n              <TableCell align=\"right\">{row.part_number}</TableCell>\n              <TableCell align=\"right\">{row.workcenter_code}</TableCell>\n              <TableCell align=\"right\">\n                {row.planned_production_count}\n              </TableCell>\n              <TableCell align=\"right\">{row.actual_production_count}</TableCell>\n              <TableCell align=\"right\">\n                {row.actual_vrs_planned_percent}\n              </TableCell>\n              <TableCell align=\"right\">{row.scrap_percent}</TableCell>\n              <TableCell align=\"right\">{row.downtime_minutes}</TableCell>\n            </TableRow>\n          ))}\n\n          {emptyRows > 0 && (\n            <TableRow key=\"9999\" style={{ height: 53 * emptyRows }}>\n              <TableCell colSpan={6} />\n            </TableRow>\n          )}\n        </TableBody>\n        <TableFooter>\n          <TableRow>\n            <TablePagination\n              rowsPerPageOptions={[5, 10, 25]}\n              colSpan={5}\n              count={total}\n              rowsPerPage={rowsPerPage}\n              page={page}\n              SelectProps={{\n                inputProps: { 'aria-label': 'rows per page' },\n                native: true,\n              }}\n              onChangePage={handleChangePage}\n              onChangeRowsPerPage={handleChangeRowsPerPage}\n              ActionsComponent={TablePaginationActions}\n            />\n          </TableRow>\n        </TableFooter>\n      </Table>\n    </TableContainer>\n  );\n}\n","import { connect } from \"react-redux\";\nimport Table200206Component from \"../../components/OEE/Table200206\";\nimport * as actions from \"../../actions\";\n\nfunction mapStateToProps(state) {\n  const { User, Sproc200206, Global } = state;\n  return {\n    isAuthenticated: User.isAuthenticated,\n    sproc: Sproc200206.sproc,\n    table: Sproc200206.table,\n    total: Sproc200206.total,\n    limit: Sproc200206.limit,\n    skip: Sproc200206.skip,\n    data: Sproc200206.data,\n    submitting: Global.submitting\n  };\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    // dispatching plain actions\n    Push: () => dispatch(actions.Push()),\n    Sproc200206Fetch: (sproc, table, limit, skip, route, setSubmittingOff) =>\n      dispatch(\n        actions.Sproc200206Fetch(\n          sproc,\n          table,\n          limit,\n          skip,\n          route,\n          setSubmittingOff\n        )\n      ),\n    Submitting: submitting => dispatch(actions.Submitting(submitting))\n  };\n};\n\nexport const Table200206 = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Table200206Component);\n","import { connect } from 'react-redux';\nimport BarChart200221ScrapComponent from '../../components/OEE/BarChart200221Scrap';\n\nfunction mapStateToProps(state) {\n  const { User, Sproc200221 } = state;\n  return {\n    isAuthenticated: User.isAuthenticated,\n    sproc: Sproc200221.sproc,\n    table: Sproc200221.table,\n    total: Sproc200221.total,\n    limit: Sproc200221.limit,\n    skip: Sproc200221.skip,\n    data: Sproc200221.data,\n  };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    // dispatching plain actions\n  };\n};\n\nexport const BarChart200221Scrap = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(BarChart200221ScrapComponent);\n","import {\n  BarChart,\n  Bar,\n  CartesianGrid,\n  XAxis,\n  YAxis,\n  Tooltip,\n  Legend,\n} from 'recharts';\nimport React from 'react';\n\n\nexport default function BarChart200221Scrap({ data }) {\n  return (\n      <BarChart width={530} height={250} data={data}>\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"part_number\" />\n        <YAxis />\n        <Tooltip />\n        <Legend />\n        <Bar dataKey=\"actual_vrs_planned_percent\" fill=\"#82ca9d\" />\n        <Bar dataKey=\"scrap_percent\" fill=\"#8884d8\" />\n      </BarChart>\n\n  );\n}\n","import { connect } from 'react-redux';\nimport BarChart200221DownTimeComponent from '../../components/OEE/BarChart200221DownTime';\n\nfunction mapStateToProps(state) {\n  const { User, Sproc200221 } = state;\n  return {\n    isAuthenticated: User.isAuthenticated,\n    sproc: Sproc200221.sproc,\n    table: Sproc200221.table,\n    total: Sproc200221.total,\n    limit: Sproc200221.limit,\n    skip: Sproc200221.skip,\n    data: Sproc200221.data,\n  };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    // dispatching plain actions\n  };\n};\n\nexport const BarChart200221DownTime = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(BarChart200221DownTimeComponent);\n","import {\n  BarChart,\n  Bar,\n  CartesianGrid,\n  XAxis,\n  YAxis,\n  Tooltip,\n  Legend\n} from \"recharts\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default function BarChart200221DownTime({ data }) {\n  return (\n      <BarChart width={530} height={250} data={data}>\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"part_number\" />\n        <YAxis />\n        <Tooltip />\n        <Legend />\n        <Bar dataKey=\"downtime_minutes\" fill=\"#ffc658\" />\n      </BarChart>\n  );\n}\n\nBarChart200221DownTime.propTypes = {\n  data: PropTypes.array\n};\n","import { connect } from \"react-redux\";\nimport View200206Component from \"../../components/OEE/View200206\";\nimport * as actions from '../../actions'\n\nfunction mapStateToProps(state) {\n  const { User, Sproc200206 } = state\n  return {\n    isAuthenticated: User.isAuthenticated,\n    total: Sproc200206.total,\n    isAdmin: User.isAdmin\n  }\n}\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    // dispatching plain actions\n    Push: (path) => dispatch(actions.Push(path)),\n    OpenDialog200206: (open) => dispatch(actions.OpenDialog200206(open)),\n    SetAppError: (message,errorType,errorSeverity) => dispatch(actions.SetAppError(message,errorType,errorSeverity))\n  }\n}\n\n\nexport const View200206 = connect(mapStateToProps, mapDispatchToProps)(View200206Component)\n","import React, { useEffect } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { Table200206 } from '../../containers/OEE/Table200206';\nimport { BarChart200221Scrap } from '../../containers/OEE/BarChart200221Scrap';\nimport { BarChart200221DownTime } from '../../containers/OEE/BarChart200221DownTime';\nimport * as errorSeverity from '../../constants/ErrorSeverity';\nimport * as errorType from '../../constants/ErrorType';\nimport * as common from '@bgroves/common';\n\nexport default function View200206(params) {\n  const { Push, total, SetAppError } = params;\n  useEffect(() => {\n    if (total === 0) {\n      SetAppError(\n        'No records for that date range.',\n        errorType.DATE,\n        errorSeverity.LOW,\n      );\n      common.log('View200206=>No records, before push()');\n      Push('/');\n    }\n  });\n  return (\n    <Grid container spacing={3}>\n      {/* Chart */}\n      <Grid item xs={12} md={12} lg={6}>\n        <BarChart200221Scrap />\n      </Grid>\n      {/* Recent Deposits */}\n      <Grid item xs={12} md={12} lg={6}>\n        <BarChart200221DownTime />\n      </Grid>\n      {/* Recent Orders */}\n      <Grid item xs={12}>\n        <Table200206 />\n      </Grid>\n    </Grid>\n  );\n}\n\n/*\nexport default function Dashboard({ isAuthenticated, isAdmin, Push }) {\n  useEffect(() => {\n    // Update the document title using the browser API\n    //document.title = `You clicked ${count} times`;\n    if (!isAuthenticated) {\n      Push(\"/login\");\n    }\n  });\n*/\n","import { connect } from \"react-redux\";\nimport SideMenuComponent from \"../../components/OEE/SideMenu\";\nimport * as actions from '../../actions'\n\nfunction mapStateToProps(state) {\n  const { User, Global } = state\n  return {\n    isAuthenticated: User.isAuthenticated,\n    isAdmin: User.isAdmin,\n    firstDayOfWeek: Global.firstDayOfWeek,\n    lastDayOfWeek: Global.lastDayOfWeek,\n    firstDayOfMonth: Global.firstDayOfMonth,\n    lastDayOfMonth: Global.lastDayOfMonth\n\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    // dispatching plain actions\n    Push: (path) => dispatch(actions.Push(path)),\n    View200206: (startDate,endDate,limit,route,setSubmittingOff) => dispatch(actions.View200206(startDate,endDate,limit,route,setSubmittingOff)),\n    Submitting: (submitting) => dispatch(actions.Submitting(submitting)),\n    OpenDialog200206: (open) => dispatch(actions.OpenDialog200206(open))\n  }\n}\n\n\nexport const SideMenu = connect(mapStateToProps, mapDispatchToProps)(SideMenuComponent)\n","import React from 'react';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport SpeedIcon from '@material-ui/icons/Speed';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport GroupWorkIcon from '@material-ui/icons/GroupWork';\n\n// PROBLEM WITH COLLAPSE SUB LIST AND FIREFOX\n// WAIT FOR NEW VERSION OF MATERIAL-UI WHICH HAS NESTE LIST-ITEM COMPONENT\n//https://v0.material-ui.com/#/components/list\n//https://medium.com/@ali.atwa/getting-started-with-material-ui-for-react-59c82d9ffd93\n\nexport default function SideMenu(params) {\n  const {\n    firstDayOfWeek,\n    lastDayOfWeek,\n    Push,\n    View200206,\n    Submitting,\n  } = params;\n\n  const handleView200206AdHoc = () => {\n    Push('/oee/dialog200206');\n  };\n  const handleView200206ThisWeek = () => {\n    Push('/oee/transition');\n    Submitting(true); // Buttons look at this to see if they should be enabled\n    View200206(firstDayOfWeek, lastDayOfWeek, 1000, '/oee/view200206', true);\n  };\n  /*\n  const handleView200206ThisMonth = () => {\n    Push('/transition');\n    Submitting(true);\n    View200206(firstDayOfMonth, lastDayOfMonth, 1000, '/view200206', true);\n  };\n*/\n  return (\n    <List>\n      <ListSubheader>Ad-Hoc</ListSubheader>\n      <Divider />\n      <ListItem button onClick={handleView200206AdHoc}>\n        <ListItemIcon>\n          <SpeedIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"OEE by Part\" />\n      </ListItem>\n      <Divider />\n      <ListSubheader>Week</ListSubheader>\n      <Divider />\n      <ListItem button onClick={handleView200206ThisWeek}>\n        <ListItemIcon>\n          <GroupWorkIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"OEE by Part\" />\n      </ListItem>\n    </List>\n  );\n}\n","import { connect } from 'react-redux'\nimport LandingComponent from '../../components/OEE/Landing'\n\nimport * as actions from '../../actions'\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    // dispatching plain actions\n    Push: () => dispatch(actions.Push()),\n  Logout: () => dispatch(actions.Logout())\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { User,router } = state\n  return {\n    isAuthenticated: User.isAuthenticated,\n    isAdmin: User.isAdmin,\n    userName: User.userName,\n    firstName: User.firstName,\n    lastName: User.lastName,\n    pathname: router.location.pathname,\n    search: router.location.search,\n    hash: router.location.hash\n\n\n  }\n}\n\nexport const Landing = connect(mapStateToProps, mapDispatchToProps)(LandingComponent)\n","import React, { useEffect } from 'react';\nimport {\n  Switch,\n  Route,\n  useRouteMatch,\n} from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nimport clsx from 'clsx';\nimport { AppMenu } from '../../containers/AppMenu';\nimport { Dialog200206 } from '../../containers/OEE/Dialog200206';\nimport { View200206 } from '../../containers/OEE/View200206';\nimport { SideMenu } from '../../containers/OEE/SideMenu';\nimport { Landing } from '../../containers/OEE/Landing';\nimport LinearIndeterminate from '../LinearIndeterminate';\n\nconst drawerWidth = 200;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nexport default function App({\n  isAuthenticated,\n  isAdmin,\n  pathname,\n  Push,\n  Logout,\n  ClearAppError,\n  appError,\n  openDialog200206,\n  Submitting,\n  submitting,\n}) {\n  useEffect(() => {\n    // Update the document title using the browser API\n    //document.title = `You clicked ${count} times`;\n    // if (!isAuthenticated) {\n    //   Push('login');\n    // }\n  });\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  let match = useRouteMatch();\n  return (\n    <React.Fragment>\n    <CssBaseline />\n    {pathname !== \"/login\" && pathname !== \"/\" && (\n              <React.Fragment>\n<AppBar\n        position=\"absolute\"\n        className={clsx(classes.appBar, open && classes.appBarShift)}\n      >\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(\n              classes.menuButton,\n              open && classes.menuButtonHidden,\n            )}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography\n            component=\"h1\"\n            variant=\"h6\"\n            color=\"inherit\"\n            noWrap\n            className={classes.title}\n          >\n            OEE Visualizations\n          </Typography>\n          {/* \n                <IconButton color=\"inherit\">\n                  <Badge badgeContent={0} color=\"secondary\">\n                    <AppsIcon />\n                  </Badge>\n                </IconButton>\n                <IconButton color=\"inherit\">\n                  <Badge onClick={handleLogout} color=\"primary\">\n                    <ExitToAppIcon />\n                  </Badge>\n                </IconButton>                \n                */}\n          <AppMenu />\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <SideMenu />\n      </Drawer>\n              </React.Fragment>\n              )}\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Switch>\n          <Route path={`${match.path}/transition`}>\n              <LinearIndeterminate />\n\n            </Route>\n            <Route path={`${match.path}/dialog200206`}>\n              <Dialog200206 />\n\n            </Route>\n            <Route path={`${match.path}/view200206`}>\n              <View200206 />\n\n            </Route>\n            <Route path={match.path}>\n              <Landing />\n            </Route>            \n          </Switch>\n        </Container>\n      </main>\n      </React.Fragment>\n  );\n}\n\n//export default Dashboard\n\n/*\n          <Route exact path=\"/transition\" component={LinearIndeterminate} />\n\n          <Switch>\n            \n            <Route exact path=\"/oee/view200206\" component={View200206} />\n            <Route path=\"/oee\" component={Landing} />\n            <Route path=\"/oee/dialog200206\" component={Dialog200206} />\n          </Switch>\n\nconst App = (props) => {\n  const {firstName} = props\n  return (\n      <Switch>\n      <Route exact path=\"/\" component={Dashboard} />\n      <Route path=\"/login\" component={SignIn} />\n      <Route path=\"/dashboard\" component={Dashboard} />\n      </Switch>\n\n  )\n\n}\nexport default App\n*/\n","import { connect } from \"react-redux\";\nimport AppComponent from \"../../components/OEE/App\";\n\nimport * as actions from \"../../actions\";\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    // dispatching plain actions\n    Push: path => dispatch(actions.Push(path)),\n    Logout: () => dispatch(actions.Logout()),\n    ClearAppError: () => dispatch(actions.ClearAppError()),\n    Submitting: submitting => dispatch(actions.Submitting(submitting))\n  };\n};\n\nfunction mapStateToProps(state) {\n  const { User, router, Global,Dialogs } = state;\n  return {\n    isAuthenticated: User.isAuthenticated,\n    isAdmin: User.isAdmin,\n    userName: User.userName,\n    firstName: User.firstName,\n    lastName: User.lastName,\n    pathname: router.location.pathname,\n    search: router.location.search,\n    hash: router.location.hash,\n    submitting: Global.submitting,\n    appError: Global.appError,\n    openDialog200206: Dialogs.openDialog200206\n  };\n}\n\nexport const OEE = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AppComponent);\n","import React, { useEffect } from 'react';\nimport { Switch, Route, useRouteMatch } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nimport clsx from 'clsx';\nimport { AppMenu } from '../../containers/AppMenu';\nimport { SideMenu } from '../../containers/CNC/SideMenu';\nimport { Landing } from '../../containers/CNC/Landing';\nimport { View13319 } from '../../containers/CNC/View13319';\nimport { DialogCompareContainer } from '../../containers/CNC/DialogCompareContainer';\nimport { DialogUpcomingToolChanges } from '../../containers/CNC/DialogUpcomingToolChanges';\nimport { ViewCompareContainer } from '../../containers/CNC/ViewCompareContainer';\nimport { ViewUpcomingToolChanges } from '../../containers/CNC/ViewUpcomingToolChanges';\nimport { DialogToolChangeSummary } from '../../containers/CNC/DialogToolChangeSummary';\nimport { ViewToolChangeSummary } from '../../containers/CNC/ViewToolChangeSummary';\nimport LinearIndeterminate from '../LinearIndeterminate';\n\nconst drawerWidth = 200;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nexport default function App({\n  isAuthenticated,\n  isAdmin,\n  pathname,\n  Push,\n  Logout,\n  ClearAppError,\n  appError,\n  openDialog200206,\n  openDialogToolChangeSummary,\n  Submitting,\n  submitting,\n}) {\n  useEffect(() => {\n    // Update the document title using the browser API\n    //document.title = `You clicked ${count} times`;\n    // if (!isAuthenticated) {\n    //   Push('login');\n    // }\n  });\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  let match = useRouteMatch();\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      {isAuthenticated && pathname !== '/login' && pathname !== '/' && (\n        <React.Fragment>\n          <AppBar\n            position=\"absolute\"\n            className={clsx(classes.appBar, open && classes.appBarShift)}\n          >\n            <Toolbar className={classes.toolbar}>\n              <IconButton\n                edge=\"start\"\n                color=\"inherit\"\n                aria-label=\"open drawer\"\n                onClick={handleDrawerOpen}\n                className={clsx(\n                  classes.menuButton,\n                  open && classes.menuButtonHidden,\n                )}\n              >\n                <MenuIcon />\n              </IconButton>\n              <Typography\n                component=\"h1\"\n                variant=\"h6\"\n                color=\"inherit\"\n                noWrap\n                className={classes.title}\n              >\n                CNC Visualizations\n              </Typography>\n              {/* \n                <IconButton color=\"inherit\">\n                  <Badge badgeContent={0} color=\"secondary\">\n                    <AppsIcon />\n                  </Badge>\n                </IconButton>\n                <IconButton color=\"inherit\">\n                  <Badge onClick={handleLogout} color=\"primary\">\n                    <ExitToAppIcon />\n                  </Badge>\n                </IconButton>                \n                */}\n              <AppMenu />\n            </Toolbar>\n          </AppBar>\n          <Drawer\n            variant=\"permanent\"\n            classes={{\n              paper: clsx(\n                classes.drawerPaper,\n                !open && classes.drawerPaperClose,\n              ),\n            }}\n            open={open}\n          >\n            <div className={classes.toolbarIcon}>\n              <IconButton onClick={handleDrawerClose}>\n                <ChevronLeftIcon />\n              </IconButton>\n            </div>\n            <Divider />\n            <SideMenu />\n          </Drawer>\n        </React.Fragment>\n      )}\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Switch>\n            <Route path={`${match.path}/transition`}>\n              <LinearIndeterminate />\n            </Route>\n            <Route path={`${match.path}/dialogCompareContainer`}>\n              <DialogCompareContainer />\n            </Route>\n            <Route path={`${match.path}/dialogUpcomingToolChanges`}>\n              <DialogUpcomingToolChanges />\n            </Route>\n            <Route path={`${match.path}/dialogToolChangeSummary`}>\n              <DialogToolChangeSummary />\n            </Route>\n            <Route path={`${match.path}/ViewToolChangeSummary`}>\n              <ViewToolChangeSummary />\n            </Route>\n            <Route path={`${match.path}/ViewUpcomingToolChanges`}>\n              <ViewUpcomingToolChanges />\n            </Route>\n            <Route path={`${match.path}/view13319`}>\n              <View13319 />\n            </Route>\n            <Route path={`${match.path}/viewCompareContainer`}>\n              <ViewCompareContainer />\n            </Route>\n            <Route path={match.path}>\n              <Landing />\n            </Route>\n          </Switch>\n        </Container>\n      </main>\n    </React.Fragment>\n  );\n}\n\n//export default Dashboard\n\n/*\n          <Route exact path=\"/transition\" component={LinearIndeterminate} />\n\n          <Switch>\n            \n            <Route exact path=\"/oee/view200206\" component={View200206} />\n            <Route path=\"/oee\" component={Landing} />\n            <Route path=\"/oee/dialog200206\" component={Dialog200206} />\n          </Switch>\n\nconst App = (props) => {\n  const {firstName} = props\n  return (\n      <Switch>\n      <Route exact path=\"/\" component={Dashboard} />\n      <Route path=\"/login\" component={SignIn} />\n      <Route path=\"/dashboard\" component={Dashboard} />\n      </Switch>\n\n  )\n\n}\nexport default App\n*/\n","import { connect } from \"react-redux\";\nimport AppComponent from \"../../components/CNC/App\";\n\nimport * as actions from \"../../actions\";\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    // dispatching plain actions\n    Push: path => dispatch(actions.Push(path)),\n    Logout: () => dispatch(actions.Logout()),\n    ClearAppError: () => dispatch(actions.ClearAppError()),\n    Submitting: submitting => dispatch(actions.Submitting(submitting))\n  };\n};\n\nfunction mapStateToProps(state) {\n  const { User, router, Global,Dialogs,ToolChangeSummary } = state;\n  return {\n    isAuthenticated: User.isAuthenticated,\n    isAdmin: User.isAdmin,\n    userName: User.userName,\n    firstName: User.firstName,\n    lastName: User.lastName,\n    pathname: router.location.pathname,\n    search: router.location.search,\n    hash: router.location.hash,\n    submitting: Global.submitting,\n    appError: Global.appError,\n    openDialog200206: Dialogs.openDialog200206,\n    openDialogToolChangeSummary: ToolChangeSummary.openDialogToolChangeSummary\n  };\n}\n\nexport const CNC = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AppComponent);\n","import { connect } from \"react-redux\";\nimport SideMenuComponent from \"../../components/Profit/SideMenu\";\nimport * as actions from '../../actions'\n\nfunction mapStateToProps(state) {\n  const { User, Global } = state\n  return {\n    isAuthenticated: User.isAuthenticated,\n    isAdmin: User.isAdmin,\n    firstDayOfWeek: Global.firstDayOfWeek,\n    lastDayOfWeek: Global.lastDayOfWeek,\n    firstDayOfMonth: Global.firstDayOfMonth,\n    lastDayOfMonth: Global.lastDayOfMonth\n\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    // dispatching plain actions\n    Push: (path) => dispatch(actions.Push(path)),\n    Submitting: (submitting) => dispatch(actions.Submitting(submitting))\n  }\n}\n\n\nexport const SideMenu = connect(mapStateToProps, mapDispatchToProps)(SideMenuComponent)\n","import React from 'react';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport SpeedIcon from '@material-ui/icons/Speed';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport GroupWorkIcon from '@material-ui/icons/GroupWork';\n\n\nexport default function SideMenu(params) {\n  const {\n    Push,\n  } = params;\n\n  const handleViewPartProdRate = () => {\n    Push('/profit/DialogPartProdRate');\n  };\n  const handleViewToolingRate = () => {\n    Push('/profit/ViewPartProdRate');\n  };\n\n  /*\n  const handleView200206ThisWeek = () => {\n    Push('/oee/transition');\n    Submitting(true); // Buttons look at this to see if they should be enabled\n    View200206(firstDayOfWeek, lastDayOfWeek, 1000, '/oee/view200206', true);\n  };\n*/\n  return (\n    <List>\n      <ListSubheader>Rates</ListSubheader>\n      <Divider />\n      <ListItem button onClick={handleViewPartProdRate}>\n        <ListItemIcon>\n          <SpeedIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Production\" />\n      </ListItem>\n      <Divider />\n    </List>\n  );\n}\n/*\n      <ListItem button onClick={handleViewToolingRate}>\n        <ListItemIcon>\n          <GroupWorkIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Tooling\" />\n      </ListItem>\n\n*/","import React, { Component } from \"react\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend\n} from \"recharts\";\n\nconst TABLE_LIST = [\n  { name: \"Page A\", pv: 2400, amt: 2400 },\n  { name: \"Page B\", pv: 1398, amt: 2210 },\n  { name: \"Page C\", pv: 9800, amt: 2290 },\n  { name: \"Page D\", pv: 3908, amt: 2000 },\n  { name: \"Page E\", pv: 4800, amt: 2181 },\n  { name: \"Page F\", pv: 3800, amt: 2500 },\n  { name: \"Page G\", pv: 4300, amt: 2100 }\n];\n\nexport default class BarChartLanding extends Component {\n  state = {\n    list: [...TABLE_LIST]\n  };\n\n  render() {\n    const { list } = this.state;\n    return (\n      <BarChart\n        width={530}\n        height={250}\n        data={list}\n        margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"name\" />\n        <YAxis />\n        <Tooltip />\n        <Legend />\n        <Bar dataKey=\"pv\" fill=\"#8884d8\" />\n      </BarChart>\n    );\n  }\n}\n","import {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend\n} from \"recharts\";\nimport React, { PureComponent } from \"react\";\n\nconst data = [\n  {\n    name: \"Page A\",\n    uv: 4000,\n    pv: 2400,\n    amt: 2400\n  },\n  {\n    name: \"Page B\",\n    uv: 3000,\n    pv: 1398,\n    amt: 2210\n  },\n  {\n    name: \"Page C\",\n    uv: 2000,\n    pv: 9800,\n    amt: 2290\n  },\n  {\n    name: \"Page D\",\n    uv: 2780,\n    pv: 3908,\n    amt: 2000\n  },\n  {\n    name: \"Page E\",\n    uv: 1890,\n    pv: 4800,\n    amt: 2181\n  },\n  {\n    name: \"Page F\",\n    uv: 2390,\n    pv: 3800,\n    amt: 2500\n  },\n  {\n    name: \"Page G\",\n    uv: 3490,\n    pv: 4300,\n    amt: 2100\n  }\n];\n\nexport default class LineChartLanding extends PureComponent {\n  static jsfiddleUrl = \"https://jsfiddle.net/alidingling/xqjtetw0/\";\n\n  render() {\n    return (\n      <LineChart\n        width={530}\n        height={250}\n        data={data}\n        margin={{\n          top: 5,\n          right: 30,\n          left: 20,\n          bottom: 5\n        }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"name\" />\n        <YAxis />\n        <Tooltip />\n        <Legend />\n        <Line\n          type=\"monotone\"\n          dataKey=\"pv\"\n          stroke=\"#8884d8\"\n          activeDot={{ r: 8 }}\n        />\n        <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#82ca9d\" />\n      </LineChart>\n    );\n  }\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport PlayCircleFilledWhiteIcon from \"@material-ui/icons/PlayCircleFilledWhite\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport clsx from \"clsx\";\n\nimport BarChartLanding from \"./BarChartLanding\";\nimport LineChartLanding from \"./LineChartLanding\";\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\"\n  },\n  container: {\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(4)\n  },  \n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\"\n  },\n\n  instructions: {\n    padding: 14\n  }\n}));\n\nexport default function Landing({\n  isAuthenticated,\n  isAdmin,\n  pathname,\n  Push,\n  Logout\n}) {\n  const classes = useStyles();\n\n  const instructions = clsx(classes.paper, classes.instructions);\n  return (\n    <Container maxWidth=\"lg\" className={classes.container}>\n      <Grid container spacing={3}>\n        {/* Chart */}\n        <Grid item xs={12} md={12} lg={5}>\n            <LineChartLanding />\n        </Grid>\n        <Grid item xs={12} md={12} lg={7}>\n            <BarChartLanding />\n        </Grid>\n        <Grid item xs={10}>\n          <Paper>\n            <AppBar position=\"static\">\n              <Toolbar>\n                <PlayCircleFilledWhiteIcon style={{ fontSize: 40 }} />\n                <Typography variant=\"h6\" className={instructions}>\n                  To start select a report from the left-hand side menu.\n                </Typography>\n              </Toolbar>\n            </AppBar>\n          </Paper>\n        </Grid>\n      </Grid>\n      </Container>\n  );\n}\n","import { connect } from 'react-redux'\nimport LandingComponent from '../../components/Profit/Landing'\n\nimport * as actions from '../../actions'\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    // dispatching plain actions\n    Push: () => dispatch(actions.Push()),\n  Logout: () => dispatch(actions.Logout())\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { User,router } = state\n  return {\n    isAuthenticated: User.isAuthenticated,\n    isAdmin: User.isAdmin,\n    userName: User.userName,\n    firstName: User.firstName,\n    lastName: User.lastName,\n    pathname: router.location.pathname,\n    search: router.location.search,\n    hash: router.location.hash\n\n\n  }\n}\n\nexport const Landing = connect(mapStateToProps, mapDispatchToProps)(LandingComponent)\n","import { makeStyles, useTheme } from '@material-ui/core/styles';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport IconButton from '@material-ui/core/IconButton';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport Paper from '@material-ui/core/Paper';\nimport PropTypes from 'prop-types';\nimport React, { useEffect } from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport * as common from '@bgroves/common';\n\nlet g_start_period;\nlet g_end_period;\nlet g_total;\nlet g_limit;\nlet g_skip;\nlet g_PartProdRateFetch;\nlet g_firstBuffPage;\nlet g_lastBuffPage;\nlet g_lastPage;\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { page, onChangePage } = props;\n\n  const handleFirstPageButtonClick = event => {\n    if (g_skip > 0) {\n      g_PartProdRateFetch(g_start_period,g_end_period,g_limit, 0, '', false);\n    }\n    onChangePage(event, 0);\n  };\n/*\n            PartProdRateFetch(\n              start,\n              end,\n              1000,\n              0,\n              '/profit/ViewPartProdRate',\n              true,\n            ); // will set submitting to false after done.\n\n*/\n  const handleBackButtonClick = event => {\n    if (page === g_firstBuffPage) {\n      g_PartProdRateFetch(\n        g_start_period,\n        g_end_period,\n        g_limit,\n        g_skip - g_limit,\n        '',\n        false,\n      );\n    }\n    onChangePage(event, page - 1);\n  };\n\n  const handleNextButtonClick = event => {\n    if (page === g_lastBuffPage) {\n      common.log(`page: ${page},g_lastBuffPage: ${g_lastBuffPage}`);\n      g_PartProdRateFetch(\n        g_start_period,\n        g_end_period,\n        g_limit,\n        g_skip + g_limit,\n        '',\n        false,\n      );\n    }\n    onChangePage(event, page + 1);\n  };\n\n  const handleLastPageButtonClick = event => {\n    if (g_skip < g_total - g_limit) {\n      g_PartProdRateFetch(\n        g_start_period,\n        g_end_period,\n        g_limit,\n        g_total - g_limit,\n        '',\n        false,\n      );\n    }\n    onChangePage(event, g_lastPage);\n  };\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton\n        onClick={handleBackButtonClick}\n        disabled={page === 0}\n        aria-label=\"previous page\"\n      >\n        {theme.direction === 'rtl' ? (\n          <KeyboardArrowRight />\n        ) : (\n          <KeyboardArrowLeft />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= g_lastPage}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? (\n          <KeyboardArrowLeft />\n        ) : (\n          <KeyboardArrowRight />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= g_lastPage}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n// disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nconst useStyles2 = makeStyles({\n  table: {\n    minWidth: 500,\n  },\n});\n\nexport default function TablePartProdRate({\n  isAuthenticated,\n  start_period,\n  end_period,\n  total,\n  limit,\n  skip,\n  data,\n  Push,\n  PartProdRateFetch,\n}) {\n  g_start_period = start_period;\n  g_end_period = end_period;\n  g_total = total;\n  g_limit = limit;\n  g_skip = skip;\n  g_PartProdRateFetch = PartProdRateFetch;\n  useEffect(() => {\n    // Update the document title using the browser API\n    // document.title = `You clicked ${count} times`;\n    if (!isAuthenticated) {\n      Push('/login');\n    }\n    if (total === 0) {\n      Push('/');\n    }\n  });\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  /* \n  I don't think this will work unless skip is evenly divisible by \n  rowsPerPage\n  */\n  g_firstBuffPage = Math.max(0, g_skip / rowsPerPage);\n  g_lastBuffPage =\n    g_firstBuffPage + Math.max(0, Math.ceil(data.length / rowsPerPage) - 1);\n  g_lastPage = Math.max(0, Math.ceil(g_total / rowsPerPage) - 1); // 0 based pages,\n  /*\n  If the total number of records has decreased then we could be on \n  a page that does not exist any longer\n  */\n if(page>g_lastPage){\n   setPage(g_lastPage);\n }\n\n/* I THINK THIS IS WRONG SO I CHANGED IT\n let emptyRows;\n if(rowsPerPage>data.length){\n   emptyRows = 0;\n }else{\n   emptyRows = rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage); // Won't work as a useState variable.\n }\n*/\n\n let emptyRows = rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage); // Won't work as a useState variable.\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    const rpp = parseInt(event.target.value, 10);\n    setRowsPerPage(rpp);\n    g_firstBuffPage = Math.max(0, g_skip / rpp);\n    g_lastBuffPage =\n      g_firstBuffPage + Math.max(0, Math.ceil(data.length / rpp) - 1);\n    g_lastPage = Math.max(0, Math.ceil(g_total / rpp) - 1); // 0 based pages,\n    setPage(g_firstBuffPage);\n    common.log(\n      `g_firstBuffPage: ${g_firstBuffPage},g_lastBuffPage:${g_lastBuffPage},g_lastPage:${g_lastPage}`,\n    );\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"custom pagination table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Part Number</TableCell>\n            <TableCell >Period</TableCell>\n            <TableCell >Start Date</TableCell>\n            <TableCell >End Date</TableCell>\n            <TableCell >Quantity</TableCell>\n            <TableCell >Rate</TableCell>\n          </TableRow>\n        </TableHead>\n\n        <TableBody>\n          {(rowsPerPage > 0\n            ? data.slice(\n                (page - g_firstBuffPage) * rowsPerPage,\n                (page - g_firstBuffPage) * rowsPerPage + rowsPerPage,\n              )\n            : data\n          ).map(row => (\n            <TableRow key={row.PartProdRate_Key}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.part_no}\n              </TableCell>\n              <TableCell >\n                {row.period}\n              </TableCell>\n              <TableCell >{row.start_date}</TableCell>\n              <TableCell >\n                {row.end_date}\n              </TableCell>\n              <TableCell >{row.Quantity}</TableCell>\n              <TableCell >{row.Rate}</TableCell>\n            </TableRow>\n          ))}\n\n          {emptyRows > 0 && (\n            <TableRow key=\"9999\" style={{ height: 53 * emptyRows }}>\n              <TableCell colSpan={6} />\n            </TableRow>\n          )}\n        </TableBody>\n        <TableFooter>\n          <TableRow>\n            <TablePagination\n              rowsPerPageOptions={[5, 10, 25]}\n              colSpan={5}\n              count={total}\n              rowsPerPage={rowsPerPage}\n              page={page}\n              SelectProps={{\n                inputProps: { 'aria-label': 'rows per page' },\n                native: true,\n              }}\n              onChangePage={handleChangePage}\n              onChangeRowsPerPage={handleChangeRowsPerPage}\n              ActionsComponent={TablePaginationActions}\n            />\n          </TableRow>\n        </TableFooter>\n      </Table>\n    </TableContainer>\n  );\n}\n","import { connect } from \"react-redux\";\nimport TablePartProdRateComponent from \"../../components/Profit/TablePartProdRate\";\nimport * as actions from \"../../actions\";\n\nfunction mapStateToProps(state) {\n  const { User, PartProdRate, Global } = state;\n  return {\n    isAuthenticated: User.isAuthenticated,\n    start_period: PartProdRate.start_period,\n    end_period: PartProdRate.end_period,\n    total: PartProdRate.total,\n    limit: PartProdRate.limit,\n    skip: PartProdRate.skip,\n    data: PartProdRate.data,\n    submitting: Global.submitting\n  };\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    // dispatching plain actions\n    Push: () => dispatch(actions.Push()),\n    PartProdRateFetch: (limit, skip, route, setSubmittingOff) =>\n      dispatch(\n        actions.PartProdRateFetch(\n          limit,\n          skip,\n          route,\n          setSubmittingOff\n        )\n      ),\n    Submitting: submitting => dispatch(actions.Submitting(submitting))\n  };\n};\n\nexport const TablePartProdRate = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TablePartProdRateComponent);\n","import React, { useEffect } from 'react';\nimport Box from '@material-ui/core/Box';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { TablePartProdRate } from '../../containers/Profit/TablePartProdRate';\n\n// import * as common from '@bgroves/common';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(1),\n  },\n}));\n\nexport default function ViewPartProdRate(params) {\n  //  const { Push, total, SetAppError } = params;\n  useEffect(() => {\n    // if (total === 0) {\n    //   SetAppError(\n    //     'No records for that date range.',\n    //     errorType.DATE,\n    //     errorSeverity.LOW,\n    //   );\n    //   common.log('View200206=>No records, before push()');\n    //   Push('/');\n    // }\n  });\n  const classes = useStyles();\n\n  return (\n    <Box display=\"flex\" flexDirection=\"column\">\n      <Box p={1} bgcolor=\"grey.300\">\n        <div className={classes.root}>\n          <Typography variant=\"h6\" align=\"center\" gutterBottom>\n            Part Production Rates\n          </Typography>\n          <Typography variant=\"body1\" gutterBottom>\n            These are the production rates based on 480 production hour periods which start on 12 am of 04/01/2019 \n            and end on 11:59 pm of the last day of the month that is 2 months previous to todays date. \n            The date range of each period is unique to every part. \n            The total count of parts produced for each period is determined by looking at shipped containers only.\n            The shipped container's quantity is added to the period in which it was first moved to a finished location.\n          </Typography>\n        </div>\n      </Box>\n      <Box>\n        <TablePartProdRate />\n      </Box>\n    </Box>\n  );\n}\n\n","import { connect } from \"react-redux\";\nimport ViewPartProdRateComponent from \"../../components/Profit/ViewPartProdRate\";\nimport * as actions from '../../actions'\n\nfunction mapStateToProps(state) {\n  const { User } = state\n  return {\n    isAuthenticated: User.isAuthenticated,\n    isAdmin: User.isAdmin\n  }\n}\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    // dispatching plain actions\n    Push: (path) => dispatch(actions.Push(path)),\n    SetAppError: (message,errorType,errorSeverity) => dispatch(actions.SetAppError(message,errorType,errorSeverity))\n  }\n}\n\n\nexport const ViewPartProdRate = connect(mapStateToProps, mapDispatchToProps)(ViewPartProdRateComponent)\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport 'fontsource-roboto';\nimport { Formik } from 'formik';\nimport * as yup from 'yup'; // for everything\nimport Typography from '@material-ui/core/Typography';\n\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport TextField from '@material-ui/core/TextField';\nimport * as common from '@bgroves/common';\n\nimport * as errorSeverity from '../../constants/ErrorSeverity';\nimport * as errorType from '../../constants/ErrorType';\n\nlet validationSchema = yup.object().shape({\n  startPeriod: yup\n    .number()\n    .typeError('Start must be a number')\n    .test(\n      'compare start and end period',\n      'Start should be equal to or come before the End period.)',\n      function(start) {\n        // beware, don't use arrow function here otherwise you would not the reference to `this` object\n        let { endPeriod } = this.parent; // retrieve the value of the sibling form field with id `1st_number`\n        if (start > endPeriod) return false;\n        else return true;\n      },\n    )\n    .min(0, 'Start must be greater than or equal to 0')\n    // .max(10, 'Start must be less than or equal to 4')\n    //    .lessThan(yup.ref('endPeriod')+1, \"End should be >= Start\")\n\n    .required('required'),\n  endPeriod: yup\n    .number()\n    .typeError('End must be a number')\n    .test(\n      'compare start and end period',\n      'End should be equal to or come after the start period.',\n      function(end) {\n        const { startPeriod } = this.parent;\n        if (end >= startPeriod) {\n          return true;\n        }\n        return false;\n      },\n    )\n    .min(0, 'End must be greater than or equal to 0')\n    //.max(10, 'End must be less than or equal to 4')\n    .required('required'),\n});\n\n/*\n    })    // .test({\n    //   name: 'max',\n    //   exclusive: true,\n    //   params: { max },\n    //   message: '${path} must be less than ${max} characters',\n    //   test: value => value == null || value.length <= max,\n    // })    \n//    .when('endPeriod')\n    .when('endPeriod', (endPeriod, schema) => {\n      return schema.test({\n        test: startPeriod => { \n          if (!endPeriod){\n            return true;\n          }else{\n            return endPeriod >= startPeriod;\n          }\n        },\n//        test: endPeriod => !!startPeriod && endPeriod >= startPeriod,\n        message: \"Start should be <= End Period\"\n      })\n\n  endPeriod: yup\n    .number()\n    .when('startPeriod', (startPeriod, schema) => {\n      return schema.test({\n        test: endPeriod => !!startPeriod && endPeriod > startPeriod,\n        message: \"Max should be > min\"\n      })\n    })\n// .when(\n//   [\"startPeriod\", \"endPeriod\"],\n//   (startPeriod, endPeriod, schema) => {\n//       return !!startPeriod && startPeriod !== endPeriod\n//           ? schema.moreThan(\n//                   endPeriod,\n//                   \"Max should be > min\"\n//             )\n//           : schema;\n//   }\n// )\ntest({\n  name: 'max',\n  exclusive: true,\n  params: { max },\n  message: '${path} must be less than ${max} characters',\n  test: value => value == null || value.length <= max,\n})\n    .when('startPeriod', (startPeriod, schema) => {\n      return schema.test({\n        test: endPeriod => !!startPeriod && endPeriod > startPeriod,\n        message: \"Max should be > min\"\n      })\n    })\n*/\n/*\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(2),\n    },\n  },\n}));\n*/\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '25ch',\n    },\n  },\n  buttons: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n}));\n/*\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '25ch'\n    },\n  },\n  container: {\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(4)\n  },  \n  paper: {\n    marginTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),    \n  //  display: 'flex',\n //   flexDirection: 'column',\n    alignItems: 'center',\n  },\n  header: {\n    padding: theme.spacing(0),\n  },\n  s1: {\n    padding: theme.spacing(2),\n  },\n\n}));\n*/\nexport default function DialogPartProdRate(params) {\n  const {\n    PartProdRateFetch,\n    SetPartProdRateStartPeriod,\n    SetPartProdRateEndPeriod,\n    Push,\n    SetAppError,\n    Submitting,\n    submitting,\n  } = params;\n\n  const classes = useStyles();\n\n  const handleClose = () => {\n    Push('/profit');\n  };\n  return (\n    <Dialog\n      open={true}\n      onClose={handleClose}\n      aria-labelledby=\"form-dialog-title\"\n    >\n      <Formik\n        initialValues={{ startPeriod: 0, endPeriod: 10 }}\n        validationSchema={validationSchema}\n        onSubmit={(values, { setSubmitting }) => {\n          Submitting(true); // buttons look at this to determine if they should be enabled?\n          let start = values.startPeriod;\n          common.log(start);\n          let end = values.endPeriod;\n          common.log(end);\n          //Compare the two dates and return 1 if the first date is after the second,\n          // -1 if the first date is before the second or 0 if dates are equal.\n          if (start > end) {\n            SetAppError(\n              'Start period should be before or equal to the end period.',\n              errorType.VALIDATION,\n              errorSeverity.LOW,\n            );\n            Submitting(false);\n          } else {\n            SetPartProdRateStartPeriod(start);\n            SetPartProdRateEndPeriod(end);\n            Push('/profit/transition');\n            PartProdRateFetch(\n              start,\n              end,\n              1000,\n              0,\n              '/profit/ViewPartProdRate',\n              true,\n            ); // will set submitting to false after done.\n          }\n        }}\n      >\n        {props => {\n          // const { handleSubmit } = props;\n          const {\n            values: { startPeriod, endPeriod },\n            errors,\n            touched,\n            handleSubmit,\n            handleChange,\n            setFieldTouched,\n          } = props;\n\n          const change = (name, e) => {\n            e.persist();\n            handleChange(e);\n            setFieldTouched(name, true, false);\n          };\n          return (\n            <div>\n              <Box\n                className={classes.root}\n                m={1}\n                p={1}\n                bgcolor=\"background.paper\"\n              >\n                <form onSubmit={handleSubmit}>\n                  <Typography variant=\"h4\" gutterBottom>\n                    Time Period Range\n                  </Typography>\n                  <Typography variant=\"subtitle1\" gutterBottom>\n                    Part time periods are unique to each part and start at 0 and increment every\n                    480 production hours.\n                  </Typography>\n\n                  <Box p={1} className={classes.root}>\n                    <TextField\n                      id=\"startPeriod\"\n                      name=\"startPeriod\"\n                      helperText={touched.startPeriod ? errors.startPeriod : ''}\n                      error={touched.startPeriod && Boolean(errors.startPeriod)}\n                      label=\"Start\"\n                      value={startPeriod}\n                      onChange={change.bind(null, 'startPeriod')}\n                    />\n                    <TextField\n                      id=\"endPeriod\"\n                      name=\"endPeriod\"\n                      helperText={touched.endPeriod ? errors.endPeriod : ''}\n                      error={touched.endPeriod && Boolean(errors.endPeriod)}\n                      label=\"End\"\n                      value={endPeriod}\n                      onChange={change.bind(null, 'endPeriod')}\n                    />\n                  </Box>\n                  <Box p={1} className={classes.buttons}>\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      onClick={handleClose}\n                    >\n                      Cancel\n                    </Button>\n                    <Button\n                      variant=\"contained\"\n                      type=\"submit\"\n                      disabled={submitting}\n                    >\n                      Submit\n                    </Button>\n                  </Box>\n                </form>\n              </Box>\n            </div>\n          );\n        }}\n      </Formik>\n    </Dialog>\n  );\n}\n","import { connect } from 'react-redux';\nimport DialogPartProdRateComponent from '../../components/Profit/DialogPartProdRate';\nimport * as actions from '../../actions';\n\nfunction mapStateToProps(state) {\n  const { Global } = state;\n  return {\n    submitting: Global.submitting,\n  };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    // dispatching plain actions\n    PartProdRateFetch: (startPeriod, endPeriod, limit, skip, route, setSubmittingOff) => dispatch(actions.PartProdRateFetch(startPeriod, endPeriod, limit, skip, route, setSubmittingOff)),\n    SetPartProdRateStartPeriod: (startPeriod) => dispatch(actions.SetPartProdRateStartPeriod(startPeriod)),\n    SetPartProdRateEndPeriod: (endPeriod) => dispatch(actions.SetPartProdRateEndPeriod(endPeriod)),\n    Push: (path) => dispatch(actions.Push(path)),\n    Submitting: (submitting) => dispatch(actions.Submitting(submitting)),\n    SetAppError: (message, errorType, errorSeverity) => dispatch(actions.SetAppError(message, errorType, errorSeverity)),\n  };\n};\n\nexport const DialogPartProdRate = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(DialogPartProdRateComponent);\n","import React, { useEffect } from 'react';\nimport {\n  Switch,\n  Route,\n  useRouteMatch\n} from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nimport clsx from 'clsx';\nimport { AppMenu } from '../../containers/AppMenu';\nimport { SideMenu } from '../../containers/Profit/SideMenu';\nimport { Landing } from '../../containers/Profit/Landing';\nimport { ViewPartProdRate } from '../../containers/Profit/ViewPartProdRate';\nimport { DialogPartProdRate } from '../../containers/Profit/DialogPartProdRate';\nimport LinearIndeterminate from '../LinearIndeterminate';\n\nconst drawerWidth = 200;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nexport default function App({\n  isAuthenticated,\n  pathname,\n  Push,\n}) {\n  useEffect(() => {\n  });\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  let match = useRouteMatch();\n  return (\n    <React.Fragment>\n    <CssBaseline />\n    {isAuthenticated && pathname !== \"/login\" && pathname !== \"/\" && (\n              <React.Fragment>\n<AppBar\n        position=\"absolute\"\n        className={clsx(classes.appBar, open && classes.appBarShift)}\n      >\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(\n              classes.menuButton,\n              open && classes.menuButtonHidden,\n            )}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography\n            component=\"h1\"\n            variant=\"h6\"\n            color=\"inherit\"\n            noWrap\n            className={classes.title}\n          >\n            Profitability\n          </Typography>\n          <AppMenu />\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <SideMenu />\n      </Drawer>\n              </React.Fragment>\n              )}\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Switch>\n          <Route path={`${match.path}/transition`}>\n              <LinearIndeterminate />\n\n            </Route>\n            <Route path={`${match.path}/DialogPartProdRate`}>\n              <DialogPartProdRate />\n            </Route>\n            <Route path={`${match.path}/ViewPartProdRate`}>\n              <ViewPartProdRate />\n            </Route>\n            <Route path={match.path}>\n              <Landing />\n            </Route>            \n          </Switch>\n        </Container>\n      </main>\n      </React.Fragment>\n  );\n}\n\n\n","import { connect } from \"react-redux\";\nimport AppComponent from \"../../components/Profit/App\";\n\nimport * as actions from \"../../actions\";\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    // dispatching plain actions\n    Push: path => dispatch(actions.Push(path)),\n    Logout: () => dispatch(actions.Logout()),\n    ClearAppError: () => dispatch(actions.ClearAppError()),\n    Submitting: submitting => dispatch(actions.Submitting(submitting))\n  };\n};\n\nfunction mapStateToProps(state) {\n  const { User, router, Global } = state;\n  return {\n    isAuthenticated: User.isAuthenticated,\n    isAdmin: User.isAdmin,\n    userName: User.userName,\n    firstName: User.firstName,\n    lastName: User.lastName,\n    pathname: router.location.pathname,\n    search: router.location.search,\n    hash: router.location.hash,\n    submitting: Global.submitting,\n    appError: Global.appError\n  };\n}\n\nexport const Profit = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AppComponent);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport List from '@material-ui/core/List';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\nimport BuildIcon from '@material-ui/icons/Build';\nimport SpeedIcon from '@material-ui/icons/Speed';\nimport DraftsIcon from '@material-ui/icons/Drafts';\nimport * as AppId from '../constants/AppId';\nimport * as AppSet from '../constants/AppSet';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Paper from \"@material-ui/core/Paper\";\nimport PlayCircleFilledWhiteIcon from \"@material-ui/icons/PlayCircleFilledWhite\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AppBar from \"@material-ui/core/AppBar\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  container: {\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(4)\n  },  \n  paper: {\n    marginTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),    \n  //  display: 'flex',\n //   flexDirection: 'column',\n    alignItems: 'center',\n  },\n  header: {\n    padding: theme.spacing(0),\n  },\n  s1: {\n    padding: theme.spacing(2),\n  },\n\n}));\n\nexport default function LaunchMenu(params) {\n  const { SetCurrentApp, appSet, Push } = params;\n\n  const classes = useStyles();\n\n  const handleOEE = () => {\n    SetCurrentApp(AppId.OEE);\n    Push('/oee');\n  };\n  const handleCNC = () => {\n    SetCurrentApp(AppId.CNC);\n    Push('/cnc');\n  };\n  const handleProfit = () => {\n    SetCurrentApp(AppId.PROFIT);\n    Push('/profit');\n  };\n  const handleSensor = () => {\n    //    Push('/transition');\n    //    OpenDialog200206(true);\n    SetCurrentApp(AppId.SENSOR);\n    Push('/oee');\n  };\n\n  return (\n    <React.Fragment>\n    <CssBaseline />\n    <div style={{ width: '100%' }}>\n    <Box display=\"flex\" justifyContent=\"center\" m={1} p={1} bgcolor=\"background.paper\">\n        <Box p={1} bgcolor=\"background.paper\" >\n        {appSet === AppSet.BPG && (\n            <List component=\"nav\" aria-label=\"main mailbox folders\">\n              <ListSubheader className={classes.header} >\n              <Paper >\n            <AppBar position=\"static\" >\n              <Toolbar>\n                <PlayCircleFilledWhiteIcon style={{ fontSize: 30 }} />\n                <Typography variant=\"h6\" className={classes.s1} >\n                  BPG Software\n                </Typography>\n              </Toolbar>\n            </AppBar>\n          </Paper>\n              </ListSubheader>\n              <Divider />\n              <ListItem button onClick={handleOEE}>\n                <ListItemIcon>\n                  <SpeedIcon />\n                </ListItemIcon>\n                <ListItemText bgcolor=\"primary.main\" primary=\"OEE\" />\n              </ListItem>\n              <ListItem button onClick={handleCNC}>\n                <ListItemIcon>\n                  <BuildIcon />\n                </ListItemIcon>\n                <ListItemText primary=\"CNC\" />\n              </ListItem>\n              <ListItem button onClick={handleProfit}>\n                <ListItemIcon>\n                  <AttachMoneyIcon />\n                </ListItemIcon>\n                <ListItemText primary=\"Profit\" />\n              </ListItem>\n            </List>\n        )}\n        {appSet === AppSet.HOME && (\n            <List component=\"nav\" aria-label=\"main mailbox folders\">\n              <ListSubheader>BPG</ListSubheader>\n              <Divider />\n              <ListItem button onClick={handleOEE}>\n                <ListItemIcon>\n                  <SpeedIcon />\n                </ListItemIcon>\n                <ListItemText bgcolor=\"primary.main\" primary=\"OEE\" />\n              </ListItem>\n              <ListItem button onClick={handleCNC}>\n                <ListItemIcon>\n                  <DraftsIcon />\n                </ListItemIcon>\n                <ListItemText primary=\"CNC\" />\n              </ListItem>\n              <ListItem button onClick={handleSensor}>\n                <ListItemIcon>\n                  <DraftsIcon />\n                </ListItemIcon>\n                <ListItemText primary=\"Sensor\" />\n              </ListItem>\n            </List>\n        )}\n\n        </Box>\n\n      </Box>\n      </div>\n\n</React.Fragment>\n  );\n}\n\n/*\nxs={12} md={12} lg={5}\n      <Container maxWidth=\"sm\" className={classes.paper} >\n\n       <Grid container spacing={3}>\n      <Grid item xs={3}>\n          <Paper className={classes.paper}>xs=3</Paper>\n        </Grid>\n        <Grid item xs={3}>\n        <List component=\"nav\" aria-label=\"main mailbox folders\">\n      <ListSubheader>BPG</ListSubheader>\n      <Divider />\n        <ListItem button>\n          <ListItemIcon>\n            <InboxIcon />\n          </ListItemIcon>\n          <ListItemText bgcolor=\"primary.main\" primary=\"OEE\" />\n        </ListItem>\n        <ListItem button>\n          <ListItemIcon>\n            <DraftsIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"CNC\" />\n        </ListItem>\n      </List>\n        </Grid>\n        <Grid item xs={3}>\n          <Paper className={classes.paper}>xs=3</Paper>\n        </Grid>        \n \n      </Grid>\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\nfunction ListItemLink(props) {\n  return <ListItem button component=\"a\" {...props} />;\n}\n\nexport default function LaunchMenu() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <List component=\"nav\" aria-label=\"main mailbox folders\">\n      <ListSubheader>BPG</ListSubheader>\n      <Divider />\n        <ListItem button>\n          <ListItemIcon>\n            <InboxIcon />\n          </ListItemIcon>\n          <ListItemText bgcolor=\"primary.main\" primary=\"OEE\" />\n        </ListItem>\n        <ListItem button>\n          <ListItemIcon>\n            <DraftsIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"CNC\" />\n        </ListItem>\n      </List>\n      <Divider />\n      <List component=\"nav\" aria-label=\"secondary mailbox folders\">\n        <ListItem button>\n          <ListItemText primary=\"Trash\" />\n        </ListItem>\n        <ListItemLink href=\"#simple-list\">\n          <ListItemText primary=\"Spam\" />\n        </ListItemLink>\n      </List>\n    </div>\n  );\n}\n*/\n","import { connect } from 'react-redux';\nimport LaunchMenuComponent from '../components/LaunchMenu';\nimport * as actions from '../actions';\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    // dispatching plain actions\n    Push: (path) => dispatch(actions.Push(path)),\n    AuthenticateSaga: (email, password, route, setSubmittingOff) =>\n      dispatch(\n        actions.AuthenticateSaga(email, password, route, setSubmittingOff),\n      ),\n    ClearAppError: () => dispatch(actions.ClearAppError()),\n    Submitting: (submitting) => dispatch(actions.Submitting(submitting)),\n    SetCurrentApp: (app) => dispatch(actions.SetCurrentApp(app)),\n  };\n};\n\nfunction mapStateToProps(state) {\n  const { User, Global } = state;\n  return {\n    currentApp: Global.currentApp,\n    appSet: Global.appSet,\n    appError: Global.appError,\n    isAuthenticated: User.isAuthenticated,\n    roles: User.roles,\n    submitting: Global.submitting,\n  };\n}\n\nexport const LaunchMenu = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(LaunchMenuComponent);\n","import React, { useState } from 'react';\n// https://hackernoon.com/react-form-validation-using-react-hooks-5859c32280ca\nimport { Formik } from 'formik';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\n\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\n\nimport { loginRequest } from \"../config/authConfig\";\nimport { MsalProvider, AuthenticatedTemplate, UnauthenticatedTemplate, useMsal, useAccount,useIsAuthenticated } from \"@azure/msal-react\";\nimport { ProfileData, callMsGraph } from \"../graph.jsx\";\n\nimport * as Yup from 'yup';\n\nimport * as common from '@bgroves/common';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  instructions: {\n    padding: 14\n  }\n}));\n\nconst ProfileContent = () => {\n  const { instance, accounts } = useMsal();\n  const account = useAccount(accounts[0] || {});\n  const [graphData, setGraphData] = useState(null);\n\n  function RequestProfileData() {\n      instance.acquireTokenSilent({\n          ...loginRequest,\n          account: account\n      }).then((response) => {\n          callMsGraph(response.accessToken).then(response => setGraphData(response));\n      });\n  }\n\n  return (\n      <>\n          <h5 >Welcome {account && account.name}</h5>\n          {graphData ? \n              <ProfileData graphData={graphData} />\n              :\n              <Button onClick={RequestProfileData}>Request Profile Information</Button>\n          }\n      </>\n  );\n};\n\n// https://medium.com/hackernoon/learn-react-hooks-by-building-an-auth-based-to-do-app-c2d143928b0b\nconst SignIn = ({\n  msalInstance,\n  AuthenticateSaga,\n  ClearAppError,\n  Submitting,\n  appError,\n  isAuthenticated,\n  submitting,\n}) => {\n  //  const referer = props.location.state.referer || '/';\n  const classes = useStyles();\n  const { instance } = useMsal();\n  const isAuthenticatedAAD = useIsAuthenticated();\n  const handleSignOut = event => {\n    alert('Sign Out');\n    msalInstance.logout();\n    // instance.loginRedirect(loginRequest);\n  };\n  \n  const handleSignIn = event => {\n    alert('Sign In');\n    msalInstance.loginRedirect(loginRequest);\n    // instance.loginRedirect(loginRequest);\n  };\n\n\n  return (\n          <React.Fragment>\n          <p>Anyone can see this paragraph.</p>\n\n            <Button onClick={handleSignOut}>\n              Sign Out\n            </Button>\n\n            <Button onClick={handleSignIn}>\n              Sign In\n            </Button>\n\n            </React.Fragment>\n        );\n  };\n\nexport default SignIn;\n\n","import { connect } from 'react-redux'\nimport SignInComponent from '../components/SignIn'\nimport * as actions from '../actions'\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    // dispatching plain actions\n  AuthenticateSaga: (email,password,route,setSubmittingOff) => dispatch(actions.AuthenticateSaga(email,password,route,setSubmittingOff)),\n  ClearAppError: () => dispatch(actions.ClearAppError()),\n  Submitting: (submitting) => dispatch(actions.Submitting(submitting))\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { User,Global,Msal } = state\n  return {\n    msalInstance: Msal.msalInstance,\n    appError: Global.appError,\n    isAuthenticated: User.isAuthenticated,\n    submitting: Global.submitting\n  }\n}\n\nexport const SignIn = connect(mapStateToProps, mapDispatchToProps)(SignInComponent)\n","import React from \"react\";\n\nexport class ErrorBoundary extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hasError: false,\n            error: \"\"\n        };\n    }\n\n    componentDidCatch(e) {\n        this.setState({\n            hasError: true,\n            error: e.errorCode\n        });\n    }\n\n    render() {\n        if (this.hasError) {\n            return <h5>This is a protected page and the following error occurred during authentication: <strong>{this.state.error}</strong></h5>;\n        }\n\n        return this.props.children;\n    }\n}","import React from \"react\";\nimport { graphConfig } from \"../config/authConfig\";\n\nexport async function callMsGraph(accessToken) {\n    const headers = new Headers();\n    const bearer = `Bearer ${accessToken}`;\n\n    headers.append(\"Authorization\", bearer);\n\n    const options = {\n        method: \"GET\",\n        headers: headers\n    };\n\n    return fetch(graphConfig.graphMeEndpoint, options)\n        .then(response => response.json())\n        .catch(error => console.log(error));\n}\n\nexport async function GetGroups(accessToken) {\n    const headers = new Headers();\n    const bearer = `Bearer ${accessToken}`;\n\n    headers.append(\"Authorization\", bearer);\n\n    const options = {\n        method: \"GET\",\n        headers: headers\n    };\n   // \n    return fetch(graphConfig.memberOfEndpoint, options)\n        .then(response => response.json())\n        .catch(error => {\n            console.log(error)\n            console.log(`Fetch getGroups catch`);\n        }\n        );\n}\n\nexport async function GetProfile(accessToken) {\n    const headers = new Headers();\n    const bearer = `Bearer ${accessToken}`;\n\n    headers.append(\"Authorization\", bearer);\n\n    const options = {\n        method: \"GET\",\n        headers: headers\n    };\n   // \n    return fetch(graphConfig.profileEndPoint, options)\n        .then(response => response.json())\n        .catch(error => {\n            console.log(error)\n            console.log(`Fetch getProfile catch`);\n        }\n        );\n}\n\n\nexport async function SendMail(accessToken) {\n    const headers = new Headers();\n    const bearer = `Bearer ${accessToken}`;\n\n    headers.append(\"Authorization\", bearer);\n    headers.append('Content-Type','application/json');\n    const myBody =  {\n        message: {\n          subject: \"Test2\",\n          body: {\n            contentType: \"Text\",\n            content: \"The new cafeteria is open.\"\n          },\n          toRecipients: [\n            {\n              emailAddress: {\n                address: \"bgroves@mobexglobal.com\"\n              }\n            }\n          ],\n          ccRecipients: [\n            {\n              emailAddress: {\n                address: \"dkreps@mobexglobal.com\"\n              }\n            }\n          ]\n        },\n        saveToSentItems: \"false\"\n      };      \n   \n    const options = {\n        method: \"POST\",\n        headers: headers,\n        body: JSON.stringify(myBody) // body data type must match \"Content-Type\" header\n    };\n   // \n   console.log(`SendMail,headers:${headers},myBody:${JSON.stringify(myBody)}`);\n    return fetch(graphConfig.sendMailEndPoint, options)\n        .then(response => response.json())\n        .catch(error => console.log(error));\n    console.log(`SendMail after fetch`);\n    /*\n       return fetch(graphConfig.sendMailEndpoint, \n        {\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\n            headers: {\n              'Content-Type': 'application/json'\n              // 'Content-Type': 'application/x-www-form-urlencoded',\n            },\n            body: JSON.stringify(myBody) // body data type must match \"Content-Type\" header\n          }        \n       .then(response => response.json())\n       .catch(error => console.log(error)));\n*/\n/*       \n       fetch(url, {\n        method: 'POST', // *GET, POST, PUT, DELETE, etc.\n        mode: 'cors', // no-cors, *cors, same-origin\n        cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n        credentials: 'same-origin', // include, *same-origin, omit\n        headers: {\n          'Content-Type': 'application/json'\n          // 'Content-Type': 'application/x-www-form-urlencoded',\n        },\n        redirect: 'follow', // manual, *follow, error\n        referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n        body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n      });\n  \n      */\n    \n}\n\nexport const ProfileData = (props) => {\n    return (\n        <div id=\"profile-div\">\n            <p><strong>Title: </strong> {props.graphData.jobTitle}</p>\n            <p><strong>Mail: </strong> {props.graphData.mail}</p>\n            <p><strong>Phone: </strong> {props.graphData.businessPhones[0]}</p>\n            <p><strong>Location: </strong> {props.graphData.officeLocation}</p>\n        </div>\n    );\n};","import React, { useEffect,useState } from \"react\";\nimport {\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nimport { Tracker } from '../containers/Tracker/App';\nimport { OEE } from '../containers/OEE/App';\nimport { CNC } from '../containers/CNC/App';\nimport { Profit } from '../containers/Profit/App';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { LaunchMenu } from '../containers/LaunchMenu';\nimport { SignIn } from '../containers/SignIn';\nimport LinearIndeterminate from './LinearIndeterminate';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { MsalProvider, MsalAuthenticationTemplate, UnauthenticatedTemplate, useMsal, useAccount } from \"@azure/msal-react\";\nimport { PublicClientApplication } from \"@azure/msal-browser\";\nimport { msalConfig, loginRequest } from \"../config/authConfig\";\nimport { ErrorBoundary } from \"./ErrorBoundary.jsx\";\nimport { ProfileData, callMsGraph,GetProfile,GetGroups,SendMail } from \"./graph.jsx\";\nimport { SetDepartment } from \"../actions\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  }\n\n}));\n// https://docs.microsoft.com/en-us/graph/api/user-list-transitivememberof?view=graph-rest-1.0&tabs=http\n\n/*\nconst ProfileContent = () => {\n  const { instance, accounts } = useMsal();\n  const account = useAccount(accounts[0] || {});\n  const [graphData, setGraphData] = useState(null);\n\n  function RequestProfileData() {\n      instance.acquireTokenSilent({\n          ...loginRequest,\n          account: account\n      }).then((response) => {\n          callMsGraph(response.accessToken).then(response => setGraphData(response));\n      });\n  }\n\n  return (\n      <>\n          <h5 className=\"card-title\">Welcome {account && account.name}</h5>\n          {graphData ? \n              <ProfileData graphData={graphData} />\n              :\n              <Button onClick={RequestProfileData}>Request Profile Information</Button>\n          }\n      </>\n  );\n};\n*/\n\nexport default function AppSwitch({\n  msalInstance,\n  SetAccount,\n  SetGraph,\n  SetGroups,\n  SetProfile,\n  SetDepartment,\n  Push,\n  appError,\n  ClearAppError,\n  SetIsAuthenticated\n}) {\n  const { instance, accounts } = useMsal();\n  const account = useAccount(accounts[0] || {});\n  const [graphData, setGraphData] = useState(null);\n  useEffect(() => {\n    // Update the document title using the browser API\n    //document.title = `You clicked ${count} times`;\n    // if (!isAuthenticated) {\n    //   Push('/login');\n    // }\n    instance.acquireTokenSilent({\n      ...loginRequest,\n      account: account\n    }).then((response) => {\n        SetAccount(account);\n        callMsGraph(response.accessToken).then(response => \n        {\n          setGraphData(response);\n          SetGraph(response);\n        });\n         /*\n          GetGroups(response.accessToken).then(response => \n            {\n              console.log(`before SetGroups`);\n              SetGroups(response)\n            });\n            */\n          GetProfile(response.accessToken).then(response => \n          {\n            console.log(`before SetProfile ${response}`);\n            SetProfile(response.positions[0].detail);\n            const department = response.positions[0].detail.company.department;\n            SetDepartment(department); \n            switch(department)\n            {\n              case 'Production':\n                console.log(`Redirecting to Production`);\n                Push('/tracker')\n                break;\n                case 'Engineering':\n                  console.log(`Redirecting to Production`);\n                  Push('/tracker')\n                  break;\n                default:\n                break;\n            }\n          });\n          // switch()\n            /*\n            SendMail(response.accessToken).then(response => \n              {\n                console.log(`Mail Sent: Response=>${JSON.stringify(Response)}`);\n              })\n              .catch(error => {\n                console.log(error);\n                console.log(`SendMail error caught`);\n              });\n              */\n        });\n\n\n  },[account]);\n\n  function RequestProfileData() {\n    /*  WE ARE LOGGING IN USING THE REACT TEMPLATE\n    AND NOT THIS acquireTokenSilent\n       <MsalAuthenticationTemplate interactionType=\"redirect\" loadingComponent={InProgressComponent} errorComponent={ErrorComponent}>\n                    <ProfileContent />\n\n                </MsalAuthenticationTemplate>\n \n    */\n      instance.acquireTokenSilent({\n          ...loginRequest,\n          account: account\n      }).then((response) => {\n          callMsGraph(response.accessToken).then(response => setGraphData(response));\n      });\n  }\n\n  function Logout() {\n    msalInstance.logout();\n  }\n\n  const handleClose = (event, reason) => {\n   // ClearAppError();\n    if (reason === 'clickaway') {\n      return;\n    }\n    //    setOpen(false);\n  };\n\n\n  const classes = useStyles();\n\n  return (\n    // Need This style for placement\n    <div className={classes.root}>\n          {/* <h5 className=\"card-title\">Welcome {account && account.name}</h5>\n          <Button onClick={Logout}>Logout</Button> */}\n\n          {/* <ProfileData graphData={graphData} /> */}\n          {/* {graphData ? \n              <ProfileData graphData={graphData} />\n              :\n              <Button onClick={RequestProfileData}>Request Profile Information</Button>\n          } */}\n\n        <CssBaseline />\n        <Switch>\n          <Route exact path=\"/tracker\" component={Tracker} />\n          <Route exact path=\"/transition\" component={LinearIndeterminate} />\n        </Switch>\n    </div>\n  );\n};\n\n","import { connect } from \"react-redux\";\nimport AppSwitchComponent from \"../components/AppSwitch\";\n\nimport * as actions from \"../actions\";\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    // dispatching plain actions\n    SetIsAuthenticated: (isAuthenticated) => dispatch(actions.SetIsAuthenticated(isAuthenticated)),\n    SetAccount: (account) => dispatch(actions.SetAccount(account)),\n    SetGraph: (graph) => dispatch(actions.SetGraph(graph)),\n    SetGroups: (groups) => dispatch(actions.SetGroups(groups)),\n    SetProfile: (profile) => dispatch(actions.SetProfile(profile)),\n    SetDepartment: (department) => dispatch(actions.SetDepartment(department)),\n    Push: path => dispatch(actions.Push(path)),\n    Logout: () => dispatch(actions.Logout()),\n    ClearAppError: () => dispatch(actions.ClearAppError()),\n    Submitting: submitting => dispatch(actions.Submitting(submitting))\n  };\n};\n\nfunction mapStateToProps(state) {\n  const { Msal } = state;\n  return {\n    msalInstance: Msal.msalInstance\n  };\n}\n\nexport const AppSwitch = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AppSwitchComponent);\n","import { connect } from \"react-redux\";\nimport ProfileContentComponent from \"../components/ProfileContent\";\n\nimport * as actions from \"../actions\";\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    // dispatching plain actions\n    SetIsAuthenticated: (isAuthenticated) => dispatch(actions.SetIsAuthenticated(isAuthenticated)),\n    SetAccount: (account) => dispatch(actions.SetAccount(account)),\n    SetGraph: (graph) => dispatch(actions.SetGraph(graph)),\n    SetGroups: (groups) => dispatch(actions.SetGroups(groups)),\n    SetProfile: (profile) => dispatch(actions.SetProfile(profile)),\n    Push: path => dispatch(actions.Push(path)),\n    Logout: () => dispatch(actions.Logout()),\n    ClearAppError: () => dispatch(actions.ClearAppError()),\n    Submitting: submitting => dispatch(actions.Submitting(submitting))\n  };\n};\n\nfunction mapStateToProps(state) {\n  const { Msal } = state;\n  return {\n    msalInstance: Msal.msalInstance\n  };\n}\n\nexport const ProfileContent = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ProfileContentComponent);\n","import React, { useEffect,useState } from \"react\";\nimport {\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nimport { OEE } from '../containers/OEE/App';\nimport { CNC } from '../containers/CNC/App';\nimport { Profit } from '../containers/Profit/App';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { LaunchMenu } from '../containers/LaunchMenu';\nimport { SignIn } from '../containers/SignIn';\nimport LinearIndeterminate from './LinearIndeterminate';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { MsalProvider, MsalAuthenticationTemplate, UnauthenticatedTemplate, useMsal, useAccount } from \"@azure/msal-react\";\nimport { PublicClientApplication } from \"@azure/msal-browser\";\nimport { msalConfig, loginRequest } from \"../config/authConfig\";\nimport { ErrorBoundary } from \"./ErrorBoundary.jsx\";\nimport { ProfileData, callMsGraph,GetProfile,GetGroups,SendMail } from \"./graph.jsx\";\n\n// https://docs.microsoft.com/en-us/graph/api/user-list-transitivememberof?view=graph-rest-1.0&tabs=http\n\n/*\nconst ProfileContent = () => {\n  const { instance, accounts } = useMsal();\n  const account = useAccount(accounts[0] || {});\n  const [graphData, setGraphData] = useState(null);\n\n  function RequestProfileData() {\n      instance.acquireTokenSilent({\n          ...loginRequest,\n          account: account\n      }).then((response) => {\n          callMsGraph(response.accessToken).then(response => setGraphData(response));\n      });\n  }\n\n  return (\n      <>\n          <h5 className=\"card-title\">Welcome {account && account.name}</h5>\n          {graphData ? \n              <ProfileData graphData={graphData} />\n              :\n              <Button onClick={RequestProfileData}>Request Profile Information</Button>\n          }\n      </>\n  );\n};\n*/\n\nexport default function ProfileContent({\n  msalInstance,\n  SetAccount,\n  SetGraph,\n  SetGroups,\n  SetProfile,\n  SetIsAuthenticated\n}) {\n  const { instance, accounts } = useMsal();\n  const account = useAccount(accounts[0] || {});\n  const [graphData, setGraphData] = useState(null);\n  useEffect(() => {\n    // Update the document title using the browser API\n    //document.title = `You clicked ${count} times`;\n    // if (!isAuthenticated) {\n    //   Push('/login');\n    // }\n    instance.acquireTokenSilent({\n      ...loginRequest,\n      account: account\n    }).then((response) => {\n      SetAccount(account);\n        callMsGraph(response.accessToken).then(response => \n          {\n            setGraphData(response);\n            SetGraph(response);\n          });\n         /*\n          GetGroups(response.accessToken).then(response => \n            {\n              console.log(`before SetGroups`);\n              SetGroups(response)\n            });\n            */\n           GetProfile(response.accessToken).then(response => \n            {\n              console.log(`before SetProfile ${response}`);\n              SetProfile(response.positions[0].detail)\n            });\n            /*\n            SendMail(response.accessToken).then(response => \n              {\n                console.log(`Mail Sent: Response=>${JSON.stringify(Response)}`);\n              })\n              .catch(error => {\n                console.log(error);\n                console.log(`SendMail error caught`);\n              });\n              */\n        });\n\n\n  },[account]);\n\n  function RequestProfileData() {\n    /*  WE ARE LOGGING IN USING THE REACT TEMPLATE\n    AND NOT THIS acquireTokenSilent\n       <MsalAuthenticationTemplate interactionType=\"redirect\" loadingComponent={InProgressComponent} errorComponent={ErrorComponent}>\n                    <ProfileContent />\n\n                </MsalAuthenticationTemplate>\n \n    */\n      instance.acquireTokenSilent({\n          ...loginRequest,\n          account: account\n      }).then((response) => {\n          callMsGraph(response.accessToken).then(response => setGraphData(response));\n      });\n  }\n\n  function Logout() {\n    msalInstance.logout();\n  }\n  /*\n                <Button variant=\"secondary\" onClick={() => instance.logout()} className=\"ml-auto\">Sign Out</Button>\n  <Dropdown.Item as=\"button\" onClick={() => instance.loginPopup(loginRequest)}>Sign in using Popup</Dropdown.Item>\n  <Dropdown.Item as=\"button\" onClick={() => instance.loginRedirect(loginRequest)}>Sign in using Redirect</Dropdown.Item>\n*/\n/*\n{\n    // home account identifier for this account object\n    homeAccountId: string;\n    // Entity who issued the token represented as a full host of it (e.g. login.microsoftonline.com)\n    environment: string;\n    // Full tenant or organizational id that this account belongs to\n    tenantId: string;\n    // preferred_username claim of the id_token that represents this account.\n    username: string;\n};\n*/\n  return (\n      <>\n          <h5 className=\"card-title\">Welcome {account && account.name}</h5>\n          <Button onClick={Logout}>Logout</Button>\n\n          {/* <ProfileData graphData={graphData} /> */}\n          {/* {graphData ? \n              <ProfileData graphData={graphData} />\n              :\n              <Button onClick={RequestProfileData}>Request Profile Information</Button>\n          } */}\n      </>\n  );\n};\n\n","import React, { useEffect,useState } from \"react\";\nimport {\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nimport { AppSwitch } from '../containers/AppSwitch';\nimport { OEE } from '../containers/OEE/App';\nimport { CNC } from '../containers/CNC/App';\nimport { Profit } from '../containers/Profit/App';\nimport { ProfileContent } from '../containers/ProfileContent'\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { LaunchMenu } from '../containers/LaunchMenu';\nimport { SignIn } from '../containers/SignIn';\nimport LinearIndeterminate from './LinearIndeterminate';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { MsalProvider, MsalAuthenticationTemplate, UnauthenticatedTemplate, useMsal, useAccount } from \"@azure/msal-react\";\nimport { PublicClientApplication } from \"@azure/msal-browser\";\nimport { msalConfig, loginRequest } from \"../config/authConfig\";\nimport { ErrorBoundary } from \"./ErrorBoundary.jsx\";\nimport { ProfileData, callMsGraph } from \"./graph.jsx\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  }\n\n}));\n\n/*\nconst ProfileContent = () => {\n  const { instance, accounts } = useMsal();\n  const account = useAccount(accounts[0] || {});\n  const [graphData, setGraphData] = useState(null);\n\n  function RequestProfileData() {\n      instance.acquireTokenSilent({\n          ...loginRequest,\n          account: account\n      }).then((response) => {\n          callMsGraph(response.accessToken).then(response => setGraphData(response));\n      });\n  }\n\n  return (\n      <>\n          <h5 className=\"card-title\">Welcome {account && account.name}</h5>\n          {graphData ? \n              <ProfileData graphData={graphData} />\n              :\n              <Button onClick={RequestProfileData}>Request Profile Information</Button>\n          }\n      </>\n  );\n};\n*/\n/*\nconst ProfileContent = () => {\n  const { instance, accounts } = useMsal();\n  const account = useAccount(accounts[0] || {});\n  const [graphData, setGraphData] = useState(null);\n  useEffect(() => {\n    // Update the document title using the browser API\n    //document.title = `You clicked ${count} times`;\n    // if (!isAuthenticated) {\n    //   Push('/login');\n    // }\n    instance.acquireTokenSilent({\n      ...loginRequest,\n      account: account\n    }).then((response) => {\n        callMsGraph(response.accessToken).then(response => setGraphData(response));\n    });\n\n  });\n\n  function RequestProfileData() {\n      instance.acquireTokenSilent({\n          ...loginRequest,\n          account: account\n      }).then((response) => {\n          callMsGraph(response.accessToken).then(response => setGraphData(response));\n      });\n  }\n\n  return (\n      <>\n          <h5 className=\"card-title\">Welcome {account && account.name}</h5>\n      </>\n  );\n};\n*/\nconst InProgressComponent = ({inProgress}) => {\n  return <h5>{inProgress} In Progress</h5>;\n}\n\nconst ErrorComponent = ({error}) => {\n  return <h5>This is a protected page and the following error occurred during authentication: <strong>{error.errorCode}</strong></h5>;\n}\n\n/* \nDescribes an alternate way to do this.\nhttps://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-react/docs/hooks.md#useaccount-hook\n*/\nexport default function Authenticate({\n  msalInstance,\n  SetAccount,\n  SetGraph,\n  appSet,\n  currentApp,\n  ClearAppError,\n  appError,\n  isAuthenticated,\n  Push,\n}) {\n\n  useEffect(() => {\n    // Update the document title using the browser API\n    //document.title = `You clicked ${count} times`;\n    // if (!isAuthenticated) {\n    //   Push('/login');\n    // }\n  });\n  const handleCloseSnackBar = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    ClearAppError();\n\n    //    setOpen(false);\n  };\n  const classes = useStyles();\n // const msalInstance = new PublicClientApplication(msalConfig);\n  return (\n    <MsalProvider instance={msalInstance}>\n    <ErrorBoundary>\n    <MsalAuthenticationTemplate interactionType=\"redirect\" loadingComponent={InProgressComponent} errorComponent={ErrorComponent}>\n                    {/* <ProfileContent /> */}\n                    <AppSwitch />\n        <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center',\n        }}\n        open={appError.error}\n        autoHideDuration={6000}\n        onClose={handleCloseSnackBar}\n        message={appError.message}\n        action={\n          <React.Fragment>\n            <Button color=\"secondary\" size=\"small\" onClick={handleCloseSnackBar}>\n              Fail\n            </Button>\n            <IconButton\n              size=\"small\"\n              aria-label=\"close\"\n              color=\"inherit\"\n              onClick={handleCloseSnackBar}\n            >\n              <CloseIcon fontSize=\"small\" />\n            </IconButton>\n          </React.Fragment>\n        }\n        />\n\n        {/* <Switch>\n          <Route path=\"/oee\">\n            <OEE />\n          </Route>\n          <Route path=\"/cnc\">\n            <CNC />\n          </Route>\n          <Route path=\"/profit\">\n            <Profit />\n          </Route>\n          <Route exact path=\"/transition\" component={LinearIndeterminate} />\n          <Route exact path=\"/\" component={LaunchMenu} />\n          <Route path=\"/login\" component={SignIn} />\n        </Switch> */}\n\n\n\n                </MsalAuthenticationTemplate>\n            </ErrorBoundary>\n        {/* <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center',\n        }}\n        open={false}\n        autoHideDuration={6000}\n        onClose={handleClose}\n        message={appError.message}\n        action={\n          <React.Fragment>\n            <Button color=\"secondary\" size=\"small\" onClick={handleClose}>\n              Fail\n            </Button>\n            <IconButton\n              size=\"small\"\n              aria-label=\"close\"\n              color=\"inherit\"\n              onClick={handleClose}\n            >\n              <CloseIcon fontSize=\"small\" />\n            </IconButton>\n          </React.Fragment>\n        }\n      /> */}\n\n            {/* <AuthenticatedTemplate>\n                <p>User is signed in!</p>\n            </AuthenticatedTemplate> */}\n            {/* <UnauthenticatedTemplate>\n                <p>No users are signed in!</p>\n            </UnauthenticatedTemplate> */}\n    </MsalProvider>\n  );\n}\n\n/*\n  return (\n    <MsalProvider instance={msalInstance}>\n    <ErrorBoundary>\n    <MsalAuthenticationTemplate interactionType=\"redirect\" loadingComponent={InProgressComponent} errorComponent={ErrorComponent}>\n                    <ProfileContent />\n\n                </MsalAuthenticationTemplate>\n            </ErrorBoundary>\n            <UnauthenticatedTemplate>\n                <p>No users are signed in!</p>\n            </UnauthenticatedTemplate>\n    </MsalProvider>\n  );\n\n*/\n","import { connect } from \"react-redux\";\nimport AuthenticateComponent from \"../components/Authenticate\";\n\nimport * as actions from \"../actions\";\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    // dispatching plain actions\n    SetAccount: (account) => dispatch(actions.SetAccount(account)),\n    SetGraph: (graph) => dispatch(actions.SetGraph(graph)),\n    Push: path => dispatch(actions.Push(path)),\n    Logout: () => dispatch(actions.Logout()),\n    ClearAppError: () => dispatch(actions.ClearAppError()),\n    Submitting: submitting => dispatch(actions.Submitting(submitting))\n  };\n};\n\nfunction mapStateToProps(state) {\n  const { User, router, Global,Msal } = state;\n  return {\n    msalInstance: Msal.msalInstance,\n    isAuthenticated: User.isAuthenticated,\n    isAdmin: User.isAdmin,\n    userName: User.userName,\n    firstName: User.firstName,\n    lastName: User.lastName,\n    pathname: router.location.pathname,\n    search: router.location.search,\n    hash: router.location.hash,\n    submitting: Global.submitting,\n    appSet: Global.appSet,\n    appError: Global.appError,\n    currentApp: Global.currentApp,\n  };\n}\n\nexport const Authenticate = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AuthenticateComponent);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { put, takeEvery } from \"redux-saga/effects\";\nimport { push } from \"connected-react-router\";\nimport * as actions from \"../actions\";\nimport * as types from \"../constants/ActionTypes\";\nimport * as errorType from '../constants/ErrorType'\nimport * as errorSeverity from '../constants/ErrorSeverity'\nimport * as common from '@bgroves/common'; \n// const common = require('@bgroves/common');\nvar g_services;\nvar g_dispatch;\n/*\nexport const handleSignUp = function* handleSignUp({services,dispatch}) {\n  yield takeEvery(types.SIGNUP, (action) => {\n    action.author = params.username\n    await services.service('users')\n      .create({\n        \"email\": \"user4@buschegroup.com\",\n        \"password\": \"JesusLives1!\",\n        \"userName\": \"Brent\",\n        \"isAdmin\": true,\n        \"roles\": [ \"Admin\", \"Manager\", \"Quality\"]\n    }).then(async (res) => {\n      // Logged in\n      //const { user } = await srv.get('authentication');\n    common.log('created user!')\n    //    common.log(res.user.isAdmin);\n    //  common.log(res.user.userName);\n      // Get//  setSAGA(srv,store);\n//  dispatch(setServices(srv));\n*/\n\n\nfunction* handleAuthenticate(action) {\n  common.log(`in handleAuthenticate email=${action.email},password=${action.password}`);\n\n  try {\n    var res = yield g_services.authenticate({\n      strategy: \"local\",\n      email: action.email,\n      password: action.password\n    });\n    common.log(res.user.isAdmin);\n    g_dispatch(actions.SetIsAuthenticated(true));\n    g_dispatch(actions.SetIsAdmin(res.user.isAdmin));\n    g_dispatch(actions.SetUserName(res.user.userName));\n    g_dispatch(actions.SetFirstName(res.user.firstName));\n    g_dispatch(actions.SetLastName(res.user.lastName));\n    g_dispatch(actions.SetEmail(res.user.email));\n    g_dispatch(actions.SetRoles(res.user.roles));\n    if(action.setSubmittingOff){\n      g_dispatch(actions.Submitting(false));\n    }\n    if(action.route){\n      yield put(push(action.route));\n    }\n  } catch (err) {\n        common.log(`err: ${err.message}`);\n    g_dispatch(actions.SetAppError(err.message,errorType.SAGA,errorSeverity.LOW));\n    common.log(err);\n    if(action.setSubmittingOff){\n      g_dispatch(actions.Submitting(false));\n    }\n  }\n}\nfunction* handleLogout(action) {\n  try {\n//    yield put(push(\"/login\"));\n    yield g_services.logout();\n    g_dispatch(actions.SetIsAuthenticated(false));\n  } catch (err) {\n    common.log(err);\n  }\n}\n\n\nexport function* watchAuthenticate() {\n  yield takeEvery(types.AUTHENTICATE_SAGA, handleAuthenticate);\n}\n\nexport function* watchLogout() {\n  yield takeEvery(types.LOGOUT, handleLogout);\n}\n\n\n\nexport function setSAGA(services, dispatch) {\n  g_services = services;\n  g_dispatch = dispatch;\n}\n\n","import { put, takeEvery } from 'redux-saga/effects';\nimport { push } from 'connected-react-router';\nimport * as actions from '../actions';\nimport * as types from '../constants/ActionTypes';\nimport * as errorType from '../constants/ErrorType';\nimport * as errorSeverity from '../constants/ErrorSeverity';\nimport * as common from '@bgroves/common';\n// const common = require('@bgroves/common');\nvar g_services;\nvar g_dispatch;\n\n/* \n This is called from a visualization menu item click\n */\nexport function* handleView200206(action) {\n  common.log('in handleView200206');\n  common.log(\n    `process.env.REACT_APP_FEATHERS_200206_SERVICE:${process.env.REACT_APP_FEATHERS_200206_SERVICE}`,\n  );\n  common.log(\n    `process.env.REACT_APP_FEATHERS_200221_SERVICE:${process.env.REACT_APP_FEATHERS_200221_SERVICE}`,\n  );\n  common.log(\n    `startDate : ${action.startDate}, endDate: ${action.endDate}, limit:${action.limit}, route:${action.route}, setSubmittingOff:${action.setSubmittingOff}`,\n  );\n  try {\n    const srv200206 = process.env.REACT_APP_FEATHERS_200206_SERVICE;\n    const srv200221 = process.env.REACT_APP_FEATHERS_200221_SERVICE;\n    // Creates the table to scroll through but does not return the dataset\n    var res1 = yield g_services.service(srv200206).create({\n      //        tableName: tableName,\n      startDate: action.startDate,\n      endDate: action.endDate,\n    });\n    common.log(`res1: ${res1}`);\n    /*\n    There are 3 services which do the same thing\n    1. sproc200206 calls the MSSQL Kors production database that is updated by Mach2. \n    2. mysql200206 calls the MySQL Kors database using an MySQL connector. \n    3. maria200206 calls the MySQL Kors database using an MariaDb connector. \n    The MySQL Kors database lives in a docker container and is updated from records \n    exported from the MSSQL Kors database.  \n    */\n    g_dispatch(actions.Set200206Sproc(srv200206));\n    g_dispatch(actions.Set200206Table(res1.table)); // set by service\n    g_dispatch(actions.Set200206Total(res1.record_count)); // set by service\n    g_dispatch(actions.Set200206Limit(action.limit)); // set by UI\n    g_dispatch(actions.Set200206Skip(0));\n    // Returns a portion of the table records defined by limit and skip variables\n    var res2 = yield g_services.service(srv200206).find({\n      query: {\n        $table: res1.table,\n        $limit: action.limit,\n        $skip: 0,\n      },\n    });\n    //    common.log(res);\n    g_dispatch(actions.Set200206Data(res2));\n    // creates a table for bar charts.\n    var res3 = yield g_services.service(srv200221).create({\n      //        tableName: tableName,\n      startDate: action.startDate,\n      endDate: action.endDate,\n    });\n    common.log(`res3: ${res3}`);\n    g_dispatch(actions.Set200221Sproc(srv200221));\n    g_dispatch(actions.Set200221Table(res3.table));\n    g_dispatch(actions.Set200221Total(res3.record_count));\n    g_dispatch(actions.Set200221Limit(action.limit));\n    g_dispatch(actions.Set200221Skip(0));\n\n    var res4 = yield g_services.service(srv200221).find({\n      query: {\n        $table: res3.table,\n        $limit: action.limit,\n        $skip: 0, // start with the first record in the table.\n      },\n    });\n    common.log(res4);\n    g_dispatch(actions.Set200221Data(res4)); // set the dataset variable.\n\n    if (action.route) {\n      yield put(push(action.route)); // The UI asked us to change routes after we were done.\n    }\n    if (action.setSubmittingOff) {\n      // Enables buttons in the UI forms and dialogs.\n      g_dispatch(actions.Submitting(false));\n    }\n    //    var error = new Error(\"The error message\");\n  } catch (err) {\n    common.log(err);\n    g_dispatch(\n      actions.SetAppError(err.message, errorType.SAGA, errorSeverity.LOW),\n    );\n  }\n}\n// Not tested.\n// Currently handleView200206 calls the create service.\n// Generator function\nexport function* handleSproc200206Create(action) {\n  common.log('in handleSproc200206Create');\n  common.log(\n    `startDate : ${action.startDate}, endDate: ${action.endDate}, fetch: ${action.fetch}, limit:${action.limit}, route:${action.route}, setSubmittingOff:${action.setSubmittingOff}`,\n  );\n  const srv200206 = process.env.REACT_APP_FEATHERS_200206_SERVICE;\n  try {\n    var res = yield g_services.service(srv200206).create({\n      //        tableName: tableName,\n      startDate: action.startDate,\n      endDate: action.endDate,\n    });\n    common.log(`res: ${res}`);\n    g_dispatch(actions.Set200206Sproc(srv200206));\n    g_dispatch(actions.Set200206Table(res.table));\n    g_dispatch(actions.Set200206Total(res.record_count));\n    g_dispatch(actions.Set200206Limit(action.limit));\n    g_dispatch(actions.Set200206Skip(0));\n\n    if (action.fetch) {\n      g_dispatch(\n        actions.Sproc200206Fetch(\n          srv200206,\n          res.table,\n          action.limit,\n          0,\n          action.route,\n          action.setSubmittingOff,\n        ),\n      );\n    }\n    if (!action.fetch && action.route) {\n      yield put(push(action.route));\n    }\n    if (!action.fetch && action.setSubmittingOff) {\n      g_dispatch(actions.Submitting(false));\n    }\n    //    var error = new Error(\"The error message\");\n  } catch (err) {\n    common.log(err);\n    g_dispatch(\n      actions.SetAppError(err.message, errorType.SAGA, errorSeverity.LOW),\n    );\n  }\n}\n\nexport function* handleSproc200206Fetch(action) {\n  common.log('in handleSproc200206Fetch');\n  common.log(\n    `sproc: ${action.sproc}, limit: ${action.limit},skip: ${action.skip}, table: ${action.table},route: ${action.route},setSubmittingOff:${action.setSubmittingOff} `,\n  );\n  try {\n    var res = yield g_services.service(action.sproc).find({\n      query: {\n        $table: action.table,\n        $limit: action.limit,\n        $skip: action.skip,\n        $sort: {\n          ID: 1,\n        },\n      },\n    });\n    //    common.log(res);\n    g_dispatch(actions.Set200206Data(res));\n    g_dispatch(actions.Set200206Skip(action.skip));\n    if (action.route) {\n      yield put(push(action.route));\n    }\n    if (action.setSubmittingOff) {\n      g_dispatch(actions.Submitting(false));\n    }\n  } catch (err) {\n    common.log(err);\n    g_dispatch(\n      actions.SetAppError(err.message, errorType.SAGA, errorSeverity.LOW),\n    );\n  }\n}\n\nexport function* watchSproc200206Create() {\n  yield takeEvery(types.SPROC200206_CREATE, handleSproc200206Create);\n}\n\nexport function* watchSproc200206Fetch() {\n  yield takeEvery(types.SPROC200206_FETCH, handleSproc200206Fetch);\n}\n\nexport function* watchView200206() {\n  yield takeEvery(types.VIEW_200206, handleView200206);\n}\n\nexport function setSAGA(services, dispatch) {\n  g_services = services;\n  g_dispatch = dispatch;\n}\n","import { put, takeEvery } from 'redux-saga/effects';\nimport { push } from 'connected-react-router';\nimport * as actions from '../actions';\nimport * as types from '../constants/ActionTypes';\nimport * as errorType from '../constants/ErrorType';\nimport * as errorSeverity from '../constants/ErrorSeverity';\nimport * as common from '@bgroves/common';\n// const common = require('@bgroves/common');\nvar g_services;\nvar g_dispatch;\n\n// Not tested.\n// I don't think this is used at the moment.\n// Currently handleView200206 calls this create service.\n// Generator function\nexport function* handleSproc200221Create(action) {\n  common.log('in handleSproc200221Create');\n  common.log(\n    `startDate : ${action.startDate}, endDate: ${action.endDate}, fetch: ${action.fetch}, limit:${action.limit}, route:${action.route}, setSubmittingOff:${action.setSubmittingOff}`,\n  );\n  const srv200221 = process.env.REACT_APP_FEATHERS_200221_SERVICE;\n  try {\n    var res = yield g_services.service(srv200221).create({\n      //        tableName: tableName,\n      startDate: action.startDate,\n      endDate: action.endDate,\n      fetch: action.fetch,\n      limit: action.limit,\n    });\n    common.log(`res: ${res}`);\n    g_dispatch(actions.Set200221Sproc(srv200221));\n    g_dispatch(actions.Set200221Table(res.table));\n    g_dispatch(actions.Set200221Total(res.record_count));\n    g_dispatch(actions.Set200221Limit(action.limit));\n    g_dispatch(actions.Set200221Skip(0));\n    if (action.fetch) {\n      g_dispatch(\n        actions.Sproc200221Fetch(\n          srv200221,\n          res.table,\n          action.limit,\n          0,\n          action.route,\n          action.setSubmittingOff,\n        ),\n      );\n    }\n    if (!action.fetch && action.route) {\n      yield put(push(action.route));\n    }\n    if (!action.fetch && action.setSubmittingOff) {\n      g_dispatch(actions.Submitting(false));\n    }\n    //    var error = new Error(\"The error message\");\n  } catch (err) {\n    common.log(err);\n    g_dispatch(\n      actions.SetAppError(err.message, errorType.SAGA, errorSeverity.LOW),\n    );\n  }\n}\n\nexport function* handleSproc200221Fetch(action) {\n  common.log('in handleSproc200221Fetch');\n  //  const {Sproc} = g_store;\n  common.log(\n    `sproc: ${action.sproc}, limit: ${action.limit},skip: ${action.skip}, table: ${action.table},route: ${action.route},setSubmittingOff:${action.setSubmittingOff} `,\n  );\n  try {\n    var res = yield g_services.service(action.sproc).find({\n      query: {\n        $table: action.table,\n        $limit: action.limit,\n        $skip: action.skip,\n        $sort: {\n          ID: 1,\n        },\n      },\n    });\n    common.log(res);\n    g_dispatch(actions.Set200221Data(res));\n    g_dispatch(actions.Set200221Skip(action.skip));\n    if (action.route) {\n      yield put(push(action.route));\n    }\n    if (action.setSubmittingOff) {\n      g_dispatch(actions.Submitting(false));\n    }\n  } catch (err) {\n    common.log(err);\n    g_dispatch(\n      actions.SetAppError(err.message, errorType.SAGA, errorSeverity.LOW),\n    );\n  }\n}\n\nexport function* watchSproc200221Create() {\n  yield takeEvery(types.SPROC200221_CREATE, handleSproc200221Create);\n}\n\nexport function* watchSproc200221Fetch() {\n  yield takeEvery(types.SPROC200221_FETCH, handleSproc200221Fetch);\n}\n\nexport function setSAGA(services, dispatch) {\n  g_services = services;\n  g_dispatch = dispatch;\n}\n","import { put, takeEvery } from 'redux-saga/effects';\nimport { push } from 'connected-react-router';\nimport * as actions from '../actions';\nimport * as types from '../constants/ActionTypes';\nimport * as errorType from '../constants/ErrorType';\nimport * as errorSeverity from '../constants/ErrorSeverity';\nimport * as common from '@bgroves/common';\n// const common = require('@bgroves/common');\nvar g_services;\nvar g_dispatch;\n\n// Not tested.\n// Currently handleView200206 calls this create service.\n// Generator function\nexport function* handleUpcomingToolChangesCreate(action) {\n  common.log('in handleUpcomingToolChangesCreate');\n  common.log(\n    `startDate : ${action.Building_Key}, fetch: ${action.fetch}, limit:${action.limit}, route:${action.route}, setSubmittingOff:${action.setSubmittingOff}`,\n  );\n  const srvUpcomingToolChanges = process.env.REACT_APP_FEATHERS_UPCOMING_TOOL_CHANGES_SERVICE;\n  const sproc = process.env.REACT_APP_UPCOMING_TOOL_CHANGES_SPROC;\n  try {\n    var res = yield g_services.service(srvUpcomingToolChanges).create({\n      //        tableName: tableName,\n      Building_Key: action.Building_Key\n    });\n    common.log(`res: ${res}`);\n    g_dispatch(actions.SetUpcomingToolChangesSproc(sproc));\n    g_dispatch(actions.SetUpcomingToolChangesTable(res.table));\n    g_dispatch(actions.SetUpcomingToolChangesTotal(res.record_count));\n    g_dispatch(actions.SetUpcomingToolChangesLimit(action.limit));\n    g_dispatch(actions.SetUpcomingToolChangesSkip(0));\n    if (action.fetch) {\n      g_dispatch(\n        actions.UpcomingToolChangesFetch(\n          res.table,\n          action.limit,\n          0,\n          action.route,\n          action.setSubmittingOff,\n        ),\n      );\n    }\n    if (!action.fetch && action.route) {\n      yield put(push(action.route));\n    }\n    if (!action.fetch && action.setSubmittingOff) {\n      g_dispatch(actions.Submitting(false));\n    }\n    //    var error = new Error(\"The error message\");\n  } catch (err) {\n    common.log(err);\n    g_dispatch(\n      actions.SetAppError(err.message, errorType.SAGA, errorSeverity.LOW),\n    );\n  }\n}\n\nexport function* handleUpcomingToolChangesFetch(action) {\n  common.log('in handleUpcomingToolChangesFetch');\n  //  const {Sproc} = g_store;\n  common.log(\n    `table: ${action.table}, limit: ${action.limit},skip: ${action.skip}, route: ${action.route},setSubmittingOff:${action.setSubmittingOff} `,\n  );\n  const srvUpcomingToolChanges = process.env.REACT_APP_FEATHERS_UPCOMING_TOOL_CHANGES_SERVICE;\n\n  try {\n    var res = yield g_services.service(srvUpcomingToolChanges).find({\n      query: {\n        $table: action.table,\n        $limit: action.limit,\n        $skip: action.skip,\n        $sort: {\n          ID: 1,\n        },\n      },\n    });\n    common.log(res);\n    g_dispatch(actions.SetUpcomingToolChangesData(res));\n    g_dispatch(actions.SetUpcomingToolChangesSkip(action.skip));\n    if (action.route) {\n      yield put(push(action.route));\n    }\n    if (action.setSubmittingOff) {\n      g_dispatch(actions.Submitting(false));\n    }\n  } catch (err) {\n    common.log(err);\n    g_dispatch(\n      actions.SetAppError(err.message, errorType.SAGA, errorSeverity.LOW),\n    );\n  }\n}\n\nexport function* watchUpcomingToolChangesCreate() {\n  yield takeEvery(types.UPCOMING_TOOL_CHANGES_CREATE, handleUpcomingToolChangesCreate);\n}\n\nexport function* watchUpcomingToolChangesFetch() {\n  yield takeEvery(types.UPCOMING_TOOL_CHANGES_FETCH, handleUpcomingToolChangesFetch);\n}\n\nexport function setSAGA(services, dispatch) {\n  g_services = services;\n  g_dispatch = dispatch;\n}\n","import { put, takeEvery } from 'redux-saga/effects';\nimport { push } from 'connected-react-router';\nimport * as actions from '../actions';\nimport * as types from '../constants/ActionTypes';\nimport * as errorType from '../constants/ErrorType';\nimport * as errorSeverity from '../constants/ErrorSeverity';\nimport * as common from '@bgroves/common';\n// const common = require('@bgroves/common');\nvar g_services;\nvar g_dispatch;\n\n// Not tested.\n// Currently handleView200206 calls this create service.\n// Generator function\nexport function* handleCreateToolChangeSummary(action) {\n  common.log('in handleCreateToolChangeSummary');\n  common.log(\n    `startDate : ${action.startDate},endDate: ${action.endDate} fetch: ${action.fetch}, limit:${action.limit}, route:${action.route}, setSubmittingOff:${action.setSubmittingOff}`,\n  );\n  const srvToolChangeSummary = process.env.REACT_APP_FEATHERS_TOOL_CHANGE_SUMMARY_SERVICE;\n  const sproc = process.env.REACT_APP_CREATE_TOOL_CHANGE_SUMMARY_SPROC;\n  try {\n    var res = yield g_services.service(srvToolChangeSummary).create({\n      //        tableName: tableName,\n      startDate: action.startDate,\n      endDate: action.endDate\n    });\n    common.log(`res: ${res}`);\n    g_dispatch(actions.SetToolChangeSummaryStartDate(action.startDate))\n    g_dispatch(actions.SetToolChangeSummaryEndDate(action.endDate))\n    g_dispatch(actions.SetToolChangeSummarySproc(sproc));\n    g_dispatch(actions.SetToolChangeSummaryTable(res.table));\n    g_dispatch(actions.SetToolChangeSummaryTotal(res.record_count));\n    g_dispatch(actions.SetToolChangeSummaryLimit(action.limit));\n    g_dispatch(actions.SetToolChangeSummarySkip(0));\n    if (action.fetch) {\n      g_dispatch(\n        actions.FetchToolChangeSummary(\n          res.table,\n          action.limit,\n          0,\n          action.route,\n          action.setSubmittingOff\n        ),\n      );\n    }\n    if (!action.fetch && action.route) {\n      yield put(push(action.route));\n    }\n    if (!action.fetch && action.setSubmittingOff) {\n      g_dispatch(actions.Submitting(false));\n    }\n    //    var error = new Error(\"The error message\");\n  } catch (err) {\n    common.log(err);\n    g_dispatch(\n      actions.SetAppError(err.message, errorType.SAGA, errorSeverity.LOW),\n    );\n  }\n}\n\nexport function* handleFetchToolChangeSummary(action) {\n  common.log('in handleFetchToolChangeSummary');\n  //  const {Sproc} = g_store;\n  common.log(\n    `table: ${action.table}, limit: ${action.limit},skip: ${action.skip}, route: ${action.route},setSubmittingOff:${action.setSubmittingOff} `,\n  );\n  const srvToolChangeSummary = process.env.REACT_APP_FEATHERS_TOOL_CHANGE_SUMMARY_SERVICE;\n\n  try {\n    var res = yield g_services.service(srvToolChangeSummary).find({\n      query: {\n        $table: action.table,\n        $limit: action.limit,\n        $skip: action.skip,\n        $sort: {\n          ID: 1,\n        },\n      },\n    });\n    common.log(res);\n    g_dispatch(actions.SetToolChangeSummaryData(res));\n    g_dispatch(actions.SetToolChangeSummarySkip(action.skip));\n    if (action.route) {\n      yield put(push(action.route));\n    }\n    if (action.setSubmittingOff) {\n      g_dispatch(actions.Submitting(false));\n    }\n  } catch (err) {\n    common.log(err);\n    g_dispatch(\n      actions.SetAppError(err.message, errorType.SAGA, errorSeverity.LOW),\n    );\n  }\n}\n\nexport function* watchCreateToolChangeSummary() {\n  yield takeEvery(types.CREATE_TOOL_CHANGE_SUMMARY, handleCreateToolChangeSummary);\n}\n\nexport function* watchFetchToolChangeSummary() {\n  yield takeEvery(types.FETCH_TOOL_CHANGE_SUMMARY, handleFetchToolChangeSummary);\n}\n\nexport function setSAGA(services, dispatch) {\n  g_services = services;\n  g_dispatch = dispatch;\n}\n","import { put, takeEvery } from 'redux-saga/effects';\nimport { push } from 'connected-react-router';\nimport * as actions from '../actions';\nimport * as types from '../constants/ActionTypes';\nimport * as errorType from '../constants/ErrorType';\nimport * as errorSeverity from '../constants/ErrorSeverity';\nimport * as common from '@bgroves/common';\n// const common = require('@bgroves/common');\nvar g_services;\nvar g_dispatch;\n\nexport function* handleKep13319Fetch(action) {\n  common.log('in handleKep13319Fetch');\n  common.log(\n    `route: ${action.route},setSubmittingOff:${action.setSubmittingOff} `,\n  );\n  try {\n    var nodes = yield g_services.service('kep13319').find({\n      query: {\n        $sort: {\n          ID: 1,\n        },\n      },\n    });\n    //    common.log(res);\n    g_dispatch(actions.SetNodes(nodes));\n    if (action.route) {\n      yield put(push(action.route));\n    }\n    if (action.setSubmittingOff) {\n      g_dispatch(actions.Submitting(false));\n    }\n  } catch (err) {\n    common.log(err);\n    g_dispatch(\n      actions.SetAppError(err.message, errorType.SAGA, errorSeverity.LOW),\n    );\n  }\n}\n\nexport function* watchKep13319Fetch() {\n  yield takeEvery(types.KEP13319_FETCH, handleKep13319Fetch);\n}\n\nexport function setSAGA(services, dispatch) {\n  g_services = services;\n  g_dispatch = dispatch;\n}\n","import { put, takeEvery } from 'redux-saga/effects';\nimport { push } from 'connected-react-router';\nimport * as actions from '../actions';\nimport * as types from '../constants/ActionTypes';\nimport * as errorType from '../constants/ErrorType';\nimport * as errorSeverity from '../constants/ErrorSeverity';\nimport * as common from '@bgroves/common';\n\nvar g_services;\nvar g_dispatch;\n\nexport function* handleCompareContainerFetch(action) {\n  common.log('in handleCompareContainerFetch');\n   common.log(\n      `startDate:${action.startDate},endDate:${action.endDate},limit: ${action.limit},skip: ${action.skip}, route: ${action.route},setSubmittingOff:${action.setSubmittingOff} `,\n    );\n    try {\n      var res = yield g_services.service('CompareContainer').find({\n        query: {\n          $startDate: action.startDate,\n          $endDate: action.endDate,\n          $limit: action.limit,\n          $skip: action.skip,\n          $sort: {\n            ID: 1,\n          },\n        },\n      });\n      //    common.log(res);\n      g_dispatch(actions.SetCompareContainerTotal(res.record_count));\n      g_dispatch(actions.SetCompareContainerLimit(action.limit));\n      g_dispatch(actions.SetCompareContainerSkip(action.skip));\n      g_dispatch(actions.SetCompareContainerData(res.data));\n      if (action.route) {\n        yield put(push(action.route));\n      }\n      if (action.setSubmittingOff) {\n        g_dispatch(actions.Submitting(false));\n      }\n    } catch (err) {\n      common.log(err);\n      g_dispatch(\n        actions.SetAppError(err.message, errorType.SAGA, errorSeverity.LOW),\n      );\n    }\n  }\nexport function* watchCompareContainerFetch() {\n  yield takeEvery(types.COMPARE_CONTAINER_FETCH, handleCompareContainerFetch);\n}\n\nexport function setSAGA(services, dispatch) {\n  g_services = services;\n  g_dispatch = dispatch;\n}\n","import { put, takeEvery } from 'redux-saga/effects';\nimport { push } from 'connected-react-router';\nimport * as actions from '../actions';\nimport * as types from '../constants/ActionTypes';\nimport * as errorType from '../constants/ErrorType';\nimport * as errorSeverity from '../constants/ErrorSeverity';\nimport * as common from '@bgroves/common';\n\nvar g_services;\nvar g_dispatch;\n\nexport function* handlePartProdRateFetch(action) {\n  common.log('in handlePartProdRateFetch');\n   common.log(\n      `startPeriod:${action.startPeriod},endPeriod:${action.endPeriod},limit: ${action.limit},skip: ${action.skip}, route: ${action.route},setSubmittingOff:${action.setSubmittingOff} `,\n    );\n    try {\n      var res = yield g_services.service('part-prod-rate').find({\n        query: {\n          $startPeriod: action.startPeriod,\n          $endPeriod: action.endPeriod,\n          $limit: action.limit,\n          $skip: action.skip,\n          $sort: {\n            ID: 1,\n          },\n        },\n      });\n      //    common.log(res);\n      g_dispatch(actions.SetPartProdRateTotal(res.record_count));\n      g_dispatch(actions.SetPartProdRateLimit(action.limit));\n      g_dispatch(actions.SetPartProdRateSkip(action.skip));\n      g_dispatch(actions.SetPartProdRateData(res.data));\n      if (action.route) {\n        yield put(push(action.route));\n      }\n      if (action.setSubmittingOff) {\n        g_dispatch(actions.Submitting(false));\n      }\n    } catch (err) {\n      common.log(err);\n      g_dispatch(\n        actions.SetAppError(err.message, errorType.SAGA, errorSeverity.LOW),\n      );\n    }\n  }\nexport function* watchPartProdRateFetch() {\n  yield takeEvery(types.PART_PROD_RATE_FETCH, handlePartProdRateFetch);\n}\n\nexport function setSAGA(services, dispatch) {\n  g_services = services;\n  g_dispatch = dispatch;\n}\n","import { put, takeEvery, all } from 'redux-saga/effects';\nimport * as types from '../constants/ActionTypes';\nimport { push } from 'connected-react-router';\nimport * as users from './Users';\nimport * as sproc200206 from './Sproc200206';\nimport * as sproc200221 from './Sproc200221';\nimport * as upcomingToolChanges from './UpcomingToolChanges';\nimport * as toolChangeSummary from './ToolChangeSummary';\nimport * as kep13319 from './Kep13319';\nimport * as compareContainer from './CompareContainer';\nimport * as partProdRate from './PartProdRate';\nimport * as common from '@bgroves/common';\n\n//var g_services;\n//var g_dispatch;\n\n// will not work?\n/*  put(push(action.route)) Works when called from handleView200206 and others\n    unsure if it works when called from UI menu item click via an action dispatch.\n*/\nfunction* handlePush(action) {\n  common.log(`in handlePush() = ${action.path}`);\n  yield put(push(action.path));\n  //  yield put(push(\"/login\"));\n}\n\nfunction* watchPush() {\n  yield takeEvery(types.PUSH, handlePush);\n}\n\n// notice how we now only export the rootSaga\n// single entry point to start all Sagas at once\nexport default function* rootSaga() {\n  yield all([\n    //    handleKep13318(),\n    //    handleSignUp(),\n    watchPush(),\n    users.watchAuthenticate(),\n    users.watchLogout(),\n    sproc200206.watchView200206(),\n    sproc200206.watchSproc200206Create(),\n    sproc200206.watchSproc200206Fetch(),\n    sproc200221.watchSproc200221Create(),\n    sproc200221.watchSproc200221Fetch(),\n    upcomingToolChanges.watchUpcomingToolChangesCreate(),\n    upcomingToolChanges.watchUpcomingToolChangesFetch(),\n    toolChangeSummary.watchCreateToolChangeSummary(),\n    toolChangeSummary.watchFetchToolChangeSummary(),\n    kep13319.watchKep13319Fetch(),\n    compareContainer.watchCompareContainerFetch(),\n    partProdRate.watchPartProdRateFetch()\n    //    handleReAuthenticate()\n  ]);\n}\n\nexport function setSAGA(services, dispatch) {\n  //  g_services = services;\n  //  g_dispatch = dispatch;\n  users.setSAGA(services, dispatch);\n  sproc200206.setSAGA(services, dispatch);\n  sproc200221.setSAGA(services, dispatch);\n  kep13319.setSAGA(services, dispatch);\n  compareContainer.setSAGA(services, dispatch);\n  partProdRate.setSAGA(services, dispatch);\n  upcomingToolChanges.setSAGA(services,dispatch);\n  toolChangeSummary.setSAGA(services,dispatch);\n}\n/*\nconst delay = (ms) => new Promise(res => setTimeout(res, ms))\n\nfunction* incrementAsync() {\n  yield delay(1000)\n  yield put({ type: 'INCREMENT' })\n}\n\nfunction* watchIncrementAsync() {\n  yield takeEvery('INCREMENT_ASYNC', incrementAsync)\n}\n\n// notice how we now only export the rootSaga\n// single entry point to start all Sagas at once\nexport default function* rootSaga() {\n  yield all([\n    helloSaga(),\n    watchIncrementAsync()\n  ])\n}\n\n*/\n\n/*\nKep13318Service.on('created', message => {\n  common.log('Received a Kep13318 message', message);\n  dispatch(messageReceived(message.text, 'Kep13313'));\n\n});\n\nsrv.service('Kep13318').create({\ntext: \"test\",\n}).catch((e) => {\n// Show login page (potentially with `e.message`)\nupdateUserName('logged out')\n\nalert('Authentication error');\n});\n*/\n","import * as actions from '../actions';\nimport { setSAGA } from '../sagas';\nimport * as common from '@bgroves/common';\n\n\nconst feathers = require('@feathersjs/feathers');\nconst socketio = require('@feathersjs/socketio-client');\nconst io = require('socket.io-client');\nconst auth = require('@feathersjs/authentication-client');\n\n\n// seting dispatch as a global variable works, but setting\n// store as a global variable in Saga messes up the generator functions\nconst setupServices = async (dispatch) => {\n\n  common.log(\n    `In settupServices: ${process.env.REACT_APP_FEATHERS_HOSTNAME}:${process.env.REACT_APP_FEATHERS_PORT}:${process.env.REACT_APP_FEATHERS_200206_SERVICE}`,\n  );\n  \n  /*\n  Mixed Content: The page at '<URL>' was loaded over HTTPS, but requested an insecure XMLHttpRequest endpoint '<URL>'. \n  This request has been blocked; the content must be served over HTTPS.\n  */\n const connectionString = `https://moto`;\n// const connectionString = `https://motorest`;  invalid cert name\n// postman can connect with http://motorest but not http://moto\n// Error: unable to verify the first certificate\n\n// const connectionString = `https://motorest:${process.env.REACT_APP_FEATHERS_PORT}`;\n// const connectionString = `http://${process.env.REACT_APP_FEATHERS_HOSTNAME}:${process.env.REACT_APP_FEATHERS_PORT}`;\n  common.log(`connectionString: ${connectionString}`);\n  const socket = io(connectionString);\n\n  //  const socket = io('http://10.1.0.100:3030');\n  const srv = feathers();\n\n  // Setup the transport (Rest, Socket, etc.) here\n  srv.configure(socketio(socket));\n\n  // Available options are listed in the \"Options\" section\n  srv.configure(\n    auth({\n      storageKey: 'auth',\n    }),\n  );\n\n  // seting dispatch as a global variable works, but setting\n  // store as a global variable messes up the generator functions\n  setSAGA(srv, dispatch);\n  common.log('connecting to Kep13319');\n  // This did not seem to work?  I did not see any log message from the\n  // SAGA handler; so I called the service directly.\n  // dispatch(actions.Kep13319Fetch('',false));\n  await srv\n    .service('kep13319')\n    .find({\n      query: {\n        $sort: {\n          ID: 1,\n        },\n      },\n    })\n    .then((nodes) => {\n      common.log('Done with Kep13319.find()');\n      //const obj = JSON.parse(nodes[0].toString()); // payload is a buffer\n      let msg = JSON.stringify(nodes[0]);\n      //const obj = JSON.parse(msg); // payload is a buffer\n      common.log(`Kep.Find()=>${msg}`);\n\n      dispatch(actions.SetNodes(nodes));\n    })\n    .catch((e) => {\n      // Show login page (potentially with `e.message`)\n      console.error('Kep13319.find() error', e);\n    });\n\n/*\n  await srv\n    .reAuthenticate()\n    .then((res) => {\n      common.log('In reAuthenticate');\n      common.log(res.user);\n      dispatch(actions.SetIsAuthenticated(true));\n      dispatch(actions.SetIsAdmin(res.user.isAdmin));\n      dispatch(actions.SetUserName(res.user.userName));\n      dispatch(actions.SetFirstName(res.user.firstName));\n      dispatch(actions.SetLastName(res.user.lastName));\n      dispatch(actions.SetEmail(res.user.email));\n      dispatch(actions.SetRoles(res.user.roles));\n      */\n      /* \n      If you want to base the set on user.roles\n      instead of hardcoding into .env file. If\n      not then Global.set gets initialized in the\n      reducer.\n      let set;\n      switch (res.user.roles[0]) {\n        case 'Admin':\n          set = appSet.BPG;\n          break;\n        case 'Manager':\n          set = appSet.BPG;\n          break;\n        case 'Quality':\n          set = appSet.BPG;\n          break;\n        case 'Home':\n          set = appSet.HOME;\n          break;\n        default:\n          set = appSet.BPG;\n      }\n      dispatch(actions.SetAppSet(set));\n      */\n/*\n    })\n    .catch((e) => {\n      // Show login page (potentially with `e.message`)\n      console.error('reAuthenticate error', e);\n    });\n    */\n/*\n  await srv\n    .service('kep13319')\n    .find({\n      query: {\n        $sort: {\n          ID: 1,\n        },\n      },\n    })\n    .then((nodes) => {\n      common.log('Done with Kep13319.find()');\n      //const obj = JSON.parse(nodes[0].toString()); // payload is a buffer\n      let msg = JSON.stringify(nodes[0]);\n      //const obj = JSON.parse(msg); // payload is a buffer\n      common.log(`Kep.Find()=>${msg}`);\n\n      dispatch(actions.SetNodes(nodes));\n    })\n    .catch((e) => {\n      // Show login page (potentially with `e.message`)\n      console.error('Kep13319.find() error', e);\n    });\n\n*/\n    // Test New services\n    /*\n    await srv\n      .service('tool-change-summary')\n      .find({\n        query: {\n          $table: 'rpt0909',\n          $limit: 10,\n          $skip: 0,\n          $sort: {\n            ID: 1,\n          },\n        },\n      })\n      .then((res) => {\n        common.log(`TEST tool-change-summary ${JSON.stringify(res)}`);\n        dispatch(actions.SetToolChangeSummaryStartDate('2020-09-05 00:00:00'));\n        dispatch(actions.SetToolChangeSummaryEndDate('2020-09-08 23:59:59'));\n        dispatch(actions.SetToolChangeSummarySproc('CreateToolChangeSummary'));\n        dispatch(actions.SetToolChangeSummaryTable('rpt0909'));\n        dispatch(actions.SetToolChangeSummaryTotal(12));\n        dispatch(actions.SetToolChangeSummaryLimit(10));\n        dispatch(actions.SetToolChangeSummarySkip(0));\n        dispatch(actions.SetToolChangeSummaryData(res));\n      })\n      .catch((e) => {\n        // Show login page (potentially with `e.message`)\n        console.error('tool-change-summary.find() error', e);\n      });\n  */\n  const kep13319 = srv.service('kep13319');\n  kep13319.on('updated', (message, context) => {\n    common.log('Kep13319.update=>', message);\n    dispatch(actions.UpdateNode(message.updateId, message.value, message.transDate));\n    //  console.common.log(`context=>${context}`);\n  });\n\n  return srv;\n};\n\nexport default setupServices;\n\n/*\nmwhelpley@buschegroup.com/cwAEKkNa%0V3\nkyoung@buschegroup.com/1XdFJlJ!wMDe\ncchaudry@buschegroup.com/!@TIS$iYURtxsrv\n\n\"email\": \"mwhelpley@buschegroup.com\",\n\"password\": \"cwAEKkNa%0V3\",\n\"userName\": \"mwhelpley\",\n\"firstName\": \"Mike\",\n\"lastName\": \"Whelpley\",\n\"isAdmin\": true,\n\"roles\": [ \"Admin\", \"Manager\", \"Quality\"]\n\"email\": \"bgroves@buschegroup.com\",\n\"password\": \"JesusLives1!\",\n\"userName\": \"bgroves\",\n\"firstName\": \"Brent\",\n\"lastName\": \"Groves\",\n\"isAdmin\": true,\n\"roles\": [ \"Admin\", \"Manager\", \"Quality\"]\n\"email\": \"kyoung@buschegroup.com\",\n\"password\": \"1XdFJlJ!wMDe\",\n\"userName\": \"kyoung\",\n\"firstName\": \"Kevin\",\n\"lastName\": \"Young\",\n\"isAdmin\": true,\n\"roles\": [ \"Admin\", \"Manager\", \"Quality\"]\n\"email\": \"cchaudry@buschegroup.com\",\n\"password\": \"!@TIS$iYURtx\",\n\"userName\": \"cchaudry\",\n\"firstName\": \"Casey\",\n\"lastName\": \"Chaudry\",\n\"isAdmin\": true,\n\"roles\": [ \"Admin\", \"Manager\", \"Quality\"]\n\n*/\n/*\n  await srv.service('users')\n    .create({\n      \"email\": \"ccrandall@buschegroup.com\",\n      \"password\": \"cpo@NSmD4l1x\",\n      \"userName\": \"ccrandall\",\n      \"firstName\": \"Charles\",\n      \"lastName\": \"Crandall\",\n      \"isAdmin\": true,\n      \"roles\": [ \"Admin\", \"Manager\", \"Quality\"]\n\n\n  }).then(async (res) => {\n    // Logged in\n    //const { user } = await srv.get('authentication');\ncommon.log('created user!')\n//    common.log(res.user.isAdmin);\n  //  consollocalhoste.common.log(res.user.userName);\n    // Gets the authenticated accessToken (JWT)\n    //const { accessToken } = await app.get('authentication');\n  //  dispatch(addUserName(res.user.userName))\n  //  dispatch(isAdmin(true));\n  //  dispatch(isAuthenticated(true));\n  }).catch(e => {\n    // Show login page (potentially with `e.message`)\n    console.error('Authentication error', e);\n  });\n*/\n/*\nawait srv.authenticate({\n\"strategy\": \"local\",\n\"email\": \"user4@buschegroup.com\",\n\"password\": \"JesusLives1!\"\n}).then(async (res) => {\n  // Logged in\n  //const { user } = await srv.get('authentication');\n\n  common.log(res.user.isAdmin);\n  common.log(res.user.userName);\n  // Gets the authenticated accessToken (JWT)\n  //const { accessToken } = await app.get('authentication');\n//  dispatch(addUserName(res.user.userName))\n  dispatch(isAdmin(res.user.isAdmin));\n  dispatch(updateFirstName(res.user.userName))\n  dispatch(isAuthenticated(true));\n  dispatch(setServices(srv));\n}).catch(e => {localhost\n  // Show login page (potentially with `e.message`)\n  console.error('Authentication error', e);\n});\n*/\n\n//await srv.logout().then(dispatch(isAuthenticated(false)));\n// dispatch(isAdmin(true));\n//dispatch(addApp(srv));\n","import * as appSet from '../constants/AppSet';\n\n\nimport bpg from './bpg'\nimport home from './home'\n\n// seting dispatch as a global variable works, but setting\n// store as a global variable in Saga messes up the generator functions\nconst setupServices = async (dispatch) => {\n  let srv;\n  if(appSet.BPG===process.env.REACT_APP_SET){\n    srv = await bpg(dispatch);\n  }\n  if(appSet.HOME===process.env.REACT_APP_SET){\n    srv = await home(dispatch);\n  }\n\n  return srv;\n};\n\nexport default setupServices;\n\n","import * as actions from '../actions';\nimport { setSAGA } from '../sagas';\nimport * as common from '@bgroves/common';\nimport * as appSet from '../constants/AppSet';\nconst feathers = require('@feathersjs/feathers');\nconst socketio = require('@feathersjs/socketio-client');\nconst io = require('socket.io-client');\nconst auth = require('@feathersjs/authentication-client');\n\n//THIS IS ONLY A TEMPLATE TAKEN FROM BPG SERVICES SETUP.\n// seting dispatch as a global variable works, but setting\n// store as a global variable in Saga messes up the generator functions\nconst setupServices = async (dispatch) => {\n\n\n  common.log(\n    `In settupServices: ${process.env.REACT_APP_FEATHERS_HOSTNAME}:${process.env.REACT_APP_FEATHERS_PORT}:${process.env.REACT_APP_FEATHERS_200206_SERVICE}`,\n  );\n\n  const connectionString = `http://${process.env.REACT_APP_FEATHERS_HOSTNAME}:${process.env.REACT_APP_FEATHERS_PORT}`;\n  common.log(`connectionString: ${connectionString}`);\n  const socket = io(connectionString);\n\n  //  const socket = io('http://10.1.0.100:3030');\n  const srv = feathers();\n\n  // Setup the transport (Rest, Socket, etc.) here\n  srv.configure(socketio(socket));\n\n  // Available options are listed in the \"Options\" section\n  srv.configure(\n    auth({\n      storageKey: 'auth',\n    }),\n  );\n\n  // seting dispatch as a global variable works, but setting\n  // store as a global variable messes up the generator functions\n  setSAGA(srv, dispatch);\n  common.log('connecting to Kep13318');\n  // This did not seem to work?  I did not see any log message from the\n  // SAGA handler; so I called the service directly.\n  // dispatch(actions.Kep13319Fetch('',false));\n  await srv\n    .service('kep13319')\n    .find({\n      query: {\n        $sort: {\n          ID: 1,\n        },\n      },\n    })\n    .then((nodes) => {\n      common.log('Done with Kep13319.find()');\n      let msgString = JSON.stringify(nodes[0]);\n      const obj = JSON.parse(msgString.toString()); // payload is a buffer\n      common.log(obj);\n\n      dispatch(actions.SetNodes(nodes));\n    })\n    .catch((e) => {\n      // Show login page (potentially with `e.message`)\n      console.error('Kep13319.find() error', e);\n    });\n\n  common.log('Before reAuthenticate');\n  await srv\n    .reAuthenticate()\n    .then((res) => {\n      common.log('In reAuthenticate');\n      common.log(res.user);\n      dispatch(actions.SetIsAuthenticated(true));\n      dispatch(actions.SetIsAdmin(res.user.isAdmin));\n      dispatch(actions.SetUserName(res.user.userName));\n      dispatch(actions.SetFirstName(res.user.firstName));\n      dispatch(actions.SetLastName(res.user.lastName));\n      dispatch(actions.SetEmail(res.user.email));\n      dispatch(actions.SetRoles(res.user.roles));\n      let set;\n      switch (res.user.roles[0]) {\n        case 'Admin':\n          set = appSet.BPG;\n          break;\n        case 'Manager':\n          set = appSet.BPG;\n          break;\n        case 'Quality':\n          set = appSet.BPG;\n          break;\n        case 'Home':\n          set = appSet.HOME;\n          break;\n        default:\n          set = appSet.BPG;\n      }\n      dispatch(actions.SetAppSet(set));\n    })\n    .catch((e) => {\n      // Show login page (potentially with `e.message`)\n      console.error('reAuthenticate error', e);\n    });\n\n  const kep13319 = srv.service('kep13319');\n  kep13319.on('updated', (message, context) => {\n    common.log('updated', message);\n    dispatch(actions.UpdateNode(message.updateId, message.value));\n    //  console.common.log(`context=>${context}`);\n  });\n\n  return srv;\n};\n\nexport default setupServices;\n\n/*\nmwhelpley@buschegroup.com/cwAEKkNa%0V3\nkyoung@buschegroup.com/1XdFJlJ!wMDe\ncchaudry@buschegroup.com/!@TIS$iYURtxsrv\n\n\"email\": \"mwhelpley@buschegroup.com\",\n\"password\": \"cwAEKkNa%0V3\",\n\"userName\": \"mwhelpley\",\n\"firstName\": \"Mike\",\n\"lastName\": \"Whelpley\",\n\"isAdmin\": true,\n\"roles\": [ \"Admin\", \"Manager\", \"Quality\"]\n\"email\": \"bgroves@buschegroup.com\",\n\"password\": \"JesusLives1!\",\n\"userName\": \"bgroves\",\n\"firstName\": \"Brent\",\n\"lastName\": \"Groves\",\n\"isAdmin\": true,\n\"roles\": [ \"Admin\", \"Manager\", \"Quality\"]\n\"email\": \"kyoung@buschegroup.com\",\n\"password\": \"1XdFJlJ!wMDe\",\n\"userName\": \"kyoung\",\n\"firstName\": \"Kevin\",\n\"lastName\": \"Young\",\n\"isAdmin\": true,\n\"roles\": [ \"Admin\", \"Manager\", \"Quality\"]\n\"email\": \"cchaudry@buschegroup.com\",\n\"password\": \"!@TIS$iYURtx\",\n\"userName\": \"cchaudry\",\n\"firstName\": \"Casey\",\n\"lastName\": \"Chaudry\",\n\"isAdmin\": true,\n\"roles\": [ \"Admin\", \"Manager\", \"Quality\"]\n\n*/\n/*\n  await srv.service('users')\n    .create({\n      \"email\": \"ccrandall@buschegroup.com\",\n      \"password\": \"cpo@NSmD4l1x\",\n      \"userName\": \"ccrandall\",\n      \"firstName\": \"Charles\",\n      \"lastName\": \"Crandall\",\n      \"isAdmin\": true,\n      \"roles\": [ \"Admin\", \"Manager\", \"Quality\"]\n\n\n  }).then(async (res) => {\n    // Logged in\n    //const { user } = await srv.get('authentication');\ncommon.log('created user!')\n//    common.log(res.user.isAdmin);\n  //  consollocalhoste.common.log(res.user.userName);\n    // Gets the authenticated accessToken (JWT)\n    //const { accessToken } = await app.get('authentication');\n  //  dispatch(addUserName(res.user.userName))\n  //  dispatch(isAdmin(true));\n  //  dispatch(isAuthenticated(true));\n  }).catch(e => {\n    // Show login page (potentially with `e.message`)\n    console.error('Authentication error', e);\n  });\n*/\n/*\nawait srv.authenticate({\n\"strategy\": \"local\",\n\"email\": \"user4@buschegroup.com\",\n\"password\": \"JesusLives1!\"\n}).then(async (res) => {\n  // Logged in\n  //const { user } = await srv.get('authentication');\n\n  common.log(res.user.isAdmin);\n  common.log(res.user.userName);\n  // Gets the authenticated accessToken (JWT)\n  //const { accessToken } = await app.get('authentication');\n//  dispatch(addUserName(res.user.userName))\n  dispatch(isAdmin(res.user.isAdmin));\n  dispatch(updateFirstName(res.user.userName))\n  dispatch(isAuthenticated(true));\n  dispatch(setServices(srv));\n}).catch(e => {localhost\n  // Show login page (potentially with `e.message`)\n  console.error('Authentication error', e);\n});\n*/\n\n//await srv.logout().then(dispatch(isAuthenticated(false)));\n// dispatch(isAdmin(true));\n//dispatch(addApp(srv));\n","import reducers from './reducers';\nimport createSagaMiddleware from 'redux-saga';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { createBrowserHistory } from 'history';\nimport { createStore, applyMiddleware } from 'redux';\nimport { routerMiddleware } from 'connected-react-router';\nimport rootSaga from './sagas';\n\nexport const history = createBrowserHistory();\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = (process.env.NODE_ENV === 'production') ? \ncreateStore(\n    reducers(history), // root reducer with router state\n    applyMiddleware(\n      routerMiddleware(history), // for dispatching history actions\n      sagaMiddleware,\n    ),\n  )\n  :\n  createStore(\n    reducers(history), // root reducer with router state\n    composeWithDevTools(\n      applyMiddleware(\n        routerMiddleware(history), // for dispatching history actions\n        sagaMiddleware,\n      ),\n    ),\n  );  \n\nsagaMiddleware.run(rootSaga);\n\nexport default store","import React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport { MsalProvider, AuthenticatedTemplate, UnauthenticatedTemplate, useMsal, useAccount,useIsAuthenticated } from \"@azure/msal-react\";\nimport { PublicClientApplication } from \"@azure/msal-browser\";\nimport { msalConfig, loginRequest } from \"./config/authConfig\";\nimport { ProfileData, callMsGraph } from \"./graph.jsx\";\n\nimport Button from '@material-ui/core/Button';\n\nimport { Provider } from 'react-redux';\nimport reducers from './reducers';\n\nimport { createBrowserHistory } from 'history';\nimport { createStore, applyMiddleware } from 'redux';\nimport { routerMiddleware } from 'connected-react-router';\nimport createSagaMiddleware from 'redux-saga';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport './index.css';\n// import App  from './components/App.jsx';\nimport { Authenticate } from './containers/Authenticate';\nimport * as serviceWorker from './serviceWorker';\nimport rootSaga from './sagas';\nimport setupServices from './services';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { disableReactDevTools } from '@fvilers/disable-react-devtools';\nimport store,{history} from './store'\nimport { SignIn } from './containers/SignIn';\n\n// export const history = createBrowserHistory();\n\n/*\nconst ProfileContent = () => {\n  const { instance, accounts } = useMsal();\n  const account = useAccount(accounts[0] || {});\n  const [graphData, setGraphData] = useState(null);\n\n  function RequestProfileData() {\n      instance.acquireTokenSilent({\n          ...loginRequest,\n          account: account\n      }).then((response) => {\n          callMsGraph(response.accessToken).then(response => setGraphData(response));\n      });\n  }\n\n  return (\n      <>\n          <h5 >Welcome {account && account.name}</h5>\n          {graphData ? \n              <ProfileData graphData={graphData} />\n              :\n              <Button onClick={RequestProfileData}>Request Profile Information</Button>\n          }\n      </>\n  );\n};\n*/\n/*\nconst MainContent = () => {    \n  const { instance } = useMsal();\n  const isAuthenticatedAAD = useIsAuthenticated();\n  useEffect(() => {\n\n    // This won't work!!!\n    // It will cycle from microsoft login page to \n    // render with isAuthenticatedAAD == true\n    // then isAuthenticatedAAD == false forever \n    // if(!isAuthenticatedAAD)\n    // {\n    //   instance.loginRedirect(loginRequest);\n    // }\n\n  });\n\n  const handleSignOut = event => {\n    alert('Sign Out');\n    instance.logout();\n    // instance.loginRedirect(loginRequest);\n  };\n  const handleSignIn = event => {\n    alert('Sign In');\n    instance.loginRedirect(loginRequest);\n    // instance.loginRedirect(loginRequest);\n  };\n  return (\n    <React.Fragment>\n          <p>Anyone can see this paragraph.</p>\n          {isAuthenticatedAAD && (\n            <React.Fragment>\n                <ProfileContent />\n                <Button onClick={handleSignOut}>\n                Sign Out\n              </Button>\n              </React.Fragment>\n              )}\n            {!isAuthenticatedAAD && (\n              <React.Fragment>\n                <p>No users are signed in!</p>\n                <Button onClick={handleSignIn}>\n                Sign In\n              </Button>\n              </React.Fragment>\n              )}\n\n\n\n      </React.Fragment>\n   );\n}\n*/\n/*\nconst MainContent = () => {    \n  return (\n      <div className=\"App\">\n          <ErrorBoundary>\n              <MsalAuthenticationTemplate interactionType=\"popup\" loadingComponent={InProgressComponent} errorComponent={ErrorComponent}>\n                  <ProfileContent />\n              </MsalAuthenticationTemplate>\n          </ErrorBoundary>\n\n          <UnauthenticatedTemplate>\n              <h5 className=\"card-title\">Please sign-in to see your profile information.</h5>\n          </UnauthenticatedTemplate>\n      </div>\n  );\n};\n*/\n/*\n            {isAuthenticatedAAD && (\n                <ProfileContent />\n            )}\n            {!isAuthenticatedAAD && (\n                <p>No users are signed in!</p>\n            )}\n\n  useEffect(() => {\n    // Update the document title using the browser API\n    if(!isAuthenticatedAAD)\n    {\n      instance.loginRedirect(loginRequest);\n    }\n\n  });\n  */\n /*\nfunction AppTest() {\n  const msalInstance = new PublicClientApplication(msalConfig);\n\n  return (\n      <MsalProvider instance={msalInstance}>\n        <Provider store={store}>\n          <ConnectedRouter history={history}>\n            <MainContent />\n          </ConnectedRouter>\n        </Provider>\n      </MsalProvider>\n  );\n}\n*/\n/*\nfunction AppTest() {\n\n  return (\n        <Provider store={store}>\n          <ConnectedRouter history={history}>\n            <App/>\n          </ConnectedRouter>\n        </Provider>\n  );\n}\n*/\n\n\nasync function main() \n{\n  const sagaMiddleware = createSagaMiddleware();\n  let store;\n\n  store = createStore(\n    reducers(history), // root reducer with router state\n    composeWithDevTools(\n      applyMiddleware(\n        routerMiddleware(history), // for dispatching history actions\n        sagaMiddleware,\n      ),\n    ),\n  );\n\n/*\n  if (process.env.NODE_ENV === 'production') {\n    disableReactDevTools();\n  }\n \n  // store = setupStore();\n  if (process.env.NODE_ENV === 'production') {\n    store = createStore(\n      reducers(history), // root reducer with router state\n      applyMiddleware(\n        routerMiddleware(history), // for dispatching history actions\n        sagaMiddleware,\n      ),\n    );\n  } else {\n    store = createStore(\n      reducers(history), // root reducer with router state\n      composeWithDevTools(\n        applyMiddleware(\n          routerMiddleware(history), // for dispatching history actions\n          sagaMiddleware,\n        ),\n      ),\n    );\n  }\n*/\n  console.log('After apply middleware');\n  //https://github.com/supasate/connected-react-router/blob/master/FAQ.md#how-to-navigate-with-redux-action\n\n  await setupServices(store.dispatch);\n  \n  //sagaMiddleware.run(handleNewMessage, { services, username })\n  sagaMiddleware.run(rootSaga);\n\n\n  ReactDOM.render(\n    // <React.StrictMode>\n    <Provider store={store}>\n      <ConnectedRouter history={history}>\n        {' '}\n        {/* place ConnectedRouter under Provider */}\n\n        <Authenticate />\n        </ConnectedRouter>\n    </Provider>,\n    // </React.StrictMode>,\n    document.getElementById(\"root\")\n  );\n\n  // If you want your app to work offline and load faster, you can change\n  // unregister() to register() below. Note this comes with some pitfalls.\n  // Learn more about service workers: https://bit.ly/CRA-PWA\n  serviceWorker.unregister();\n  \n}\n\nmain();\n\n/*\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n*/"],"sourceRoot":""}